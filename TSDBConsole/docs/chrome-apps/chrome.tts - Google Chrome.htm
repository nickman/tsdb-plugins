<!DOCTYPE html>
<!-- saved from url=(0041)http://developer.chrome.com/apps/tts.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>chrome.tts - Google Chrome</title>
    
    <link href="./chrome.tts - Google Chrome_files/site.css" rel="stylesheet" type="text/css">
    <link href="./chrome.tts - Google Chrome_files/print.css" rel="stylesheet" type="text/css" media="print">
    <link href="./chrome.tts - Google Chrome_files/prettify.css" rel="stylesheet" type="text/css">
    <link href="./chrome.tts - Google Chrome_files/css" rel="stylesheet" type="text/css">
    <script async="" src="./chrome.tts - Google Chrome_files/analytics.js"></script><script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-41980257-1');
      ga('send', 'pageview');
    </script>
  </head>

  <body>
    <div id="gc-topnav">
      <table><tbody><tr>
      <td id="chrome-logo">
        <a href="http://developer.chrome.com/apps/" title="Google Chrome Apps">
          <img src="./chrome.tts - Google Chrome_files/chrome-logo.png" alt=""> chrome
        </a>
        <div id="platform-chooser">
          <button id="platform-chooser-toggle" data-menu="platform-chooser-popup">
            apps ▾ 
          </button>
          <div id="platform-chooser-popup">
            <button class="apps" data-href="/apps/about_apps.html">apps</button>
            <button class="extensions" data-href="/extensions">extensions</button>
          </div>
        </div>
      </td>
      <td>
        <ul>
          <li>
            <a href="http://developer.chrome.com/apps/samples.html" title="Sample Apps (with source code)">Samples</a>
          </li>
          <li>
            <a href="http://groups.google.com/a/chromium.org/group/chromium-apps" title="Google Chrome Apps developer forum" target="_blank">Group</a>
          </li>
          <li>
            <a href="http://stackoverflow.com/tags/google-chrome-app/info" title="[google-chrome-app] tag on Stack Overflow" target="_blank">Stack overflow</a>
          </li>
        </ul>
      </td>
      </tr></tbody></table>
    </div>
    <div id="gc-topnav-space"></div>
    <div id="gc-container">
      <div id="gc-sidebar">
        <ul class="level1 ">
        <li class="level2">
              <span class="level2">Discover</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/about_apps.html" class="level3 ">What Are Chrome Apps?</a>
          </li>
          </ul>
        </li><li class="level2">
              <span class="level2">Develop</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/first_app.html" class="level3 ">Create Your First App</a>
          </li><li class="level3">
              <a class="button level3" href="javascript:void(0)">
                <span class="level3">Tutorials</span>
                <div class="toggleIndicator level3"></div>
              </a>
            <ul toggleable="" class="level3 hidden">
            <li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Learn with a Codelab</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab.html" class="level5 ">About this Codelab</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab1_setup.html" class="level5 ">1 - Set Up Development Environment</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab2_basic.html" class="level5 ">2 - Create Basic App</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab3_mvc.html" class="level5 ">3 - Create MVC</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab5_data.html" class="level5 ">4 - Save and Fetch Data</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab6_lifecycle.html" class="level5 ">5 - Manage App Lifecycle</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab7_useridentification.html" class="level5 ">6 - Access User's Data</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab8_webresources.html" class="level5 ">7 - Access Web Resources</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_codelab_10_publishing.html" class="level5 ">8 - Publish App</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">MVC Architecture &amp; Frameworks</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/app_frameworks.html" class="level5 ">About MVC Architecture</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/angular_framework.html" class="level5 ">Build Apps with AngularJS</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/sencha_framework.html" class="level5 ">Build Apps with Sencha Ext JS</a>
              </li>
              </ul>
            </li>
            </ul>
          </li><li class="level3">
              <a class="button level3" href="javascript:void(0)">
                <span class="level3">Chrome App Concepts</span>
                <div class="toggleIndicator level3"></div>
              </a>
            <ul toggleable="" class="level3 hidden">
            <li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">The Fundamentals</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/app_architecture.html" class="level5 ">App Architecture</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_lifecycle.html" class="level5 ">App Lifecycle</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/offline_apps.html" class="level5 ">Offline First</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_external.html" class="level5 ">External Content</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Security</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/contentSecurityPolicy.html" class="level5 ">Content Security Policy</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Cloud-Enable Your App</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                  <a class="button level5" href="javascript:void(0)">
                    <span class="level5">Cloud Messaging</span>
                    <div class="toggleIndicator level5"></div>
                  </a>
                <ul toggleable="" class="level5 hidden">
                <li class="level6">
                      <a href="http://developer.chrome.com/apps/cloudMessaging.html" class="level6 ">About Cloud Messaging</a>
                </li><li class="level6">
                      <a href="http://developer.chrome.com/apps/pushMessaging.html" class="level6 ">Client Reference</a>
                </li><li class="level6">
                      <a href="http://developer.chrome.com/apps/gcm_server.html" class="level6 ">Service Reference</a>
                </li><li class="level6">
                      <a href="http://developer.chrome.com/apps/gcm_tos.html" class="level6 ">Terms of Service</a>
                </li>
                </ul>
              </li><li class="level5">
                  <a class="button level5" href="javascript:void(0)">
                    <span class="level5">Cloud Storage</span>
                    <div class="toggleIndicator level5"></div>
                  </a>
                <ul toggleable="" class="level5 hidden">
                <li class="level6">
                      <a href="http://developer.chrome.com/apps/storage.html" class="level6 ">chrome.storage</a>
                </li>
                </ul>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_identity.html" class="level5 ">User Authentication</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Store and Retrieve Data</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/app_storage.html" class="level5 ">Storage APIs</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Use Low-Level System Services</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/app_usb.html" class="level5 ">USB</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_serial.html" class="level5 ">Serial</a>
              </li><li class="level5">
                    <a href="http://developer.chrome.com/apps/app_network.html" class="level5 ">Network Communications</a>
              </li>
              </ul>
            </li><li class="level4">
                <a class="button level4" href="javascript:void(0)">
                  <span class="level4">Interact with the Host Platform</span>
                  <div class="toggleIndicator level4"></div>
                </a>
              <ul toggleable="" class="level4 hidden">
              <li class="level5">
                    <a href="http://developer.chrome.com/apps/desktop_notifications.html" class="level5 ">Rich Notifications</a>
              </li>
              </ul>
            </li>
            </ul>
          </li>
          </ul>
        </li><li class="level2">
              <span class="level2">Distribute</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/publish_app.html" class="level3 ">Publish Your App</a>
          </li><li class="level3">
              <a class="button level3" href="javascript:void(0)">
                <span class="level3">Monetize Your App</span>
                <div class="toggleIndicator level3"></div>
              </a>
            <ul toggleable="" class="level3 hidden">
            <li class="level4">
                  <a href="http://developer.chrome.com/apps/google_wallet.html" class="level4 ">Google Wallet for Digital Goods</a>
            </li>
            </ul>
          </li><li class="level3">
                <a href="http://developer.chrome.com/apps/analytics.html" class="level3 ">Analytics</a>
          </li>
          </ul>
        </li><li class="level2">
              <span class="level2">Reference</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/api_index.html" class="level3 ">Chrome Platform APIs</a>
          </li><li class="level3">
                <a href="http://developer.chrome.com/apps/tags/webview.html" class="level3 ">Webview Tag</a>
          </li><li class="level3">
                <a href="http://developer.chrome.com/apps/api_other.html" class="level3 ">Web APIs</a>
          </li><li class="level3">
                <a href="http://developer.chrome.com/apps/manifest.html" class="level3 ">Manifest File Format</a>
          </li><li class="level3">
                <a href="http://developer.chrome.com/apps/app_deprecated.html" class="level3 ">Disabled Web Features</a>
          </li>
          </ul>
        </li><li class="level2">
              <span class="level2">Samples</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/samples.html" class="level3 ">Sample Apps</a>
          </li>
          </ul>
        </li><li class="level2">
              <span class="level2">Help</span>
          <ul class="level2 ">
          <li class="level3">
                <a href="http://developer.chrome.com/apps/faq.html" class="level3 ">FAQ</a>
          </li><li class="level3">
                <a href="https://groups.google.com/a/chromium.org/forum/#!forum/chromium-apps" class="level3 ">Google Groups</a>
          </li><li class="level3">
                <a href="http://stackoverflow.com/questions/tagged/google-chrome-app" class="level3 ">Stack Overflow</a>
          </li>
          </ul>
        </li>
        </ul>
      </div>
      <div id="gc-pagecontent">

<h1>chrome.tts</h1>
<div id="toc">
  <ol>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#overview" data-list-item="">Overview</a>
    </li>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#generating_speech" data-list-item="">Generating speech</a>
    </li>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#events" data-list-item="">Listening to events</a>
    </li>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#ssml" data-list-item="">SSML markup</a>
    </li>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#choosing_voice" data-list-item="">Choosing a voice</a>
    </li>
    <li class="separator">
      <a href="http://developer.chrome.com/apps/tts.html#types" data-list-item="">Types</a>
      <ol>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#type-TtsEvent" data-list-item="">TtsEvent</a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#type-TtsVoice" data-list-item="">TtsVoice</a>
        </li>
      </ol>
    </li>
    <li>
      <a href="http://developer.chrome.com/apps/tts.html#methods" data-list-item="">Methods</a>
      <ol>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-speak" data-list-item="">speak        </a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-stop" data-list-item="">stop        </a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-pause" data-list-item="">pause        </a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-resume" data-list-item="">resume        </a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-isSpeaking" data-list-item="">isSpeaking        </a>
        </li>
        <li>
          <a href="http://developer.chrome.com/apps/tts.html#method-getVoices" data-list-item="">getVoices        </a>
        </li>
      </ol>
    </li>
  </ol>
</div>

<table class="intro" id="intro">
  <tbody><tr>
    <td class="title">Description:</td>
    <td>
        Use the <code>chrome.tts</code> API to play synthesized text-to-speech (TTS). See also the related <a href="http://developer.chrome.com/extensions/ttsEngine.html">ttsEngine</a> API, which allows an extension to implement a speech engine.
                <br>
    </td>
  </tr>
  <tr>
    <td class="title">Availability:</td>
    <td>
        Stable since Chrome 14.
        <br>
    </td>
  </tr>
  <tr>
    <td class="title">Permissions:</td>
    <td>
        <span class="code">
        "tts"
                </span>
        <br>
    </td>
  </tr>
  <tr>
    <td class="title">Learn More:</td>
    <td>
        <a href="https://developers.google.com/live/shows/7320022-7001/">
        Chrome Office Hours: Text to Speech API
                </a>
        <br>
    </td>
  </tr>
</tbody></table>
<section>
<h2 id="overview">Overview</h2>

<p>Chrome provides native support for speech on Windows (using SAPI
5), Mac OS X, and Chrome OS, using speech synthesis capabilities
provided by the operating system. On all platforms, the user can
install extensions that register themselves as alternative speech
engines.</p>

<h2 id="generating_speech">Generating speech</h2>

<p>Call <code>speak()</code> from your extension or
Chrome App to speak. For example:</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="str">'Hello, world.'</span><span class="pun">);</span></pre>

<p>To stop speaking immediately, just call <code>stop()</code>:

</p><pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">stop</span><span class="pun">();</span></pre>

<p>You can provide options that control various properties of the speech,
such as its rate, pitch, and more. For example:</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="str">'Hello, world.'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="str">'rate'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2.0</span><span class="pun">});</span></pre>

<p>It's also a good idea to specify the language so that a synthesizer
supporting that language (and regional dialect, if applicable) is chosen.</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'Hello, world.'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="str">'lang'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'en-US'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'rate'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2.0</span><span class="pun">});</span></pre>

<p>By default, each call to <code>speak()</code> interrupts any
ongoing speech and speaks immediately. To determine if a call would be
interrupting anything, you can call <code>isSpeaking()</code>.  In
addition, you can use the <code>enqueue</code> option to cause this
utterance to be added to a queue of utterances that will be spoken
when the current utterance has finished.</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'Speak this first.'</span><span class="pun">);</span><span class="pln">
chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'Speak this next, when the first sentence is done.'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="str">'enqueue'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">});</span></pre>

<p>A complete description of all options can be found in the
<a href="http://developer.chrome.com/apps/tts.html#method-speak">speak</a> below.
Not all speech engines will support all options.</p>

<p>To catch errors and make sure you're calling <code>speak()</code>
correctly, pass a callback function that takes no arguments. Inside
the callback, check
<a href="http://developer.chrome.com/apps/runtime.html#property-lastError">runtime.lastError</a>
to see if there were any errors.</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    utterance</span><span class="pun">,</span><span class="pln">
    options</span><span class="pun">,</span><span class="pln">
    </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">chrome</span><span class="pun">.</span><span class="pln">runtime</span><span class="pun">.</span><span class="pln">lastError</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'Error: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> chrome</span><span class="pun">.</span><span class="pln">runtime</span><span class="pun">.</span><span class="pln">lastError</span><span class="pun">.</span><span class="pln">message</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">});</span></pre>

<p>The callback returns right away, before the engine has started
generating speech. The purpose of the callback is to alert you to
syntax errors in your use of the TTS API, not to catch all possible
errors that might occur in the process of synthesizing and outputting
speech. To catch these errors too, you need to use an event listener,
described below.</p>

<h2 id="events">Listening to events</h2>

<p>To get more real-time information about the status of synthesized speech,
pass an event listener in the options to <code>speak()</code>, like this:</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    utterance</span><span class="pun">,</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
      onEvent</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'Event '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">.</span><span class="pln">type </span><span class="str">' at position '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">.</span><span class="pln">charIndex</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">event</span><span class="pun">.</span><span class="pln">type </span><span class="pun">==</span><span class="pln"> </span><span class="str">'error'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'Error: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">.</span><span class="pln">errorMessage</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">
    callback</span><span class="pun">);</span></pre>

<p>Each event includes an event type, the character index of the current
speech relative to the utterance, and for error events, an optional
error message. The event types are:</p>

<ul>
  <li><code>'start'</code>: The engine has started speaking the utterance.
  </li><li><code>'word'</code>: A word boundary was reached. Use
          <code>event.charIndex</code> to determine the current speech
          position.
  </li><li><code>'sentence'</code>: A sentence boundary was reached. Use
          <code>event.charIndex</code> to determine the current speech
          position.
  </li><li><code>'marker'</code>: An SSML marker was reached. Use
          <code>event.charIndex</code> to determine the current speech
          position.
  </li><li><code>'end'</code>: The engine has finished speaking the utterance.
  </li><li><code>'interrupted'</code>: This utterance was interrupted by another
          call to <code>speak()</code> or <code>stop()</code> and did not
          finish.
  </li><li><code>'cancelled'</code>: This utterance was queued, but then
          cancelled by another call to <code>speak()</code> or
          <code>stop()</code> and never began to speak at all.
  </li><li><code>'error'</code>: An engine-specific error occurred and
          this utterance cannot be spoken.
          Check <code>event.errorMessage</code> for details.
</li></ul>

<p>Four of the event types—<code>'end'</code>, <code>'interrupted'</code>,
<code>'cancelled'</code>, and <code>'error'</code>—are <i>final</i>.
After one of those events is received, this utterance will no longer
speak and no new events from this utterance will be received.</p>

<p>Some voices may not support all event types, and some voices may not
send any events at all. If you do not want to use a voice unless it sends
certain events, pass the events you require in the
<code>requiredEventTypes</code> member of the options object, or use
<code>getVoices()</code> to choose a voice that meets your requirements.
Both are documented below.</p>

<h2 id="ssml">SSML markup</h2>

<p>Utterances used in this API may include markup using the
<a href="http://www.w3.org/TR/speech-synthesis">Speech Synthesis Markup
Language (SSML)</a>. If you use SSML, the first argument to
<code>speak()</code> should be a complete SSML document with an XML
header and a top-level <code>&lt;speak&gt;</code> tag, not a document
fragment.</p>

<p>For example:</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">speak</span><span class="pun">(</span><span class="pln">
    </span><span class="str">'&lt;?xml version="1.0"?&gt;'</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
    </span><span class="str">'&lt;speak&gt;'</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
    </span><span class="str">'  The &lt;emphasis&gt;second&lt;/emphasis&gt; '</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
    </span><span class="str">'  word of this sentence was emphasized.'</span><span class="pln"> </span><span class="pun">+</span><span class="pln">
    </span><span class="str">'&lt;/speak&gt;'</span><span class="pun">);</span></pre>

<p>Not all speech engines will support all SSML tags, and some may not support
SSML at all, but all engines are required to ignore any SSML they don't
support and to still speak the underlying text.</p>

<h2 id="choosing_voice">Choosing a voice</h2>

<p>By default, Chrome chooses the most appropriate voice for each
utterance you want to speak, based on the language and gender. On most
Windows, Mac OS X, and Chrome OS systems, speech synthesis provided by
the operating system should be able to speak any text in at least one
language. Some users may have a variety of voices available, though,
from their operating system and from speech engines implemented by other
Chrome extensions. In those cases, you can implement custom code to choose
the appropriate voice, or to present the user with a list of choices.</p>

<p>To get a list of all voices, call <code>getVoices()</code> and pass it
a function that receives an array of <code>TtsVoice</code> objects as its
argument:</p>

<pre class="prettyprint"><span class="pln">chrome</span><span class="pun">.</span><span class="pln">tts</span><span class="pun">.</span><span class="pln">getVoices</span><span class="pun">(</span><span class="pln">
    </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">voices</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> voices</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'Voice '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> i </span><span class="pun">+</span><span class="pln"> </span><span class="str">':'</span><span class="pun">);</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'  name: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> voices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">voiceName</span><span class="pun">);</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'  lang: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> voices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">lang</span><span class="pun">);</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'  gender: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> voices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">gender</span><span class="pun">);</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'  extension id: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> voices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">extensionId</span><span class="pun">);</span><span class="pln">
        console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'  event types: '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> voices</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">eventTypes</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">});</span></pre>
</section>
<section>
<h2 id="api-reference-header" title="">chrome.tts reference</h2>
<div class="api_reference">
    <h2 id="types">Types</h2>
      <div>
        <h3 id="type-TtsEvent">TtsEvent</h3>
        <div>
          <dd>An event from the TTS engine to communicate the status of an utterance.</dd>
            <h3 id="TtsEvent-properties" class="capitalize" title="">
              properties of <a href="http://developer.chrome.com/apps/tts.html#type-TtsEvent">TtsEvent</a>
            </h3>
            <dd>
              <dl>
                <div>
                  <a name="property-TtsEvent-type"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsEvent-type" title="">
                        type
                        <span class="property">
                          (
                            enum of <code>"start"</code>, <code>"end"</code>, <code>"word"</code>, <code>"sentence"</code>, <code>"marker"</code>, <code>"interrupted"</code>, <code>"cancelled"</code>, <code>"error"</code>, <code>"pause"</code>, or <code>"resume"</code>
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The type can be 'start' as soon as speech has started, 'word' when a word boundary is reached, 'sentence' when a sentence boundary is reached, 'marker' when an SSML mark element is reached, 'end' when the end of the utterance is reached, 'interrupted' when the utterance is stopped or interrupted before reaching the end, 'cancelled' when it's removed from the queue before ever being synthesized, or 'error' when any other error occurs. When pausing speech, a 'pause' event is fired if a particular utterance is paused in the middle, and 'resume' if an utterance resumes speech. Note that pause and resume events may not fire if speech is paused in-between utterances.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsEvent-charIndex"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsEvent-charIndex" title="">
                        charIndex
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            double
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The index of the current character in the utterance.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsEvent-errorMessage"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsEvent-errorMessage" title="">
                        errorMessage
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            string
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The error description, if the event type is 'error'.
                    </dd>
                  </dl>
                </div>
              </dl>
            </dd>
        </div>
      </div>
      <div>
        <h3 id="type-TtsVoice">TtsVoice</h3>
        <div>
          <dd>A description of a voice available for speech synthesis.</dd>
            <h3 id="TtsVoice-properties" class="capitalize" title="">
              properties of <a href="http://developer.chrome.com/apps/tts.html#type-TtsVoice">TtsVoice</a>
            </h3>
            <dd>
              <dl>
                <div>
                  <a name="property-TtsVoice-voiceName"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-voiceName" title="">
                        voiceName
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            string
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The name of the voice.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsVoice-lang"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-lang" title="">
                        lang
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            string
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The language that this voice supports, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsVoice-gender"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-gender" title="">
                        gender
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            enum of <code>"male"</code>, or <code>"female"</code>
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      This voice's gender.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsVoice-remote"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-remote" title="">
                        remote
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            boolean
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      If true, the synthesis engine is a remote network resource. It may be higher latency and may incur bandwidth costs.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsVoice-extensionId"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-extensionId" title="">
                        extensionId
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            string
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      The ID of the extension providing this voice.
                    </dd>
                  </dl>
                </div><div>
                  <a name="property-TtsVoice-eventTypes"></a>
                  <dl>
                    <dt>
                      <h4 id="property-TtsVoice-eventTypes" title="">
                        eventTypes
                        <span class="property">
                          (
                            <span class="optional">optional</span>
                            array of string
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      All of the callback event types that this voice is capable of sending.
                    </dd>
                  </dl>
                </div>
              </dl>
            </dd>
        </div>
      </div>
    <h2 id="methods">Methods</h2>
      <div>
        <h3 id="method-speak">speak
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.speak</span>(<span>string utterance</span>, <span class="optional">object options</span>, <span class="optional">function callback</span>)
        </div>
        </div>
        <div class="description">
          <p>
            Speaks text using a text-to-speech engine.
          </p>
          <h4 title="">Parameters</h4>
          <dl>
              <div>
                <a name="property-speak-utterance"></a>
                <dl>
                  <dt>
                    <h4 id="property-speak-utterance" title="">
                      utterance
                      <span class="property">
                        (
                          string
                        )
                      </span>
                    </h4>
                  </dt>
                  <dd>
                    The text to speak, either plain text or a complete, well-formed SSML document. Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters.
                  </dd>
                </dl>
              </div>
              <div>
                <a name="property-speak-options"></a>
                <dl>
                  <dt>
                    <h4 id="property-speak-options" title="">
                      options
                      <span class="property">
                        (
                          <span class="optional">optional</span>
                          object
                        )
                      </span>
                    </h4>
                  </dt>
                  <dd>
                    The speech options.
                  </dd>
                </dl>
                <dd>
                  <h4 title="">Properties</h4>
                  <dl>
                    <div>
                      <a name="property-options-enqueue"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-enqueue" title="">
                            enqueue
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                boolean
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          If true, enqueues this utterance if TTS is already in progress. If false (the default), interrupts any current speech and flushes the speech queue before speaking this new utterance.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-voiceName"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-voiceName" title="">
                            voiceName
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                string
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          The name of the voice to use for synthesis. If empty, uses any available voice.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-extensionId"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-extensionId" title="">
                            extensionId
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                string
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          The extension ID of the speech engine to use, if known.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-lang"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-lang" title="">
                            lang
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                string
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          The language to be used for synthesis, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-gender"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-gender" title="">
                            gender
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                enum of <code>"male"</code>, or <code>"female"</code>
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          Gender of voice for synthesized speech.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-rate"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-rate" title="">
                            rate
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                double
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          Speaking rate relative to the default rate for this voice. 1.0 is the default rate, normally around 180 to 220 words per minute. 2.0 is twice as fast, and 0.5 is half as fast. Values below 0.1 or above 10.0 are strictly disallowed, but many voices will constrain the minimum and maximum rates further—for example a particular voice may not actually speak faster than 3 times normal even if you specify a value larger than 3.0.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-pitch"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-pitch" title="">
                            pitch
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                double
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being highest. 1.0 corresponds to a voice's default pitch.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-volume"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-volume" title="">
                            volume
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                double
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being highest, with a default of 1.0.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-requiredEventTypes"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-requiredEventTypes" title="">
                            requiredEventTypes
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                array of string
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          The TTS event types the voice must support.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-desiredEventTypes"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-desiredEventTypes" title="">
                            desiredEventTypes
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                array of string
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          The TTS event types that you are interested in listening to. If missing, all event types may be sent.
                        </dd>
                      </dl>
                    </div><div>
                      <a name="property-options-onEvent"></a>
                      <dl>
                        <dt>
                          <h4 id="property-options-onEvent" title="">
                            onEvent
                            <span class="property">
                              (
                                <span class="optional">optional</span>
                                function
                              )
                            </span>
                          </h4>
                        </dt>
                        <dd>
                          This function is called with events that occur in the process of speaking the utterance.
                        </dd>
                      </dl>
                      <dd>
                        <dl>
                          <h4 title="">Parameters</h4>
                          <div>
                            <a name="property-onEvent-event"></a>
                            <dl>
                              <dt>
                                <h4 id="property-onEvent-event" title="">
                                  event
                                  <span class="property">
                                    (
                                      <a href="http://developer.chrome.com/apps/tts.html#type-TtsEvent">TtsEvent</a>
                                    )
                                  </span>
                                </h4>
                              </dt>
                              <dd>
                                The update event from the text-to-speech engine indicating the status of this utterance.
                              </dd>
                            </dl>
                          </div>
                        </dl>
                      </dd>
                    </div>
                  </dl>
                </dd>
              </div>
              <div>
                <a name="property-speak-callback"></a>
                <dl>
                  <dt>
                    <h4 id="property-speak-callback" title="">
                      callback
                      <span class="property">
                        (
                          <span class="optional">optional</span>
                          function
                        )
                      </span>
                    </h4>
                  </dt>
                  <dd>
                    Called right away, before speech finishes. Check chrome.runtime.lastError to make sure there were no errors. Use options.onEvent to get more detailed feedback.
                  </dd>
                </dl>
              </div>
          </dl>
            <p>
                  If you specify the <em>callback</em> parameter, it should
                  specify a function that looks like this:
            </p>
            <pre class="prettyprint"><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="subdued"><span class="pun">{...}</span></span><span class="pun">;</span></pre>
        </div>
      </div>
      <div>
        <h3 id="method-stop">stop
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.stop</span>()
        </div>
        </div>
        <div class="description">
          <p>
            Stops any current speech and flushes the queue of any pending utterances. In addition, if speech was paused, it will now be un-paused for the next call to speak.
          </p>
        </div>
      </div>
      <div>
        <h3 id="method-pause">pause
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.pause</span>()
        </div>
        </div>
        <div class="description">
          <p>
            Pauses speech synthesis, potentially in the middle of an utterance. A call to resume or stop will un-pause speech.
          </p>
        </div>
      </div>
      <div>
        <h3 id="method-resume">resume
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.resume</span>()
        </div>
        </div>
        <div class="description">
          <p>
            If speech was paused, resumes speaking where it left off.
          </p>
        </div>
      </div>
      <div>
        <h3 id="method-isSpeaking">isSpeaking
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.isSpeaking</span>(<span class="optional">function callback</span>)
        </div>
        </div>
        <div class="description">
          <p>
            Checks whether the engine is currently speaking. On Mac OS X, the result is true whenever the system speech engine is speaking, even if the speech wasn't initiated by Chrome.
          </p>
          <h4 title="">Parameters</h4>
          <dl>
              <div>
                <a name="property-isSpeaking-callback"></a>
                <dl>
                  <dt>
                    <h4 id="property-isSpeaking-callback" title="">
                      callback
                      <span class="property">
                        (
                          <span class="optional">optional</span>
                          function
                        )
                      </span>
                    </h4>
                  </dt>
                  <dd>
                  </dd>
                </dl>
              </div>
          </dl>
            <p>
                  If you specify the <em>callback</em> parameter, it should
                  specify a function that looks like this:
            </p>
            <pre class="prettyprint"><span class="kwd">function</span><span class="pun">(</span><span class="kwd">boolean</span><span class="pln"> speaking</span><span class="pun">)</span><span class="pln"> </span><span class="subdued"><span class="pun">{...}</span></span><span class="pun">;</span></pre>
            <dl>
                <div>
                  <a name="property-callback-speaking"></a>
                  <dl>
                    <dt>
                      <h4 id="property-callback-speaking" title="">
                        speaking
                        <span class="property">
                          (
                            boolean
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      True if speaking, false otherwise.
                    </dd>
                  </dl>
                </div>
            </dl>
        </div>
      </div>
      <div>
        <h3 id="method-getVoices">getVoices
        </h3>
        <div class="summary uncapitalize">
        <div class="line">
        <span>chrome.tts.getVoices</span>(<span class="optional">function callback</span>)
        </div>
        </div>
        <div class="description">
          <p>
            Gets an array of all available voices.
          </p>
          <h4 title="">Parameters</h4>
          <dl>
              <div>
                <a name="property-getVoices-callback"></a>
                <dl>
                  <dt>
                    <h4 id="property-getVoices-callback" title="">
                      callback
                      <span class="property">
                        (
                          <span class="optional">optional</span>
                          function
                        )
                      </span>
                    </h4>
                  </dt>
                  <dd>
                  </dd>
                </dl>
              </div>
          </dl>
            <p>
                  If you specify the <em>callback</em> parameter, it should
                  specify a function that looks like this:
            </p>
            <pre class="prettyprint"><span class="kwd">function</span><span class="pun">(</span><span class="pln">array of </span><a href="http://developer.chrome.com/apps/tts.html#type-TtsVoice"><span class="typ">TtsVoice</span></a><span class="pln"> voices</span><span class="pun">)</span><span class="pln"> </span><span class="subdued"><span class="pun">{...}</span></span><span class="pun">;</span></pre>
            <dl>
                <div>
                  <a name="property-callback-voices"></a>
                  <dl>
                    <dt>
                      <h4 id="property-callback-voices" title="">
                        voices
                        <span class="property">
                          (
                            array of <a href="http://developer.chrome.com/apps/tts.html#type-TtsVoice">TtsVoice</a>
                          )
                        </span>
                      </h4>
                    </dt>
                    <dd>
                      Array of <a href="http://developer.chrome.com/apps/tts.html#type-TtsVoice">TtsVoice</a> objects representing the available voices for speech synthesis.
                    </dd>
                  </dl>
                </div>
            </dl>
        </div>
      </div>
</div>
</section>
      </div>
    </div>
  

  <div id="gc-footer">
    <button class="google-button hidden" id="scroll-to-top">↑</button>
    <button class="google-button" id="send-feedback">Send Feedback</button>
    <div class="text">
      <p>
        Except as otherwise <a href="http://code.google.com/policies.html#restrictions">noted</a>,
        the content of this page is licensed under the <a rel="license" href="http://creativecommons.org/licenses/by/3.0/">Creative Commons
        Attribution 3.0 License</a>, and code samples are licensed under the
        <a rel="license" href="http://code.google.com/google_bsd_license.html">BSD License</a>.
      </p>
      <p>
        ©2013 Google
      </p>
      <script src="./chrome.tts - Google Chrome_files/platform_chooser.js" type="text/javascript"></script>
      <script src="./chrome.tts - Google Chrome_files/popup.js" type="text/javascript"></script>
      <script src="./chrome.tts - Google Chrome_files/prettify.js" type="text/javascript"></script>
      <script src="./chrome.tts - Google Chrome_files/scroll.js" type="text/javascript"></script>
      <script src="./chrome.tts - Google Chrome_files/sidebar.js" type="text/javascript"></script>
      <script src="./chrome.tts - Google Chrome_files/tabs.js" type="text/javascript"></script>
      <script>
        (function() {
          // Auto syntax highlight all pre tags.
          var preElements = document.getElementsByTagName('pre');
          for (var i = 0; i < preElements.length; i++) {
            var preElement = preElements[i];
            preElement.classList.add('prettyprint');
            var datasetFilename = preElement.getAttribute('data-filename');
            if (datasetFilename) {
              var filename = document.createElement('div');
              filename.className = 'filename nocode';
              filename.textContent = datasetFilename;
              preElement.insertBefore(filename, preElement.firstChild);
            }
          }
          prettyPrint();
        })();
      </script>

      <!-- Feedback. -->
      <script type="text/javascript" src="./chrome.tts - Google Chrome_files/api.js"></script>
      <script type="text/javascript">
        (function() {
         document.getElementById('send-feedback').addEventListener('click', function() {
           userfeedback.api.startFeedback({ productId: 86265 });
         });
        })();
      </script>
    </div>
  </div>

</body></html>