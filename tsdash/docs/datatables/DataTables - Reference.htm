<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- saved from url=(0025)http://datatables.net/ref -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<title>DataTables - Reference</title>
		
		<link rel="shortcut icon" type="image/ico" href="http://datatables.net/media/images/favicon.ico">
		<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.datatables.net/rss.xml">
		
		<style type="text/css" media="screen">
			@import "/media/css/site.ccss";
			th { white-space: nowrap; }
			div.dataTables_filter input { padding: 5px; width: 250px; }
			div.innerDetails { display: none; }
			
			div.innerDetails {
				margin: 1em;
			}
			div.column_details { float: left; width: 45%; }
			div.column_details table td { font-size: 13px; }
			div.column_code { float: left; width: 54%; }
			div.purpose { height: 46px; overflow: hidden }
			div.purpose p:first-child { margin-top: 0 }
			div.purpose p:last-child { margin-bottom: 0 }
			tr.odd { background-color: #f6f6ff; cursor: pointer; *cursor: hand }
			tr.even { background-color: white; cursor: pointer; *cursor: hand }
			td.details { cursor: default !important }
			td.dataTables_empty { text-align: center; }
			table.display>tbody>tr { border-left: 1px solid #ccc; border-right: 1px solid #ccc }
			table.display { border-bottom: 1px solid #ccc; }
		</style>
		
		<script type="text/javascript" async="" src="./DataTables - Reference_files/ga.js"></script><script type="text/javascript" src="./DataTables - Reference_files/complete.min.js"></script>
		<script type="text/javascript" src="./DataTables - Reference_files/jquery.dataTables.min.js"></script>
		<script type="text/javascript">
			var aData = [{"type":"function","parameter":"$","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Perform a jQuery selector action on the table's TR elements (from the tbody) and\nreturn the resulting jQuery object.<\/p><\/div><\/div>","purpose":"<p>Perform a jQuery selector action on the table's TR elements (from the tbody) and\nreturn the resulting jQuery object.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n\n     \/\/ Highlight every second row\n     oTable.$('tr:odd').css('backgroundColor', 'blue');\n   } );\n\n \n   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n\n     \/\/ Filter to rows with 'Webkit' in them, add a background colour and then\n     \/\/ remove the filter, thus highlighting the 'Webkit' rows only.\n     oTable.fnFilter('Webkit');\n     oTable.$('tr', {\"filter\": \"applied\"}).css('backgroundColor', 'blue');\n     oTable.fnFilter('');\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>|<i class=\"doc_param\">node<\/i>|<i class=\"doc_param\">jQuery<\/i>}: jQuery selector or node collection to act on<\/li><li>{<i class=\"doc_param\">object<\/i>}: Optional parameters for modifying the rows to be included<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">none<\/span>]: Select TR elements that meet the current filter\n   criterion (\"applied\") or all TR elements (i.e. no filter).<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">current<\/span>]: Order of the TR elements in the processed array.\n   Can be either 'current', whereby the current sorting of the table is used, or\n   'original' whereby the original order the data was read into the table is used.<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">all<\/span>]: Limit the selection to the currently displayed page\n   (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n   'current' and filter is 'applied', regardless of what they might be given as.<\/li><\/ol>","returns":"{<i class=\"doc_param\">object<\/i>}: jQuery object, filtered by the given selector.","group":"API"},{"type":"function","parameter":"_","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Almost identical to $ in operation, but in this case returns the data for the matched\r\nrows - as such, the jQuery selector used should ma...<\/div><\/div>","purpose":"<p>Almost identical to $ in operation, but in this case returns the data for the matched\r\nrows - as such, the jQuery selector used should match TR row nodes or TD\/TH cell nodes\r\nrather than any descendants, so the data can be obtained for the row\/cell. If matching\r\nrows are found, the data returned is the original data array\/object that was used to create the row (or a generated array if from a DOM source).<\/p>\r\n\r\n<p>This method is often useful in-combination with $ where both functions are given the\r\nsame parameters and the array indexes will match identically.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n\n     \/\/ Get the data from the first row in the table\n     var data = oTable._('tr:first');\n\n     \/\/ Do something useful with the data\n     alert( \"First cell is: \"+data[0] );\n   } );\n\n \n   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n\n     \/\/ Filter to 'Webkit' and get all data for \n     oTable.fnFilter('Webkit');\n     var data = oTable._('tr', {\"filter\": \"applied\"});\n     \n     \/\/ Do something with the data\n     alert( data.length+\" rows matched the filter\" );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>|<i class=\"doc_param\">node<\/i>|<i class=\"doc_param\">jQuery<\/i>}: jQuery selector or node collection to act on<\/li><li>{<i class=\"doc_param\">object<\/i>}: Optional parameters for modifying the rows to be included<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">none<\/span>]: Select elements that meet the current filter\n   criterion (\"applied\") or all elements (i.e. no filter).<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">current<\/span>]: Order of the data in the processed array.\n   Can be either 'current', whereby the current sorting of the table is used, or\n   'original' whereby the original order the data was read into the table is used.<\/li><li>{<i class=\"doc_param\">string<\/i>} [default=<span class=\"doc_default\">all<\/span>]: Limit the selection to the currently displayed page\n   (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n   'current' and filter is 'applied', regardless of what they might be given as.<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>}: Data for the matched elements. If any elements, as a result of the\n   selector, were not TR, TD or TH elements in the DataTable, they will have a null \n   entry in the array.","group":"API"},{"type":"function","parameter":"fnAddData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Add a single new row or multiple rows of data to the table. Please note\nthat this is suitable for client-side processing only - if you ar...<\/div><\/div>","purpose":"<p>Add a single new row or multiple rows of data to the table. Please note\nthat this is suitable for client-side processing only - if you are using \nserver-side processing (i.e. \"bServerSide\": true), then to add data, you\nmust add it to the data source, i.e. the server-side, through an Ajax call.<\/p>","default":"","param_type":"function","code":"   \/\/ Global var for counter\n   var giCount = 2;\n   \n   $(document).ready(function() {\n     $('#example').dataTable();\n   } );\n   \n   function fnClickAddRow() {\n     $('#example').dataTable().fnAddData( [\n       giCount+\".1\",\n       giCount+\".2\",\n       giCount+\".3\",\n       giCount+\".4\" ]\n     );\n       \n     giCount++;\n   }","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">array<\/i>|<i class=\"doc_param\">object<\/i>}: The data to be added to the table. This can be:\n   <ul>\n     <li>1D array of data - add a single row with the data provided<\/li>\n     <li>2D array of arrays - add multiple rows in a single call<\/li>\n     <li>object - data object when using <i>mData<\/i><\/li>\n     <li>array of objects - multiple data objects when using <i>mData<\/i><\/li>\n   <\/ul><\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: redraw the table or not<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>}: An array of integers, representing the list of indexes in \n   <i>aoData<\/i> ({@link DataTable.models.oSettings}) that have been added to \n   the table.","group":"API"},{"type":"function","parameter":"fnAdjustColumnSizing","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function will make DataTables recalculate the column sizes, based on the data \ncontained in the table and the sizes applied to the c...<\/div><\/div>","purpose":"<p>This function will make DataTables recalculate the column sizes, based on the data \ncontained in the table and the sizes applied to the columns (in the DOM, CSS or \nthrough the sWidth parameter). This can be useful when the width of the table's \nparent element changes (for example a window resize).<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable( {\n       \"sScrollY\": \"200px\",\n       \"bPaginate\": false\n     } );\n     \n     $(window).bind('resize', function () {\n       oTable.fnAdjustColumnSizing();\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">boolean<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Redraw the table or not, you will typically want to<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnClearTable","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Quickly and simply clear a table<\/p><\/div><\/div>","purpose":"<p>Quickly and simply clear a table<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n     oTable.fnClearTable();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: redraw the table or not<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnClose","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The exact opposite of 'opening' a row, this function will close any rows which \nare currently 'open'.<\/p><\/div><\/div>","purpose":"<p>The exact opposite of 'opening' a row, this function will close any rows which \nare currently 'open'.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable;\n     \n     \/\/ 'open' an information row when a row is clicked on\n     $('#example tbody tr').click( function () {\n       if ( oTable.fnIsOpen(this) ) {\n         oTable.fnClose( this );\n       } else {\n         oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n       }\n     } );\n     \n     oTable = $('#example').dataTable();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: the table row to 'close'<\/li><\/ol>","returns":"{<i class=\"doc_param\">int<\/i>}: 0 on success, or 1 if failed (can't find the row)","group":"API"},{"type":"function","parameter":"fnDeleteRow","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Remove a row for the table<\/p><\/div><\/div>","purpose":"<p>Remove a row for the table<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Immediately remove the first row\n     oTable.fnDeleteRow( 0 );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">mixed<\/i>}: The index of the row from aoData to be deleted, or\n   the TR element you want to delete<\/li><li>{<i class=\"doc_param\">function<\/i>|<i class=\"doc_param\">null<\/i>}: Callback function<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Redraw the table or not<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>}: The row that was deleted","group":"API"},{"type":"function","parameter":"fnDestroy","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Restore the table to it's original state in the DOM by removing all of DataTables \nenhancements, alterations to the DOM structure of the ...<\/div><\/div>","purpose":"<p>Restore the table to it's original state in the DOM by removing all of DataTables \nenhancements, alterations to the DOM structure of the table and event listeners.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     \/\/ This example is fairly pointless in reality, but shows how fnDestroy can be used\n     var oTable = $('#example').dataTable();\n     oTable.fnDestroy();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">boolean<\/i>} [default=<span class=\"doc_default\">false<\/span>]: Completely remove the table from the DOM<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnDraw","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Redraw the table<\/p><\/div><\/div>","purpose":"<p>Redraw the table<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n     oTable.fnDraw();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Re-filter and resort (if enabled) the table before the draw.<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnFilter","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Filter the input based on data<\/p><\/div><\/div>","purpose":"<p>Filter the input based on data<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Sometime later - filter...\n     oTable.fnFilter( 'test string' );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: String to filter the table on<\/li><li>{<i class=\"doc_param\">int<\/i>|<i class=\"doc_param\">null<\/i>}: Column to limit filtering to<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">false<\/span>]: Treat as regular expression or not<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Perform smart filtering or not<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Show the input global filter in it's input box(es)<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Do case-insensitive matching (true) or not (false)<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnGetData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Get the data for the whole table, an individual row or an individual cell based on the \nprovided parameters.<\/p><\/div><\/div>","purpose":"<p>Get the data for the whole table, an individual row or an individual cell based on the \nprovided parameters.<\/p>","default":"","param_type":"function","code":"   \/\/ Row data\n   $(document).ready(function() {\n     oTable = $('#example').dataTable();\n\n     oTable.$('tr').click( function () {\n       var data = oTable.fnGetData( this );\n       \/\/ ... do something with the array \/ object of data for the row\n     } );\n   } );\n\n \n   \/\/ Individual cell data\n   $(document).ready(function() {\n     oTable = $('#example').dataTable();\n\n     oTable.$('td').click( function () {\n       var sData = oTable.fnGetData( this );\n       alert( 'The cell clicked on had the value of '+sData );\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">int<\/i>|<i class=\"doc_param\">node<\/i>}: A TR row node, TD\/TH cell node or an integer. If given as\n   a TR node then the data source for the whole row will be returned. If given as a\n   TD\/TH cell node then iCol will be automatically calculated and the data for the\n   cell returned. If given as an integer, then this is treated as the aoData internal\n   data index for the row (see fnGetPosition) and the data for that row used.<\/li><li>{<i class=\"doc_param\">int<\/i>}: Optional column index that you want the data of.<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>|<i class=\"doc_param\">object<\/i>|<i class=\"doc_param\">string<\/i>}: If mRow is undefined, then the data for all rows is\n   returned. If mRow is defined, just data for that row, and is iCol is\n   defined, only data for the designated cell is returned.","group":"API"},{"type":"function","parameter":"fnGetNodes","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Get an array of the TR nodes that are used in the table's body. Note that you will \ntypically want to use the '$' API method in preferenc...<\/div><\/div>","purpose":"<p>Get an array of the TR nodes that are used in the table's body. Note that you will \ntypically want to use the '$' API method in preference to this as it is more \nflexible.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Get the nodes from the table\n     var nNodes = oTable.fnGetNodes( );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">int<\/i>}: Optional row index for the TR element you want<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>|<i class=\"doc_param\">node<\/i>}: If iRow is undefined, returns an array of all TR elements\n   in the table's body, or iRow is defined, just the TR element requested.","group":"API"},{"type":"function","parameter":"fnGetPosition","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Get the array indexes of a particular cell from it's DOM element\nand column index including hidden columns<\/p><\/div><\/div>","purpose":"<p>Get the array indexes of a particular cell from it's DOM element\nand column index including hidden columns<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     $('#example tbody td').click( function () {\n       \/\/ Get the position of the current data from the node\n       var aPos = oTable.fnGetPosition( this );\n       \n       \/\/ Get the data array for this row\n       var aData = oTable.fnGetData( aPos[0] );\n       \n       \/\/ Update the data array and return the value\n       aData[ aPos[1] ] = 'clicked';\n       this.innerHTML = 'clicked';\n     } );\n     \n     \/\/ Init DataTables\n     oTable = $('#example').dataTable();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: this can either be a TR, TD or TH in the table's body<\/li><\/ol>","returns":"{<i class=\"doc_param\">int<\/i>}: If nNode is given as a TR, then a single index is returned, or\n   if given as a cell, an array of [row index, column index (visible), \n   column index (all)] is given.","group":"API"},{"type":"function","parameter":"fnIsOpen","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Check to see if a row is 'open' or not.<\/p><\/div><\/div>","purpose":"<p>Check to see if a row is 'open' or not.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable;\n     \n     \/\/ 'open' an information row when a row is clicked on\n     $('#example tbody tr').click( function () {\n       if ( oTable.fnIsOpen(this) ) {\n         oTable.fnClose( this );\n       } else {\n         oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n       }\n     } );\n     \n     oTable = $('#example').dataTable();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: the table row to check<\/li><\/ol>","returns":"{<i class=\"doc_param\">boolean<\/i>}: true if the row is currently open, false otherwise","group":"API"},{"type":"function","parameter":"fnOpen","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function will place a new row directly after a row which is currently \non display on the page, with the HTML contents that is passed...<\/div><\/div>","purpose":"<p>This function will place a new row directly after a row which is currently \non display on the page, with the HTML contents that is passed into the \nfunction. This can be used, for example, to ask for confirmation that a \nparticular record should be deleted.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable;\n     \n     \/\/ 'open' an information row when a row is clicked on\n     $('#example tbody tr').click( function () {\n       if ( oTable.fnIsOpen(this) ) {\n         oTable.fnClose( this );\n       } else {\n         oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n       }\n     } );\n     \n     oTable = $('#example').dataTable();\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: The table row to 'open'<\/li><li>{<i class=\"doc_param\">string<\/i>|<i class=\"doc_param\">node<\/i>|<i class=\"doc_param\">jQuery<\/i>}: The HTML to put into the row<\/li><li>{<i class=\"doc_param\">string<\/i>}: Class to give the new TD cell<\/li><\/ol>","returns":"{<i class=\"doc_param\">node<\/i>}: The row opened. Note that if the table row passed in as the\n   first parameter, is not found in the table, this method will silently\n   return.","group":"API"},{"type":"function","parameter":"fnPageChange","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Change the pagination - provides the internal logic for pagination in a simple API \nfunction. With this function you can have a DataTable...<\/div><\/div>","purpose":"<p>Change the pagination - provides the internal logic for pagination in a simple API \nfunction. With this function you can have a DataTables table go to the next, \nprevious, first or last pages.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     oTable.fnPageChange( 'next' );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>|<i class=\"doc_param\">int<\/i>}: Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n   or page number to jump to (integer), note that page 0 is the first page.<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Redraw the table or not<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnSetColumnVis","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Show a particular column<\/p><\/div><\/div>","purpose":"<p>Show a particular column<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Hide the second column after initialisation\n     oTable.fnSetColumnVis( 1, false );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">int<\/i>}: The column whose display should be changed<\/li><li>{<i class=\"doc_param\">bool<\/i>}: Show (true) or hide (false) the column<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Redraw the table or not<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnSettings","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Get the settings for a particular table for external manipulation<\/p><\/div><\/div>","purpose":"<p>Get the settings for a particular table for external manipulation<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     var oSettings = oTable.fnSettings();\n     \n     \/\/ Show an example parameter from the settings\n     alert( oSettings._iDisplayStart );\n   } );","inputs":"","returns":"{<i class=\"doc_param\">object<\/i>}: DataTables settings object. See \n   {@link DataTable.models.oSettings}","group":"API"},{"type":"function","parameter":"fnSort","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Sort the table by a particular column<\/p><\/div><\/div>","purpose":"<p>Sort the table by a particular column<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Sort immediately with columns 0 and 1\n     oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">int<\/i>}: the data index to sort on. Note that this will not match the \n   'display index' if you have hidden data entries<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnSortListener","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Attach a sort listener to an element for a given column<\/p><\/div><\/div>","purpose":"<p>Attach a sort listener to an element for a given column<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     \n     \/\/ Sort on column 1, when 'sorter' is clicked on\n     oTable.fnSortListener( document.getElementById('sorter'), 1 );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: the element to attach the sort listener to<\/li><li>{<i class=\"doc_param\">int<\/i>}: the column that a click on this node will sort on<\/li><li>{<i class=\"doc_param\">function<\/i>}: callback function when sort is run<\/li><\/ol>","returns":"","group":"API"},{"type":"function","parameter":"fnUpdate","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Update a table cell or row - this method will accept either a single value to update the cell with, an array of values with one element f...<\/div><\/div>","purpose":"<p>Update a table cell or row - this method will accept either a single value to update the cell with, an array of values with one element for each column or\r\nan object in the same format as the original data source. The function is\r\nself-referencing in order to make the multi column updates easier.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\r\n     var oTable = $('#example').dataTable();\r\n     oTable.fnUpdate( 'Example update', 0, 0 ); \/\/ Single cell\r\n     oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], 1 ); \/\/ Row\r\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>|<i class=\"doc_param\">array<\/i>|<i class=\"doc_param\">string<\/i>}: Data to update the cell\/row with<\/li><li>{<i class=\"doc_param\">node<\/i>|<i class=\"doc_param\">int<\/i>}: TR element you want to update or the aoData index<\/li><li>{<i class=\"doc_param\">int<\/i>}: The column to update (set to undefined to update the whole row)<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Redraw the table or not<\/li><li>{<i class=\"doc_param\">bool<\/i>} [default=<span class=\"doc_default\">true<\/span>]: Perform pre-draw actions or not<\/li><\/ol>","returns":"{<i class=\"doc_param\">int<\/i>}: 0 on success, 1 on error","group":"API"},{"type":"function","parameter":"fnVersionCheck","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Provide a common method for plug-ins to check the version of DataTables being used, in order\nto ensure compatibility.<\/p><\/div><\/div>","purpose":"<p>Provide a common method for plug-ins to check the version of DataTables being used, in order\nto ensure compatibility.<\/p>","default":"","param_type":"function","code":"   $(document).ready(function() {\n     var oTable = $('#example').dataTable();\n     alert( oTable.fnVersionCheck( '1.9.0' ) );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: Version string to check for, in the format \"X.Y.Z\". Note that the\n   formats \"X\" and \"X.Y\" are also acceptable.<\/li><\/ol>","returns":"{<i class=\"doc_param\">boolean<\/i>}: true if this version of DataTables is greater or equal to the required\n   version, or false if this version of DataTales is not suitable","group":"API"},{"type":"function","parameter":"fnVersionCheck","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Provide a common method for plug-ins to check the version of DataTables being used, in order\nto ensure compatibility.<\/p><\/div><\/div>","purpose":"<p>Provide a common method for plug-ins to check the version of DataTables being used, in order\nto ensure compatibility.<\/p>","default":"","param_type":"function","code":"   alert( $.fn.dataTable.fnVersionCheck( '1.9.0' ) );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: Version string to check for, in the format \"X.Y.Z\". Note that the\n   formats \"X\" and \"X.Y\" are also acceptable.<\/li><\/ol>","returns":"{<i class=\"doc_param\">boolean<\/i>}: true if this version of DataTables is greater or equal to the required\n   version, or false if this version of DataTales is not suitable","group":"API-Static"},{"type":"function","parameter":"fnIsDataTable","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Check if a TABLE node is a DataTable table already or not.<\/p><\/div><\/div>","purpose":"<p>Check if a TABLE node is a DataTable table already or not.<\/p>","default":"","param_type":"function","code":"   var ex = document.getElementById('example');\n   if ( ! $.fn.DataTable.fnIsDataTable( ex ) ) {\n     $(ex).dataTable();\n   }","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: The TABLE node to check if it is a DataTable or not (note that other\n   node types can be passed in, but will always return false).<\/li><\/ol>","returns":"{<i class=\"doc_param\">boolean<\/i>}: true the table given is a DataTable, or false otherwise","group":"API-Static"},{"type":"function","parameter":"fnTables","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Get all DataTable tables that have been initialised - optionally you can select to\nget only currently visible tables.<\/p><\/div><\/div>","purpose":"<p>Get all DataTable tables that have been initialised - optionally you can select to\nget only currently visible tables.<\/p>","default":"","param_type":"function","code":"   var table = $.fn.dataTable.fnTables(true);\n   if ( table.length > 0 ) {\n     $(table).dataTable().fnAdjustColumnSizing();\n   }","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">boolean<\/i>} [default=<span class=\"doc_default\">false<\/span>]: Flag to indicate if you want all (default) or \n   visible tables only.<\/li><\/ol>","returns":"{<i class=\"doc_param\">array<\/i>}: Array of TABLE nodes (not DataTable instances) which are DataTables","group":"API-Static"},{"type":"array","parameter":"aaData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>An array of data to use for the table, passed in at initialisation which \nwill be used in preference to any data which is already in the ...<\/div><\/div>","purpose":"<p>An array of data to use for the table, passed in at initialisation which \nwill be used in preference to any data which is already in the DOM. This is\nparticularly useful for constructing tables purely in Javascript, for\nexample with a custom Ajax call.<\/p>","default":"null","param_type":"array","code":"   \/\/ Using a 2D array data source\n   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"aaData\": [\n         ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n         ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n       ],\n       \"aoColumns\": [\n         { \"sTitle\": \"Engine\" },\n         { \"sTitle\": \"Browser\" },\n         { \"sTitle\": \"Platform\" },\n         { \"sTitle\": \"Version\" },\n         { \"sTitle\": \"Grade\" }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using an array of objects as a data source (mData)\n   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"aaData\": [\n         {\n           \"engine\":   \"Trident\",\n           \"browser\":  \"Internet Explorer 4.0\",\n           \"platform\": \"Win 95+\",\n           \"version\":  4,\n           \"grade\":    \"X\"\n         },\n         {\n           \"engine\":   \"Trident\",\n           \"browser\":  \"Internet Explorer 5.0\",\n           \"platform\": \"Win 95+\",\n           \"version\":  5,\n           \"grade\":    \"C\"\n         }\n       ],\n       \"aoColumns\": [\n         { \"sTitle\": \"Engine\",   \"mData\": \"engine\" },\n         { \"sTitle\": \"Browser\",  \"mData\": \"browser\" },\n         { \"sTitle\": \"Platform\", \"mData\": \"platform\" },\n         { \"sTitle\": \"Version\",  \"mData\": \"version\" },\n         { \"sTitle\": \"Grade\",    \"mData\": \"grade\" }\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Option"},{"type":"array","parameter":"aaSorting","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>If sorting is enabled, then DataTables will perform a first pass sort on \ninitialisation. You can define which column(s) the sort is perf...<\/div><\/div>","purpose":"<p>If sorting is enabled, then DataTables will perform a first pass sort on \ninitialisation. You can define which column(s) the sort is performed upon, \nand the sorting direction, with this variable. The aaSorting array should \ncontain an array for each column to be sorted initially containing the \ncolumn's index and a direction string ('asc' or 'desc').<\/p>","default":"[[0,'asc']]","param_type":"array","code":"   \/\/ Sort by 3rd column first, and then 4th column\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aaSorting\": [[2,'asc'], [3,'desc']]\n     } );\n   } );\n   \n   \/\/ No initial sorting\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aaSorting\": []\n     } );\n   } );","inputs":"","returns":"","group":"Option"},{"type":"array","parameter":"aaSortingFixed","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter is basically identical to the aaSorting parameter, but \ncannot be overridden by user interaction with the table. What this...<\/div><\/div>","purpose":"<p>This parameter is basically identical to the aaSorting parameter, but \ncannot be overridden by user interaction with the table. What this means \nis that you could have a column (visible or hidden) which the sorting will \nalways be forced on first - any sorting after that (from the user) will \nthen be performed as required. This can be useful for grouping rows \ntogether.<\/p>","default":"null","param_type":"array","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aaSortingFixed\": [[0,'asc']]\n     } );\n   } )","inputs":"","returns":"","group":"Option"},{"type":"array","parameter":"aLengthMenu","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter allows you to readily specify the entries in the length drop\ndown menu that DataTables shows when pagination is enabled. I...<\/div><\/div>","purpose":"<p>This parameter allows you to readily specify the entries in the length drop\ndown menu that DataTables shows when pagination is enabled. It can be \neither a 1D array of options which will be used for both the displayed \noption and the value, or a 2D array which will use the array in the first \nposition as the value, and the array in the second position as the \ndisplayed options (useful for language strings such as 'All').<\/p>","default":"[ 10, 25, 50, 100 ]","param_type":"array","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aLengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n     } );\n   } );\n \n \n   \/\/ Setting the default display length as well as length menu\n   \/\/ This is likely to be wanted if you remove the '10' option which\n   \/\/ is the iDisplayLength default.\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"iDisplayLength\": 25,\n       \"aLengthMenu\": [[25, 50, 100, -1], [25, 50, 100, \"All\"]]\n     } );\n   } );","inputs":"","returns":"","group":"Option"},{"type":"array","parameter":"aoSearchCols","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Basically the same as oSearch, this parameter defines the individual column\nfiltering state at initialisation time. The array must be of ...<\/div><\/div>","purpose":"<p>Basically the same as oSearch, this parameter defines the individual column\nfiltering state at initialisation time. The array must be of the same size \nas the number of columns, and each element be an object with the parameters\n\"sSearch\" and \"bEscapeRegex\" (the latter is optional). 'null' is also\naccepted and the default will be used.<\/p>","default":"[]","param_type":"array","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoSearchCols\": [\n         null,\n         { \"sSearch\": \"My filter\" },\n         null,\n         { \"sSearch\": \"^[0-9]\", \"bEscapeRegex\": false }\n       ]\n     } );\n   } )","inputs":"","returns":"","group":"Option"},{"type":"array","parameter":"asStripeClasses","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>An array of CSS classes that should be applied to displayed rows. This \narray may be of any length, and DataTables will apply each class ...<\/div><\/div>","purpose":"<p>An array of CSS classes that should be applied to displayed rows. This \narray may be of any length, and DataTables will apply each class \nsequentially, looping when required.<\/p>","default":"null <i>Will take the values determined by the oClasses.sStripe*\n   options<\/i>","param_type":"array","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"asStripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n     } );\n   } )","inputs":"","returns":"","group":"Option"},{"type":"boolean","parameter":"bAutoWidth","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable automatic column width calculation. This can be disabled\nas an optimisation (it takes some time to calculate the widths...<\/div><\/div>","purpose":"<p>Enable or disable automatic column width calculation. This can be disabled\nas an optimisation (it takes some time to calculate the widths) if the\ntables widths are passed in using aoColumns.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bAutoWidth\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bDeferRender","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Deferred rendering can provide DataTables with a huge speed boost when you\nare using an Ajax or JS data source for the table. This option...<\/div><\/div>","purpose":"<p>Deferred rendering can provide DataTables with a huge speed boost when you\nare using an Ajax or JS data source for the table. This option, when set to\ntrue, will cause DataTables to defer the creation of the table elements for\neach row until they are needed for a draw - saving a significant amount of\ntime.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/arrays.txt\",\n       \"bDeferRender\": true\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bDestroy","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Replace a DataTable which matches the given selector and replace it with \none which has the properties of the new initialisation object p...<\/div><\/div>","purpose":"<p>Replace a DataTable which matches the given selector and replace it with \none which has the properties of the new initialisation object passed. If no\ntable matches the selector, then the new DataTable will be constructed as\nper normal.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sScrollY\": \"200px\",\n       \"bPaginate\": false\n     } );\n     \n     \/\/ Some time later....\n     $('#example').dataTable( {\n       \"bFilter\": false,\n       \"bDestroy\": true\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"boolean","parameter":"bFilter","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\nthat it allows the end user to input multiple words (space se...<\/div><\/div>","purpose":"<p>Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\nthat it allows the end user to input multiple words (space separated) and\r\nwill match a row containing those words, even if not in the order that was\r\nspecified (this allows matching across multiple columns). Note that if you\r\nwish to use filtering in DataTables this must remain 'true' - to remove the\r\ndefault filtering input box and retain filtering abilities, please use\r\n<a href=\"\/ref#sDom\">sDom<\/a>).<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bFilter\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bInfo","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable the table information display. This shows information \nabout the data that is currently visible on the page, including ...<\/div><\/div>","purpose":"<p>Enable or disable the table information display. This shows information \nabout the data that is currently visible on the page, including information\nabout filtered data if that action is being performed.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bInfo\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bJQueryUI","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\nslightly different and additional mark-up from what DataTable...<\/div><\/div>","purpose":"<p>Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\nslightly different and additional mark-up from what DataTables has\ntraditionally used).<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bJQueryUI\": true\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bLengthChange","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Allows the end user to select the size of a formatted page from a select\nmenu (sizes are 10, 25, 50 and 100). Requires pagination (bPagin...<\/div><\/div>","purpose":"<p>Allows the end user to select the size of a formatted page from a select\nmenu (sizes are 10, 25, 50 and 100). Requires pagination (bPaginate).<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bLengthChange\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bPaginate","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable pagination.<\/p><\/div><\/div>","purpose":"<p>Enable or disable pagination.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bPaginate\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bProcessing","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable the display of a 'processing' indicator when the table is\nbeing processed (e.g. a sort). This is particularly useful fo...<\/div><\/div>","purpose":"<p>Enable or disable the display of a 'processing' indicator when the table is\nbeing processed (e.g. a sort). This is particularly useful for tables with\nlarge amounts of data where it can take a noticeable amount of time to sort\nthe entries.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bProcessing\": true\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bRetrieve","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Retrieve the DataTables object for the given selector. Note that if the\ntable has already been initialised, this parameter will cause Dat...<\/div><\/div>","purpose":"<p>Retrieve the DataTables object for the given selector. Note that if the\ntable has already been initialised, this parameter will cause DataTables\nto simply return the object that has already been set up - it will not take\naccount of any changes you might have made to the initialisation object\npassed to DataTables (setting this parameter to true is an acknowledgement\nthat you understand this). bDestroy can be used to reinitialise a table if\nyou need.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     initTable();\n     tableActions();\n   } );\n   \n   function initTable ()\n   {\n     return $('#example').dataTable( {\n       \"sScrollY\": \"200px\",\n       \"bPaginate\": false,\n       \"bRetrieve\": true\n     } );\n   }\n   \n   function tableActions ()\n   {\n     var oTable = initTable();\n     \/\/ perform API operations with oTable \n   }","inputs":"","returns":"","group":"Options"},{"type":"boolean","parameter":"bScrollAutoCss","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p><code>Deprecated<\/code> Indicate if DataTables should be allowed to set the padding \/ margin\r\netc for the scrolling header elements or no...<\/div><\/div>","purpose":"<p><code>Deprecated<\/code> Indicate if DataTables should be allowed to set the padding \/ margin\r\netc for the scrolling header elements or not. Typically you will want\r\nthis.<\/p>\r\n\r\n<p>Please note that this option has now been deprecated and will be removed\r\nin the next version of DataTables. Using CSS with `!important` can be used to achieve the same effect.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bScrollAutoCss\": false,\n       \"sScrollY\": \"200px\"\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"boolean","parameter":"bScrollCollapse","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When vertical (y) scrolling is enabled, DataTables will force the height of\nthe table's viewport to the given height at all times (useful...<\/div><\/div>","purpose":"<p>When vertical (y) scrolling is enabled, DataTables will force the height of\nthe table's viewport to the given height at all times (useful for layout).\nHowever, this can look odd when filtering data down to a small data set,\nand the footer is left \"floating\" further down. This parameter (when\nenabled) will cause DataTables to collapse the table's viewport down when\nthe result set will fit within the given Y height.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sScrollY\": \"200\",\n       \"bScrollCollapse\": true\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"boolean","parameter":"bScrollInfinite","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p><code>Deprecated<\/code> Enable infinite scrolling for DataTables (to be used in combination with\r\nsScrollY). Infinite scrolling means tha...<\/div><\/div>","purpose":"<p><code>Deprecated<\/code> Enable infinite scrolling for DataTables (to be used in combination with\r\nsScrollY). Infinite scrolling means that DataTables will continually load\r\ndata as a user scrolls through a table, which is very useful for large\r\ndataset. This cannot be used with pagination, which is automatically\r\ndisabled.<\/p>\r\n\r\n<p>Please note that this option has now been deprecated and will be removed\r\nin the next version of DataTables. Please use the <a href=\"http:\/\/datatables.net\/extras\/scroller\">Scroller extra<\/a> instead.<\/p>\r\n","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bScrollInfinite\": true,\n       \"bScrollCollapse\": true,\n       \"sScrollY\": \"200px\"\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bServerSide","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Configure DataTables to use server-side processing. Note that the\nsAjaxSource parameter must also be given in order to give DataTables a\n...<\/div><\/div>","purpose":"<p>Configure DataTables to use server-side processing. Note that the\nsAjaxSource parameter must also be given in order to give DataTables a\nsource to obtain the required data for each draw.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"xhr.php\"\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bServerSide","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Configure DataTables to use server-side processing. Note that the\nsAjaxSource parameter must also be given in order to give DataTables a\n...<\/div><\/div>","purpose":"<p>Configure DataTables to use server-side processing. Note that the\nsAjaxSource parameter must also be given in order to give DataTables a\nsource to obtain the required data for each draw.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"xhr.php\"\n     } );\n   } );","inputs":"","returns":"","group":"Server-side"},{"type":"boolean","parameter":"bSort","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable sorting of columns. Sorting of individual columns can be\ndisabled by the \"bSortable\" option for each column.<\/p><\/div><\/div>","purpose":"<p>Enable or disable sorting of columns. Sorting of individual columns can be\ndisabled by the \"bSortable\" option for each column.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bSort\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bSortCellsTop","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Allows control over whether DataTables should use the top (true) unique\ncell that is found for a single column, or the bottom (false - de...<\/div><\/div>","purpose":"<p>Allows control over whether DataTables should use the top (true) unique\ncell that is found for a single column, or the bottom (false - default).\nThis is useful when using complex headers.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bSortCellsTop\": true\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"boolean","parameter":"bSortClasses","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and\r\n'sorting_3' to the columns which are currently being sorted o...<\/div><\/div>","purpose":"<p>Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and\r\n'sorting_3' to the columns which are currently being sorted on. This is\r\npresented as a feature switch as it can increase processing time (while\r\nclasses are removed and added) so for large data sets you might want to\r\nturn this off.<\/p>","default":"true","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bSortClasses\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"boolean","parameter":"bStateSave","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable state saving. When enabled a cookie will be used to save\r\ntable display information such as pagination information, dis...<\/div><\/div>","purpose":"<p>Enable or disable state saving. When enabled a cookie will be used to save\r\ntable display information such as pagination information, display length,\r\nfiltering and sorting. As such when the end user reloads the page the\r\ndisplay will match what they had previously set up.<\/p>","default":"false","param_type":"boolean","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"bStateSave\": true\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"function","parameter":"fnCookieCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Customise the cookie and \/ or the parameters being stored when using\nDataTables with state saving enabled. This function is called whenev...<\/div><\/div>","purpose":"<p>Customise the cookie and \/ or the parameters being stored when using\nDataTables with state saving enabled. This function is called whenever\nthe cookie is modified, and it expects a fully formed cookie string to be\nreturned. Note that the data object passed in is a Javascript object which\nmust be converted to a string (JSON.stringify for example).<\/p>","default":"","param_type":"function","code":"   $(document).ready( function () {\n     $('#example').dataTable( {\n       \"fnCookieCallback\": function (sName, oData, sExpires, sPath) {\n         \/\/ Customise oData or sName or whatever else here\n         return sName + \"=\"+JSON.stringify(oData)+\"; expires=\" + sExpires +\"; path=\" + sPath;\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: Name of the cookie defined by DataTables<\/li><li>{<i class=\"doc_param\">object<\/i>}: Data to be stored in the cookie<\/li><li>{<i class=\"doc_param\">string<\/i>}: Cookie expires string<\/li><li>{<i class=\"doc_param\">string<\/i>}: Path of the cookie to set<\/li><\/ol>","returns":"{<i class=\"doc_param\">string<\/i>}: Cookie formatted string (which should be encoded by\n   using encodeURIComponent())","group":"Callbacks"},{"type":"function","parameter":"fnCreatedRow","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function is called when a TR element is created (and all TD child\nelements have been inserted), or registered if using a DOM source,...<\/div><\/div>","purpose":"<p>This function is called when a TR element is created (and all TD child\nelements have been inserted), or registered if using a DOM source, allowing\nmanipulation of the TR element (adding classes etc).<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnCreatedRow\": function( nRow, aData, iDataIndex ) {\n         \/\/ Bold the grade for all 'A' grade browsers\n         if ( aData[4] == \"A\" )\n         {\n           $('td:eq(4)', nRow).html( '<b>A<\/b>' );\n         }\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: \"TR\" element for the current row<\/li><li>{<i class=\"doc_param\">array<\/i>}: Raw data array for this row<\/li><li>{<i class=\"doc_param\">int<\/i>}: The index of this row in aoData<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnDrawCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function is called on every 'draw' event, and allows you to\ndynamically modify any aspect you want about the created DOM.<\/p><\/div><\/div>","purpose":"<p>This function is called on every 'draw' event, and allows you to\ndynamically modify any aspect you want about the created DOM.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnDrawCallback\": function( oSettings ) {\n         alert( 'DataTables has redrawn the table' );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnFooterCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Identical to fnHeaderCallback() but for the table footer this function\nallows you to modify the table footer on every 'draw' even.<\/p><\/div><\/div>","purpose":"<p>Identical to fnHeaderCallback() but for the table footer this function\nallows you to modify the table footer on every 'draw' even.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnFooterCallback\": function( nFoot, aData, iStart, iEnd, aiDisplay ) {\n         nFoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+iStart;\n       }\n     } );\n   } )","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: \"TR\" element for the footer<\/li><li>{<i class=\"doc_param\">array<\/i>}: Full table data (as derived from the original HTML)<\/li><li>{<i class=\"doc_param\">int<\/i>}: Index for the current display starting point in the \n   display array<\/li><li>{<i class=\"doc_param\">int<\/i>}: Index for the current display ending point in the \n   display array<\/li><li>{<i class=\"doc_param\">array int<\/i>}: Index array to translate the visual position\n   to the full data array<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnFormatNumber","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When rendering large numbers in the information element for the table\n(i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large...<\/div><\/div>","purpose":"<p>When rendering large numbers in the information element for the table\n(i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\nto have a comma separator for the 'thousands' units (e.g. 1 million is\nrendered as \"1,000,000\") to help readability for the end user. This\nfunction will override the default method DataTables uses.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnFormatNumber\": function ( iIn ) {\n         if ( iIn &lt; 1000 ) {\n           return iIn;\n         } else {\n           var \n             s=(iIn+\"\"), \n             a=s.split(\"\"), out=\"\", \n             iLen=s.length;\n           \n           for ( var i=0 ; i&lt;iLen ; i++ ) {\n             if ( i%3 === 0 &amp;&amp; i !== 0 ) {\n               out = \"'\"+out;\n             }\n             out = a[iLen-i-1]+out;\n           }\n         }\n         return out;\n       };\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">int<\/i>}: number to be formatted<\/li><\/ol>","returns":"{<i class=\"doc_param\">string<\/i>}: formatted string for DataTables to show the number","group":"Callbacks"},{"type":"function","parameter":"fnHeaderCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function is called on every 'draw' event, and allows you to\ndynamically modify the header row. This can be used to calculate and\ndis...<\/div><\/div>","purpose":"<p>This function is called on every 'draw' event, and allows you to\ndynamically modify the header row. This can be used to calculate and\ndisplay useful information about the table.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnHeaderCallback\": function( nHead, aData, iStart, iEnd, aiDisplay ) {\n         nHead.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(iEnd-iStart)+\" records\";\n       }\n     } );\n   } )","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: \"TR\" element for the header<\/li><li>{<i class=\"doc_param\">array<\/i>}: Full table data (as derived from the original HTML)<\/li><li>{<i class=\"doc_param\">int<\/i>}: Index for the current display starting point in the\n   display array<\/li><li>{<i class=\"doc_param\">int<\/i>}: Index for the current display ending point in the\n   display array<\/li><li>{<i class=\"doc_param\">array int<\/i>}: Index array to translate the visual position\n   to the full data array<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnInfoCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The information element can be used to convey information about the current\nstate of the table. Although the internationalisation options...<\/div><\/div>","purpose":"<p>The information element can be used to convey information about the current\nstate of the table. Although the internationalisation options presented by\nDataTables are quite capable of dealing with most customisations, there may\nbe times where you wish to customise the string further. This callback\nallows you to do exactly that.<\/p>","default":"","param_type":"function","code":"   $('#example').dataTable( {\n     \"fnInfoCallback\": function( oSettings, iStart, iEnd, iMax, iTotal, sPre ) {\n       return iStart +\" to \"+ iEnd;\n     }\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">int<\/i>}: Starting position in data for the draw<\/li><li>{<i class=\"doc_param\">int<\/i>}: End position in data for the draw<\/li><li>{<i class=\"doc_param\">int<\/i>}: Total number of rows in the table (regardless of\n   filtering)<\/li><li>{<i class=\"doc_param\">int<\/i>}: Total number of rows in the data set, after filtering<\/li><li>{<i class=\"doc_param\">string<\/i>}: The string that DataTables has formatted using it's\n   own rules<\/li><\/ol>","returns":"{<i class=\"doc_param\">string<\/i>}: The string to be displayed in the information element.","group":"Callbacks"},{"type":"function","parameter":"fnInitComplete","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Called when the table has been initialised. Normally DataTables will\ninitialise sequentially and there will be no need for this function,...<\/div><\/div>","purpose":"<p>Called when the table has been initialised. Normally DataTables will\ninitialise sequentially and there will be no need for this function,\nhowever, this does not hold true when using external language information\nsince that is obtained using an async XHR call.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnInitComplete\": function(oSettings, json) {\n         alert( 'DataTables has finished its initialisation.' );\n       }\n     } );\n   } )","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">object<\/i>}: The JSON object request from the server - only\n   present if client-side Ajax sourced data is used<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnPreDrawCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Called at the very start of each table draw and can be used to cancel the\ndraw by returning false, any other return (including undefined)...<\/div><\/div>","purpose":"<p>Called at the very start of each table draw and can be used to cancel the\ndraw by returning false, any other return (including undefined) results in\nthe full draw occurring).<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnPreDrawCallback\": function( oSettings ) {\n         if ( $('#test').val() == 1 ) {\n           return false;\n         }\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><\/ol>","returns":"{<i class=\"doc_param\">boolean<\/i>}: False will cancel the draw, anything else (including no\n   return) will allow it to complete.","group":"Callbacks"},{"type":"function","parameter":"fnRowCallback","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This function allows you to 'post process' each row after it have been\ngenerated for each table draw, but before it is rendered on screen...<\/div><\/div>","purpose":"<p>This function allows you to 'post process' each row after it have been\ngenerated for each table draw, but before it is rendered on screen. This\nfunction might be used for setting the row class name etc.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"fnRowCallback\": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {\n         \/\/ Bold the grade for all 'A' grade browsers\n         if ( aData[4] == \"A\" )\n         {\n           $('td:eq(4)', nRow).html( '<b>A<\/b>' );\n         }\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">node<\/i>}: \"TR\" element for the current row<\/li><li>{<i class=\"doc_param\">array<\/i>}: Raw data array for this row<\/li><li>{<i class=\"doc_param\">int<\/i>}: The display index for the current table draw<\/li><li>{<i class=\"doc_param\">int<\/i>}: The index of the data in the full list of\n   rows (after filtering)<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnServerData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter allows you to override the default function which obtains\nthe data from the server ($.getJSON) so something more suitable ...<\/div><\/div>","purpose":"<p>This parameter allows you to override the default function which obtains\nthe data from the server ($.getJSON) so something more suitable for your\napplication. For example you could use POST data, or pull information from\na Gears or AIR database.<\/p>","default":"","param_type":"function","code":"   \/\/ POST data to server\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bProcessing\": true,\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"xhr.php\",\n       \"fnServerData\": function ( sSource, aoData, fnCallback, oSettings ) {\n         oSettings.jqXHR = $.ajax( {\n           \"dataType\": 'json', \n           \"type\": \"POST\", \n           \"url\": sSource, \n           \"data\": aoData, \n           \"success\": fnCallback\n         } );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: HTTP source to obtain the data from (sAjaxSource)<\/li><li>{<i class=\"doc_param\">array<\/i>}: A key\/value pair object containing the data to send\n   to the server<\/li><li>{<i class=\"doc_param\">function<\/i>}: to be called on completion of the data get\n   process that will draw the data on the page.<\/li><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnServerData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter allows you to override the default function which obtains\nthe data from the server ($.getJSON) so something more suitable ...<\/div><\/div>","purpose":"<p>This parameter allows you to override the default function which obtains\nthe data from the server ($.getJSON) so something more suitable for your\napplication. For example you could use POST data, or pull information from\na Gears or AIR database.<\/p>","default":"","param_type":"function","code":"   \/\/ POST data to server\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bProcessing\": true,\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"xhr.php\",\n       \"fnServerData\": function ( sSource, aoData, fnCallback, oSettings ) {\n         oSettings.jqXHR = $.ajax( {\n           \"dataType\": 'json', \n           \"type\": \"POST\", \n           \"url\": sSource, \n           \"data\": aoData, \n           \"success\": fnCallback\n         } );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">string<\/i>}: HTTP source to obtain the data from (sAjaxSource)<\/li><li>{<i class=\"doc_param\">array<\/i>}: A key\/value pair object containing the data to send\n   to the server<\/li><li>{<i class=\"doc_param\">function<\/i>}: to be called on completion of the data get\n   process that will draw the data on the page.<\/li><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><\/ol>","returns":"","group":"Server-side"},{"type":"function","parameter":"fnServerParams","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>It is often useful to send extra data to the server when making an Ajax\nrequest - for example custom filtering information, and this call...<\/div><\/div>","purpose":"<p>It is often useful to send extra data to the server when making an Ajax\nrequest - for example custom filtering information, and this callback\nfunction makes it trivial to send extra information to the server. The\npassed in parameter is the data set that has been constructed by\nDataTables, and you can add to this or modify it as you require.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bProcessing\": true,\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/server_processing.php\",\n       \"fnServerParams\": function ( aoData ) {\n         aoData.push( { \"name\": \"more_data\", \"value\": \"my_value\" } );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">array<\/i>}: Data array (array of objects which are name\/value\n   pairs) that has been constructed by DataTables and will be sent to the\n   server. In the case of Ajax sourced data with server-side processing\n   this will be an empty array, for server-side processing there will be a\n   significant number of parameters!<\/li><\/ol>","returns":"{<i class=\"doc_param\">undefined<\/i>}: Ensure that you modify the aoData array passed in,\n   as this is passed by reference.","group":"Callbacks"},{"type":"function","parameter":"fnServerParams","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>It is often useful to send extra data to the server when making an Ajax\nrequest - for example custom filtering information, and this call...<\/div><\/div>","purpose":"<p>It is often useful to send extra data to the server when making an Ajax\nrequest - for example custom filtering information, and this callback\nfunction makes it trivial to send extra information to the server. The\npassed in parameter is the data set that has been constructed by\nDataTables, and you can add to this or modify it as you require.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bProcessing\": true,\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/server_processing.php\",\n       \"fnServerParams\": function ( aoData ) {\n         aoData.push( { \"name\": \"more_data\", \"value\": \"my_value\" } );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">array<\/i>}: Data array (array of objects which are name\/value\n   pairs) that has been constructed by DataTables and will be sent to the\n   server. In the case of Ajax sourced data with server-side processing\n   this will be an empty array, for server-side processing there will be a\n   significant number of parameters!<\/li><\/ol>","returns":"{<i class=\"doc_param\">undefined<\/i>}: Ensure that you modify the aoData array passed in,\n   as this is passed by reference.","group":"Server-side"},{"type":"function","parameter":"fnStateLoad","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Load the table state. With this function you can define from where, and how, the\nstate of a table is loaded. By default DataTables will l...<\/div><\/div>","purpose":"<p>Load the table state. With this function you can define from where, and how, the\nstate of a table is loaded. By default DataTables will load from its state saving\ncookie, but you might wish to use local storage (HTML5) or a server-side database.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateLoad\": function (oSettings) {\n         var o;\n         \n         \/\/ Send an Ajax request to the server to get the data. Note that\n         \/\/ this is a synchronous request.\n         $.ajax( {\n           \"url\": \"\/state_load\",\n           \"async\": false,\n           \"dataType\": \"json\",\n           \"success\": function (json) {\n             o = json;\n           }\n         } );\n         \n         return o;\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><\/ol>","returns":"{<i class=\"doc_param\">object<\/i>}: The DataTables state object to be loaded","group":"Callbacks"},{"type":"function","parameter":"fnStateLoadParams","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Callback which allows modification of the saved state prior to loading that state.\nThis callback is called when the table is loading stat...<\/div><\/div>","purpose":"<p>Callback which allows modification of the saved state prior to loading that state.\nThis callback is called when the table is loading state from the stored data, but\nprior to the settings object being modified by the saved state. Note that for \nplug-in authors, you should use the 'stateLoadParams' event to load parameters for \na plug-in.<\/p>","default":"","param_type":"function","code":"   \/\/ Remove a saved filter, so filtering is never loaded\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateLoadParams\": function (oSettings, oData) {\n         oData.oSearch.sSearch = \"\";\n       }\n     } );\n   } );\n\n \n   \/\/ Disallow state loading by returning false\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateLoadParams\": function (oSettings, oData) {\n         return false;\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">object<\/i>}: The state object that is to be loaded<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnStateLoaded","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Callback that is called when the state has been loaded from the state saving method\nand the DataTables settings object has been modified ...<\/div><\/div>","purpose":"<p>Callback that is called when the state has been loaded from the state saving method\nand the DataTables settings object has been modified as a result of the loaded state.<\/p>","default":"","param_type":"function","code":"   \/\/ Show an alert with the filtering value that was saved\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateLoaded\": function (oSettings, oData) {\n         alert( 'Saved filter was: '+oData.oSearch.sSearch );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">object<\/i>}: The state object that was loaded<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnStateSave","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Save the table state. This function allows you to define where and how the state\ninformation for the table is stored - by default it will...<\/div><\/div>","purpose":"<p>Save the table state. This function allows you to define where and how the state\ninformation for the table is stored - by default it will use a cookie, but you\nmight want to use local storage (HTML5) or a server-side database.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateSave\": function (oSettings, oData) {\n         \/\/ Send an Ajax request to the server with the state object\n         $.ajax( {\n           \"url\": \"\/state_save\",\n           \"data\": oData,\n           \"dataType\": \"json\",\n           \"method\": \"POST\"\n           \"success\": function () {}\n         } );\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">object<\/i>}: The state object to be saved<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"function","parameter":"fnStateSaveParams","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Callback which allows modification of the state to be saved. Called when the table \nhas changed state a new state save is required. This ...<\/div><\/div>","purpose":"<p>Callback which allows modification of the state to be saved. Called when the table \nhas changed state a new state save is required. This method allows modification of\nthe state saving object prior to actually doing the save, including addition or \nother state properties or modification. Note that for plug-in authors, you should \nuse the 'stateSaveParams' event to save parameters for a plug-in.<\/p>","default":"","param_type":"function","code":"   \/\/ Remove a saved filter, so filtering is never saved\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bStateSave\": true,\n       \"fnStateSaveParams\": function (oSettings, oData) {\n         oData.oSearch.sSearch = \"\";\n       }\n     } );\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: DataTables settings object<\/li><li>{<i class=\"doc_param\">object<\/i>}: The state object to be saved<\/li><\/ol>","returns":"","group":"Callbacks"},{"type":"int","parameter":"iCookieDuration","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Duration of the cookie which is used for storing session information. This\nvalue is given in seconds.<\/p><\/div><\/div>","purpose":"<p>Duration of the cookie which is used for storing session information. This\nvalue is given in seconds.<\/p>","default":"7200 <i>(2 hours)<\/i>","param_type":"int","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"iCookieDuration\": 60*60*24; \/\/ 1 day\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"int","parameter":"iDeferLoading","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When enabled DataTables will not make a request to the server for the first\npage draw - rather it will use the data already on the page (...<\/div><\/div>","purpose":"<p>When enabled DataTables will not make a request to the server for the first\npage draw - rather it will use the data already on the page (no sorting etc\nwill be applied to it), thus saving on an XHR at load time. iDeferLoading\nis used to indicate that deferred loading is required, but it is also used\nto tell DataTables how many records there are in the full table (allowing\nthe information element and pagination to be displayed correctly). In the case\nwhere a filtering is applied to the table on initial load, this can be\nindicated by giving the parameter as an array, where the first element is\nthe number of records available after filtering and the second element is the\nnumber of records without filtering (allowing the table information element\nto be shown correctly).<\/p>","default":"null","param_type":"int","code":"   \/\/ 57 records available in the table, no filtering applied\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/server_processing.php\",\n       \"iDeferLoading\": 57\n     } );\n   } );\n\n \n   \/\/ 57 records after filtering, 100 without filtering (an initial filter applied)\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/server_processing.php\",\n       \"iDeferLoading\": [ 57, 100 ],\n       \"oSearch\": {\n         \"sSearch\": \"my_filter\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"int","parameter":"iDisplayLength","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Number of rows to display on a single page when using pagination. If\nfeature enabled (bLengthChange) then the end user will be able to ov...<\/div><\/div>","purpose":"<p>Number of rows to display on a single page when using pagination. If\nfeature enabled (bLengthChange) then the end user will be able to override\nthis to a custom setting using a pop-up menu.<\/p>","default":"10","param_type":"int","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"iDisplayLength\": 50\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"int","parameter":"iDisplayStart","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Define the starting point for data display when using DataTables with\npagination. Note that this parameter is the number of records, rath...<\/div><\/div>","purpose":"<p>Define the starting point for data display when using DataTables with\npagination. Note that this parameter is the number of records, rather than\nthe page number, so if you have 10 records per page and want to start on\nthe third page, it should be \"20\".<\/p>","default":"0","param_type":"int","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"iDisplayStart\": 20\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"int","parameter":"iScrollLoadGap","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The scroll gap is the amount of scrolling that is left to go before\nDataTables will load the next 'page' of data automatically. You typic...<\/div><\/div>","purpose":"<p>The scroll gap is the amount of scrolling that is left to go before\nDataTables will load the next 'page' of data automatically. You typically\nwant a gap which is big enough that the scrolling will be smooth for the\nuser, while not so large that it will load more data than need.<\/p>","default":"100","param_type":"int","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bScrollInfinite\": true,\n       \"bScrollCollapse\": true,\n       \"sScrollY\": \"200px\",\n       \"iScrollLoadGap\": 50\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"int","parameter":"iTabIndex","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>By default DataTables allows keyboard navigation of the table (sorting, paging,\nand filtering) by adding a tabindex attribute to the requ...<\/div><\/div>","purpose":"<p>By default DataTables allows keyboard navigation of the table (sorting, paging,\nand filtering) by adding a tabindex attribute to the required elements. This\nallows you to tab through the controls and press the enter key to activate them.\nThe tabindex is default 0, meaning that the tab follows the flow of the document.\nYou can overrule this using this parameter if you wish. Use a value of -1 to\ndisable built-in keyboard navigation.<\/p>","default":"0","param_type":"int","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"iTabIndex\": 1\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"oLanguage.oAria.sSortAscending","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>ARIA label that is added to the table headers when the column may be\nsorted ascending by activing the column (click or return when focuse...<\/div><\/div>","purpose":"<p>ARIA label that is added to the table headers when the column may be\nsorted ascending by activing the column (click or return when focused).\nNote that the column header is prefixed to this string.<\/p>","default":": activate to sort column ascending","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oAria\": {\n           \"sSortAscending\": \" - click\/return to sort ascending\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.oAria.sSortDescending","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>ARIA label that is added to the table headers when the column may be\nsorted descending by activing the column (click or return when focus...<\/div><\/div>","purpose":"<p>ARIA label that is added to the table headers when the column may be\nsorted descending by activing the column (click or return when focused).\nNote that the column header is prefixed to this string.<\/p>","default":": activate to sort column ascending","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oAria\": {\n           \"sSortDescending\": \" - click\/return to sort descending\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.oPaginate.sFirst","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text to use when using the 'full_numbers' type of pagination for the\nbutton to take the user to the first page.<\/p><\/div><\/div>","purpose":"<p>Text to use when using the 'full_numbers' type of pagination for the\nbutton to take the user to the first page.<\/p>","default":"First","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oPaginate\": {\n           \"sFirst\": \"First page\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.oPaginate.sLast","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text to use when using the 'full_numbers' type of pagination for the\nbutton to take the user to the last page.<\/p><\/div><\/div>","purpose":"<p>Text to use when using the 'full_numbers' type of pagination for the\nbutton to take the user to the last page.<\/p>","default":"Last","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oPaginate\": {\n           \"sLast\": \"Last page\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.oPaginate.sNext","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text to use for the 'next' pagination button (to take the user to the \nnext page).<\/p><\/div><\/div>","purpose":"<p>Text to use for the 'next' pagination button (to take the user to the \nnext page).<\/p>","default":"Next","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oPaginate\": {\n           \"sNext\": \"Next page\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.oPaginate.sPrevious","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text to use for the 'previous' pagination button (to take the user to<br><\/br>the previous page).<\/p><\/div><\/div>","purpose":"<p>Text to use for the 'previous' pagination button (to take the user to<br><\/br>the previous page).<\/p>","default":"Previous","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"oPaginate\": {\n           \"sPrevious\": \"Previous page\"\n         }\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sEmptyTable","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This string is shown in preference to sZeroRecords when the table is\nempty of data (regardless of filtering). Note that this is an option...<\/div><\/div>","purpose":"<p>This string is shown in preference to sZeroRecords when the table is\nempty of data (regardless of filtering). Note that this is an optional\nparameter - if it is not given, the value of sZeroRecords will be used\ninstead (either the default or given value).<\/p>","default":"No data available in table","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sEmptyTable\": \"No data available in table\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sInfo","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This string gives information to the end user about the information that \nis current on display on the page. The <em>START<\/em>, <em>END<...<\/div><\/div>","purpose":"<p>This string gives information to the end user about the information that \nis current on display on the page. The <em>START<\/em>, <em>END<\/em> and <em>TOTAL<\/em> \nvariables are all dynamically replaced as the table display updates, and \ncan be freely moved or removed as the language requirements change.<\/p>","default":"Showing _START_ to _END_ of _TOTAL_ entries","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sInfo\": \"Got a total of _TOTAL_ entries to show (_START_ to _END_)\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sInfoEmpty","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Display information string for when the table is empty. Typically the \nformat of this string should match sInfo.<\/p><\/div><\/div>","purpose":"<p>Display information string for when the table is empty. Typically the \nformat of this string should match sInfo.<\/p>","default":"Showing 0 to 0 of 0 entries","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sInfoEmpty\": \"No entries to show\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sInfoFiltered","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When a user filters the information in a table, this string is appended \nto the information (sInfo) to give an idea of how strong the fil...<\/div><\/div>","purpose":"<p>When a user filters the information in a table, this string is appended \nto the information (sInfo) to give an idea of how strong the filtering \nis. The variable <em>MAX<\/em> is dynamically updated.<\/p>","default":"(filtered from _MAX_ total entries)","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sInfoFiltered\": \" - filtering from _MAX_ records\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sInfoPostFix","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>If can be useful to append extra information to the info string at times,\nand this variable does exactly that. This information will be a...<\/div><\/div>","purpose":"<p>If can be useful to append extra information to the info string at times,\nand this variable does exactly that. This information will be appended to\nthe sInfo (sInfoEmpty and sInfoFiltered in whatever combination they are\nbeing used) at all times.<\/p>","default":"<i>Empty string<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sInfoPostFix\": \"All records shown are derived from real information.\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sInfoThousands","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>DataTables has a build in number formatter (fnFormatNumber) which is used\nto format large numbers that are used in the table information....<\/div><\/div>","purpose":"<p>DataTables has a build in number formatter (fnFormatNumber) which is used\nto format large numbers that are used in the table information. By\ndefault a comma is used, but this can be trivially changed to any\ncharacter you wish with this parameter.<\/p>","default":",","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sInfoThousands\": \"'\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sLengthMenu","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Detail the action that will be taken when the drop down menu for the\npagination length option is changed. The '<em>MENU<\/em>' variable is...<\/div><\/div>","purpose":"<p>Detail the action that will be taken when the drop down menu for the\npagination length option is changed. The '<em>MENU<\/em>' variable is replaced\nwith a default select list of 10, 25, 50 and 100, and can be replaced\nwith a custom select box if required.<\/p>","default":"Show _MENU_ entries","param_type":"string","code":"   \/\/ Language change only\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sLengthMenu\": \"Display _MENU_ records\"\n       }\n     } );\n   } );\n   \n \n   \/\/ Language and options change\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sLengthMenu\": 'Display <select>'+\n           '<option value=\"10\">10<\/option>'+\n           '<option value=\"20\">20<\/option>'+\n           '<option value=\"30\">30<\/option>'+\n           '<option value=\"40\">40<\/option>'+\n           '<option value=\"50\">50<\/option>'+\n           '<option value=\"-1\">All<\/option>'+\n           '<\/select> records'\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sLoadingRecords","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When using Ajax sourced data and during the first draw when DataTables is\ngathering the data, this message is shown in an empty row in th...<\/div><\/div>","purpose":"<p>When using Ajax sourced data and during the first draw when DataTables is\ngathering the data, this message is shown in an empty row in the table to\nindicate to the end user the the data is being loaded. Note that this\nparameter is not used when loading data by server-side processing, just\nAjax sourced data with client-side processing.<\/p>","default":"Loading...","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sLoadingRecords\": \"Please wait - loading...\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sProcessing","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text which is displayed when the table is processing a user action\n(usually a sort command or similar).<\/p><\/div><\/div>","purpose":"<p>Text which is displayed when the table is processing a user action\n(usually a sort command or similar).<\/p>","default":"Processing...","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sProcessing\": \"DataTables is currently busy\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sSearch","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Details the actions that will be taken when the user types into the\nfiltering input text box. The variable \"<em>INPUT<\/em>\", if used in t...<\/div><\/div>","purpose":"<p>Details the actions that will be taken when the user types into the\nfiltering input text box. The variable \"<em>INPUT<\/em>\", if used in the string,\nis replaced with the HTML text box for the filtering input allowing\ncontrol over where it appears in the string. If \"<em>INPUT<\/em>\" is not given\nthen the input box is appended to the string automatically.<\/p>","default":"Search:","param_type":"string","code":"   \/\/ Input text box will be appended at the end automatically\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sSearch\": \"Filter records:\"\n       }\n     } );\n   } );\n   \n \n   \/\/ Specify where the filter should appear\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sSearch\": \"Apply filter _INPUT_ to table\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sUrl","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>All of the language information can be stored in a file on the\nserver-side, which DataTables will look up if this parameter is passed.\nIt...<\/div><\/div>","purpose":"<p>All of the language information can be stored in a file on the\nserver-side, which DataTables will look up if this parameter is passed.\nIt must store the URL of the language file, which is in a JSON format,\nand the object has the same properties as the oLanguage object in the\ninitialiser object (i.e. the above parameters). Please refer to one of\nthe example language files to see how this works in action.<\/p>","default":"<i>Empty string - i.e. disabled<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sUrl\": \"http:\/\/www.sprymedia.co.uk\/dataTables\/lang.txt\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"string","parameter":"oLanguage.sZeroRecords","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Text shown inside the table records when the is no information to be\ndisplayed after filtering. sEmptyTable is shown when there is simply...<\/div><\/div>","purpose":"<p>Text shown inside the table records when the is no information to be\ndisplayed after filtering. sEmptyTable is shown when there is simply no\ninformation in the table at all (regardless of filtering).<\/p>","default":"No matching records found","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oLanguage\": {\n         \"sZeroRecords\": \"No records to display\"\n       }\n     } );\n   } );","inputs":"","returns":"","group":"Language"},{"type":"","parameter":"oSearch","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter allows you to define the global filtering state at\r\ninitialisation time. As an object the \"sSearch\" parameter must be\r\ndef...<\/div><\/div>","purpose":"<p>This parameter allows you to define the global filtering state at\r\ninitialisation time. As an object the \"sSearch\" parameter must be\r\ndefined, but all other parameters are optional. When \"bRegex\" is true,\r\nthe search string will be treated as a regular expression, when false\r\n(default) it will be treated as a straight string. When \"bSmart\"\r\nDataTables will use it's smart filtering methods (to word match at\r\nany point in the data), when false this will not be done.<\/p>","default":"","param_type":"","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"oSearch\": {\"sSearch\": \"Initial search\"}\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sAjaxDataProp","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>By default DataTables will look for the property 'aaData' when obtaining\ndata from an Ajax source or for server-side processing - this pa...<\/div><\/div>","purpose":"<p>By default DataTables will look for the property 'aaData' when obtaining\ndata from an Ajax source or for server-side processing - this parameter\nallows that property to be changed. You can use Javascript dotted object\nnotation to get a data source for multiple levels of nesting.<\/p>","default":"aaData","param_type":"string","code":"   \/\/ Get data from { \"data\": [...] }\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/data.txt\",\n       \"sAjaxDataProp\": \"data\"\n     } );\n   } );\n   \n \n   \/\/ Get data from { \"data\": { \"inner\": [...] } }\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/data.txt\",\n       \"sAjaxDataProp\": \"data.inner\"\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sAjaxDataProp","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>By default DataTables will look for the property 'aaData' when obtaining\ndata from an Ajax source or for server-side processing - this pa...<\/div><\/div>","purpose":"<p>By default DataTables will look for the property 'aaData' when obtaining\ndata from an Ajax source or for server-side processing - this parameter\nallows that property to be changed. You can use Javascript dotted object\nnotation to get a data source for multiple levels of nesting.<\/p>","default":"aaData","param_type":"string","code":"   \/\/ Get data from { \"data\": [...] }\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/data.txt\",\n       \"sAjaxDataProp\": \"data\"\n     } );\n   } );\n   \n \n   \/\/ Get data from { \"data\": { \"inner\": [...] } }\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/data.txt\",\n       \"sAjaxDataProp\": \"data.inner\"\n     } );\n   } );","inputs":"","returns":"","group":"Server-side"},{"type":"string","parameter":"sAjaxSource","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>You can instruct DataTables to load data from an external source using this\nparameter (use aData if you want to pass data in you already ...<\/div><\/div>","purpose":"<p>You can instruct DataTables to load data from an external source using this\nparameter (use aData if you want to pass data in you already have). Simply\nprovide a url a JSON object can be obtained from. This object must include\nthe parameter 'aaData' which is the data source for the table.<\/p>","default":"null","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sAjaxSource\": \"http:\/\/www.sprymedia.co.uk\/dataTables\/json.php\"\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sAjaxSource","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>You can instruct DataTables to load data from an external source using this\nparameter (use aData if you want to pass data in you already ...<\/div><\/div>","purpose":"<p>You can instruct DataTables to load data from an external source using this\nparameter (use aData if you want to pass data in you already have). Simply\nprovide a url a JSON object can be obtained from. This object must include\nthe parameter 'aaData' which is the data source for the table.<\/p>","default":"null","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sAjaxSource\": \"http:\/\/www.sprymedia.co.uk\/dataTables\/json.php\"\n     } );\n   } )","inputs":"","returns":"","group":"Server-side"},{"type":"string","parameter":"sCookiePrefix","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter can be used to override the default prefix that DataTables\nassigns to a cookie when state saving is enabled.<\/p><\/div><\/div>","purpose":"<p>This parameter can be used to override the default prefix that DataTables\nassigns to a cookie when state saving is enabled.<\/p>","default":"SpryMedia_DataTables_","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sCookiePrefix\": \"my_datatable_\",\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sDom","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This initialisation variable allows you to specify exactly where in the\nDOM you want DataTables to inject the various controls it adds to...<\/div><\/div>","purpose":"<p>This initialisation variable allows you to specify exactly where in the\nDOM you want DataTables to inject the various controls it adds to the page\n(for example you might want the pagination controls at the top of the\ntable). DIV elements (with or without a custom class) can also be added to\naid styling. The follow syntax is used:\n  <ul>\n    <li>The following options are allowed:\t\n      <ul>\n        <li>'l' - Length changing<\/li\n        <li>'f' - Filtering input<\/li>\n        <li>'t' - The table!<\/li>\n        <li>'i' - Information<\/li>\n        <li>'p' - Pagination<\/li>\n        <li>'r' - pRocessing<\/li>\n      <\/ul>\n    <\/li>\n    <li>The following constants are allowed:\n      <ul>\n        <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')<\/li>\n        <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')<\/li>\n      <\/ul>\n    <\/li>\n    <li>The following syntax is expected:\n      <ul>\n        <li>'<' and '>' - div elements<\/li>\n        <li>'<\"class\" and '>' - div with a class<\/li>\n        <li>'<\"#id\" and '>' - div with an ID<\/li>\n      <\/ul>\n    <\/li>\n    <li>Examples:\n      <ul>\n        <li>'<\"wrapper\"flipt>'<\/li>\n        <li>'<lf<t>ip>'<\/li>\n      <\/ul>\n    <\/li>\n  <\/ul><\/p>","default":"lfrtip <i>(when bJQueryUI is false)<\/i> <b>or<\/b> \n   <\"H\"lfr>t<\"F\"ip> <i>(when bJQueryUI is true)<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sDom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sPaginationType","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>DataTables features two different built-in pagination interaction methods\r\n('two_button' or 'full_numbers') which present different page ...<\/div><\/div>","purpose":"<p>DataTables features two different built-in pagination interaction methods\r\n('two_button' or 'full_numbers') which present different page controls to\r\nthe end user. Further methods can be added using the API (see below).<\/p>","default":"two_button","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sPaginationType\": \"full_numbers\"\n     } );\n   } )","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sScrollX","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable horizontal scrolling. When a table is too wide to fit into a certain\nlayout, or you have a large number of columns in the table, y...<\/div><\/div>","purpose":"<p>Enable horizontal scrolling. When a table is too wide to fit into a certain\nlayout, or you have a large number of columns in the table, you can enable\nx-scrolling to show the table in a viewport, which can be scrolled. This\nproperty can be any CSS unit, or a number (in which case it will be treated\nas a pixel measurement).<\/p>","default":"<i>blank string - i.e. disabled<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sScrollX\": \"100%\",\n       \"bScrollCollapse\": true\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"string","parameter":"sScrollXInner","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This property can be used to force a DataTable to use more width than it\nmight otherwise do when x-scrolling is enabled. For example if y...<\/div><\/div>","purpose":"<p>This property can be used to force a DataTable to use more width than it\nmight otherwise do when x-scrolling is enabled. For example if you have a\ntable which requires to be well spaced, this parameter is useful for\n\"over-sizing\" the table, and thus forcing scrolling. This property can by\nany CSS unit, or a number (in which case it will be treated as a pixel\nmeasurement).<\/p>","default":"<i>blank string - i.e. disabled<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sScrollX\": \"100%\",\n       \"sScrollXInner\": \"110%\"\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sScrollY","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable vertical scrolling. Vertical scrolling will constrain the DataTable\nto the given height, and enable scrolling for any data which o...<\/div><\/div>","purpose":"<p>Enable vertical scrolling. Vertical scrolling will constrain the DataTable\nto the given height, and enable scrolling for any data which overflows the\ncurrent viewport. This can be used as an alternative to paging to display\na lot of data in a small area (although paging and scrolling can both be\nenabled at the same time). This property can be any CSS unit, or a number\n(in which case it will be treated as a pixel measurement).<\/p>","default":"<i>blank string - i.e. disabled<\/i>","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"sScrollY\": \"200px\",\n       \"bPaginate\": false\n     } );\n   } );","inputs":"","returns":"","group":"Features"},{"type":"string","parameter":"sServerMethod","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Set the HTTP method that is used to make the Ajax call for server-side\nprocessing or Ajax sourced data.<\/p><\/div><\/div>","purpose":"<p>Set the HTTP method that is used to make the Ajax call for server-side\nprocessing or Ajax sourced data.<\/p>","default":"GET","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/post.php\",\n       \"sServerMethod\": \"POST\"\n     } );\n   } );","inputs":"","returns":"","group":"Options"},{"type":"string","parameter":"sServerMethod","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Set the HTTP method that is used to make the Ajax call for server-side\nprocessing or Ajax sourced data.<\/p><\/div><\/div>","purpose":"<p>Set the HTTP method that is used to make the Ajax call for server-side\nprocessing or Ajax sourced data.<\/p>","default":"GET","param_type":"string","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"bServerSide\": true,\n       \"sAjaxSource\": \"scripts\/post.php\",\n       \"sServerMethod\": \"POST\"\n     } );\n   } );","inputs":"","returns":"","group":"Server-side"},{"type":"array","parameter":"aDataSort","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Allows a column's sorting to take multiple columns into account when \ndoing a sort. For example first name \/ last name columns make sense...<\/div><\/div>","purpose":"<p>Allows a column's sorting to take multiple columns into account when \ndoing a sort. For example first name \/ last name columns make sense to \ndo a multi-column sort over the two columns.<\/p>","default":"null <i>Takes the value of the column index automatically<\/i>","param_type":"array","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [\n         { \"aDataSort\": [ 0, 1 ], \"aTargets\": [ 0 ] },\n         { \"aDataSort\": [ 1, 0 ], \"aTargets\": [ 1 ] },\n         { \"aDataSort\": [ 2, 3, 4 ], \"aTargets\": [ 2 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [\n         { \"aDataSort\": [ 0, 1 ] },\n         { \"aDataSort\": [ 1, 0 ] },\n         { \"aDataSort\": [ 2, 3, 4 ] },\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"array","parameter":"asSorting","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>You can control the default sorting direction, and even alter the behaviour\nof the sort handler (i.e. only allow ascending sorting etc) u...<\/div><\/div>","purpose":"<p>You can control the default sorting direction, and even alter the behaviour\nof the sort handler (i.e. only allow ascending sorting etc) using this\nparameter.<\/p>","default":"[ 'asc', 'desc' ]","param_type":"array","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [\n         { \"asSorting\": [ \"asc\" ], \"aTargets\": [ 1 ] },\n         { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ], \"aTargets\": [ 2 ] },\n         { \"asSorting\": [ \"desc\" ], \"aTargets\": [ 3 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [\n         null,\n         { \"asSorting\": [ \"asc\" ] },\n         { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ] },\n         { \"asSorting\": [ \"desc\" ] },\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"boolean","parameter":"bSearchable","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable filtering on the data in this column.<\/p><\/div><\/div>","purpose":"<p>Enable or disable filtering on the data in this column.<\/p>","default":"true","param_type":"boolean","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"bSearchable\": false, \"aTargets\": [ 0 ] }\n       ] } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"bSearchable\": false },\n         null,\n         null,\n         null,\n         null\n       ] } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"boolean","parameter":"bSortable","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable sorting on this column.<\/p><\/div><\/div>","purpose":"<p>Enable or disable sorting on this column.<\/p>","default":"true","param_type":"boolean","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"bSortable\": false, \"aTargets\": [ 0 ] }\n       ] } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"bSortable\": false },\n         null,\n         null,\n         null,\n         null\n       ] } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"boolean","parameter":"bUseRendered","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p><code>Deprecated<\/code> When using fnRender() for a column, you may wish \nto use the original data (before rendering) for sorting and fil...<\/div><\/div>","purpose":"<p><code>Deprecated<\/code> When using fnRender() for a column, you may wish \nto use the original data (before rendering) for sorting and filtering \n(the default is to used the rendered data that the user can see). This \nmay be useful for dates etc.<\/p>\n\n<p>Please note that this option has now been deprecated and will be removed\nin the next version of DataTables. Please use mRender \/ mData rather than\nfnRender.<\/p>","default":"true","param_type":"boolean","code":"","inputs":"","returns":"","group":"Columns"},{"type":"boolean","parameter":"bVisible","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Enable or disable the display of this column.<\/p><\/div><\/div>","purpose":"<p>Enable or disable the display of this column.<\/p>","default":"true","param_type":"boolean","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"bVisible\": false, \"aTargets\": [ 0 ] }\n       ] } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"bVisible\": false },\n         null,\n         null,\n         null,\n         null\n       ] } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"function","parameter":"fnCreatedCell","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Developer definable function that is called whenever a cell is created (Ajax source,\netc) or processed for input (DOM source). This can b...<\/div><\/div>","purpose":"<p>Developer definable function that is called whenever a cell is created (Ajax source,\netc) or processed for input (DOM source). This can be used as a compliment to mRender\nallowing you to modify the DOM element (add background colour for example) when the\nelement is available.<\/p>","default":"","param_type":"function","code":"   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ {\n         \"aTargets\": [3],\n         \"fnCreatedCell\": function (nTd, sData, oData, iRow, iCol) {\n           if ( sData == \"1.7\" ) {\n             $(nTd).css('color', 'blue')\n           }\n         }\n       } ]\n     });\n   } );","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">element<\/i>}: The TD node that has been created<\/li><li>{<i class=\"doc_param\">*<\/i>}: The Data for the cell<\/li><li>{<i class=\"doc_param\">array<\/i>|<i class=\"doc_param\">object<\/i>}: The data for the whole row<\/li><li>{<i class=\"doc_param\">int<\/i>}: The row index for the aoData data store<\/li><li>{<i class=\"doc_param\">int<\/i>}: The column index for aoColumns<\/li><\/ol>","returns":"","group":"Columns"},{"type":"function","parameter":"fnRender","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p><code>Deprecated<\/code> Custom display function that will be called for the \ndisplay of each cell in this column.<\/p>\n\n<p>Please note tha...<\/div><\/div>","purpose":"<p><code>Deprecated<\/code> Custom display function that will be called for the \ndisplay of each cell in this column.<\/p>\n\n<p>Please note that this option has now been deprecated and will be removed\nin the next version of DataTables. Please use mRender \/ mData rather than\nfnRender.<\/p>","default":"","param_type":"function","code":"","inputs":"<ol class=\"doc_params\"><li>{<i class=\"doc_param\">object<\/i>}: Object with the following parameters:<\/li><li>{<i class=\"doc_param\">int<\/i>}: The row in aoData<\/li><li>{<i class=\"doc_param\">int<\/i>}: The column in question<\/li><li>{<i class=\"doc_param\">array<\/i>}: The data for the row in question<\/li><li>{<i class=\"doc_param\">object<\/i>}: The settings object for this DataTables instance<\/li><li>{<i class=\"doc_param\">object<\/i>}: The data property used for this column<\/li><li>{<i class=\"doc_param\">*<\/i>}: The current cell value<\/li><\/ol>","returns":"{<i class=\"doc_param\">string<\/i>}: The string you which to use in the display","group":"Columns"},{"type":"int","parameter":"iDataSort","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The column index (starting from 0!) that you wish a sort to be performed\nupon when this column is selected for sorting. This can be used ...<\/div><\/div>","purpose":"<p>The column index (starting from 0!) that you wish a sort to be performed\nupon when this column is selected for sorting. This can be used for sorting\non hidden columns for example.<\/p>","default":"-1 <i>Use automatically calculated column index<\/i>","param_type":"int","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"iDataSort\": 1, \"aTargets\": [ 0 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"iDataSort\": 1 },\n         null,\n         null,\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"mData","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This property can be used to read data from any JSON data source property,\nincluding deeply nested objects \/ properties. mData can be giv...<\/div><\/div>","purpose":"<p>This property can be used to read data from any JSON data source property,\nincluding deeply nested objects \/ properties. mData can be given in a\nnumber of different ways which effect its behaviour:\n  <ul>\n    <li>integer - treated as an array index for the data source. This is the\n      default that DataTables uses (incrementally increased for each column).<\/li>\n    <li>string - read an object property from the data source. Note that you can\n      use Javascript dotted notation to read deep properties \/ arrays from the\n      data source.<\/li>\n    <li>null - the sDefaultContent option will be used for the cell (null\n      by default, so you will need to specify the default content you want -\n      typically an empty string). This can be useful on generated columns such \n      as edit \/ delete action columns.<\/li>\n    <li>function - the function given will be executed whenever DataTables \n      needs to set or get the data for a cell in the column. The function \n      takes three parameters:\n      <ul>\n        <li>{array|object} The data source for the row<\/li>\n        <li>{string} The type call data requested - this will be 'set' when\n          setting data or 'filter', 'display', 'type', 'sort' or undefined when \n          gathering data. Note that when <i>undefined<\/i> is given for the type\n          DataTables expects to get the raw data for the object back<\/li>\n        <li>{*} Data to set when the second parameter is 'set'.<\/li>\n      <\/ul>\n      The return value from the function is not required when 'set' is the type\n      of call, but otherwise the return is what will be used for the data\n      requested.<\/li>\n   <\/ul><\/p>\n\n<p>Note that prior to DataTables 1.9.2 mData was called mDataProp. The name change\nreflects the flexibility of this property and is consistent with the naming of\nmRender. If 'mDataProp' is given, then it will still be used by DataTables, as\nit automatically maps the old name to the new if required.<\/p>","default":"null <i>Use automatically calculated column index<\/i>","param_type":"string","code":"   \/\/ Read table data from objects\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"sAjaxSource\": \"sources\/deep.txt\",\n       \"aoColumns\": [\n         { \"mData\": \"engine\" },\n         { \"mData\": \"browser\" },\n         { \"mData\": \"platform.inner\" },\n         { \"mData\": \"platform.details.0\" },\n         { \"mData\": \"platform.details.1\" }\n       ]\n     } );\n   } );\n\n \n   \/\/ Using mData as a function to provide different information for\n   \/\/ sorting, filtering and display. In this case, currency (price)\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"aoColumnDefs\": [ {\n         \"aTargets\": [ 0 ],\n         \"mData\": function ( source, type, val ) {\n           if (type === 'set') {\n             source.price = val;\n             \/\/ Store the computed dislay and filter values for efficiency\n             source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n             source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n             return;\n           }\n           else if (type === 'display') {\n             return source.price_display;\n           }\n           else if (type === 'filter') {\n             return source.price_filter;\n           }\n           \/\/ 'sort', 'type' and undefined all just use the integer\n           return source.price;\n         }\n       } ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"mRender","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This property is the rendering partner to mData and it is suggested that\r\nwhen you want to manipulate data for display (including filteri...<\/div><\/div>","purpose":"<p>This property is the rendering partner to mData and it is suggested that\r\nwhen you want to manipulate data for display (including filtering, sorting etc)\r\nbut not altering the underlying data for the table, use this property. mData\r\ncan actually do everything this property can and more, but this parameter is\r\neasier to use since there is no 'set' option. Like mData this can be given\r\nin a number of different ways to effect its behaviour, with the addition of \r\nsupporting array syntax for easy outputting of arrays (including arrays of\r\nobjects):\r\n  <ul>\r\n    <li>integer - treated as an array index for the data source. This is the\r\n      default that DataTables uses (incrementally increased for each column).<\/li>\r\n    <li>string - read an object property from the data source. Note that you can\r\n      use Javascript dotted notation to read deep properties \/ arrays from the\r\n      data source and also array brackets to indicate that the data reader should\r\n      loop over the data source array. When characters are given between the array\r\n      brackets, these characters are used to join the data source array together.\r\n      For example: \"accounts[, ].name\" would result in a comma separated list with\r\n      the 'name' value from the 'accounts' array of objects.<\/li>\r\n    <li>function - the function given will be executed whenever DataTables \r\n      needs to set or get the data for a cell in the column. The function \r\n      takes three parameters:\r\n      <ul>\r\n        <li>{array|object} The data source for the row (based on mData)<\/li>\r\n        <li>{string} The type call data requested - this will be 'filter', 'display', \r\n          'type' or 'sort'.<\/li>\r\n        <li>{array|object} The full data source for the row (not based on mData)<\/li>\r\n      <\/ul>\r\n      The return value from the function is what will be used for the data\r\n      requested.<\/li>\r\n   <\/ul><\/p>","default":"null <i>Use mData<\/i>","param_type":"string","code":"   \/\/ Create a comma separated list from an array of objects\r\n   $(document).ready( function() {\r\n     var oTable = $('#example').dataTable( {\r\n       \"sAjaxSource\": \"sources\/deep.txt\",\r\n       \"aoColumns\": [\r\n         { \"mData\": \"engine\" },\r\n         { \"mData\": \"browser\" },\r\n         {\r\n           \"mData\": \"platform\",\r\n           \"mRender\": \"[, ].name\"\r\n         }\r\n       ]\r\n     } );\r\n   } );\r\n\r\n \r\n   \/\/ Use as a function to create a link from the data source\r\n   $(document).ready( function() {\r\n     var oTable = $('#example').dataTable( {\r\n       \"aoColumnDefs\": [ {\r\n         \"aTargets\": [ 0 ],\r\n         \"mData\": \"download_link\",\r\n         \"mRender\": function ( data, type, full ) {\r\n           return '<a href=\"'+data+'\">Download<\/a>';\r\n         }\r\n       } ]\r\n     } );\r\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sCellType","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Change the cell type created for the column - either TD cells or TH cells. This\ncan be useful as TH cells have semantic meaning in the ta...<\/div><\/div>","purpose":"<p>Change the cell type created for the column - either TD cells or TH cells. This\ncan be useful as TH cells have semantic meaning in the table body, allowing them\nto act as a header for a row (you may wish to add scope='row' to the TH elements).<\/p>","default":"td","param_type":"string","code":"   \/\/ Make the first column use TH cells\n   $(document).ready( function() {\n     var oTable = $('#example').dataTable( {\n       \"aoColumnDefs\": [ {\n         \"aTargets\": [ 0 ],\n         \"sCellType\": \"th\"\n       } ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sClass","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Class to give to each cell in this column.<\/p><\/div><\/div>","purpose":"<p>Class to give to each cell in this column.<\/p>","default":"<i>Empty string<\/i>","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"sClass\": \"my_class\", \"aTargets\": [ 0 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"sClass\": \"my_class\" },\n         null,\n         null,\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sContentPadding","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>When DataTables calculates the column widths to assign to each column,\nit finds the longest string in each column and then constructs a\nt...<\/div><\/div>","purpose":"<p>When DataTables calculates the column widths to assign to each column,\nit finds the longest string in each column and then constructs a\ntemporary table and reads the widths from that. The problem with this\nis that \"mmm\" is much wider then \"iiii\", but the latter is a longer \nstring - thus the calculation can go wrong (doing it properly and putting\nit into an DOM object and measuring that is horribly(!) slow). Thus as\na \"work around\" we provide this option. It will append its value to the\ntext that is found to be the longest string for the column - i.e. padding.\nGenerally you shouldn't need this, and it is not documented on the \ngeneral DataTables.net documentation<\/p>","default":"<i>Empty string<i>","param_type":"string","code":"   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         null,\n         null,\n         null,\n         {\n           \"sContentPadding\": \"mmm\"\n         }\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sDefaultContent","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Allows a default value to be given for a column's data, and will be used\nwhenever a null data source is encountered (this can be because ...<\/div><\/div>","purpose":"<p>Allows a default value to be given for a column's data, and will be used\nwhenever a null data source is encountered (this can be because mData\nis set to null, or because the data source itself is null).<\/p>","default":"null","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         {\n           \"mData\": null,\n           \"sDefaultContent\": \"Edit\",\n           \"aTargets\": [ -1 ]\n         }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         null,\n         null,\n         null,\n         {\n           \"mData\": null,\n           \"sDefaultContent\": \"Edit\"\n         }\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sName","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>This parameter is only used in DataTables' server-side processing. It can\nbe exceptionally useful to know what columns are being displaye...<\/div><\/div>","purpose":"<p>This parameter is only used in DataTables' server-side processing. It can\nbe exceptionally useful to know what columns are being displayed on the\nclient side, and to map these to database fields. When defined, the names\nalso allow DataTables to reorder information from the server if it comes\nback in an unexpected order (i.e. if you switch your columns around on the\nclient-side, your server-side code does not also need updating).<\/p>","default":"<i>Empty string<\/i>","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"sName\": \"engine\", \"aTargets\": [ 0 ] },\n         { \"sName\": \"browser\", \"aTargets\": [ 1 ] },\n         { \"sName\": \"platform\", \"aTargets\": [ 2 ] },\n         { \"sName\": \"version\", \"aTargets\": [ 3 ] },\n         { \"sName\": \"grade\", \"aTargets\": [ 4 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"sName\": \"engine\" },\n         { \"sName\": \"browser\" },\n         { \"sName\": \"platform\" },\n         { \"sName\": \"version\" },\n         { \"sName\": \"grade\" }\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sSortDataType","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Defines a data source type for the sorting which can be used to read\nreal-time information from the table (updating the internally cached...<\/div><\/div>","purpose":"<p>Defines a data source type for the sorting which can be used to read\nreal-time information from the table (updating the internally cached\nversion) prior to sorting. This allows sorting to occur on user editable\nelements such as form inputs.<\/p>","default":"std","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [\n         { \"sSortDataType\": \"dom-text\", \"aTargets\": [ 2, 3 ] },\n         { \"sType\": \"numeric\", \"aTargets\": [ 3 ] },\n         { \"sSortDataType\": \"dom-select\", \"aTargets\": [ 4 ] },\n         { \"sSortDataType\": \"dom-checkbox\", \"aTargets\": [ 5 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [\n         null,\n         null,\n         { \"sSortDataType\": \"dom-text\" },\n         { \"sSortDataType\": \"dom-text\", \"sType\": \"numeric\" },\n         { \"sSortDataType\": \"dom-select\" },\n         { \"sSortDataType\": \"dom-checkbox\" }\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sTitle","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The title of this column.<\/p><\/div><\/div>","purpose":"<p>The title of this column.<\/p>","default":"null <i>Derived from the 'TH' value for this column in the \n   original HTML table.<\/i>","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"sTitle\": \"My column title\", \"aTargets\": [ 0 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"sTitle\": \"My column title\" },\n         null,\n         null,\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sType","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>The type allows you to specify how the data for this column will be sorted.\nFour types (string, numeric, date and html (which will strip ...<\/div><\/div>","purpose":"<p>The type allows you to specify how the data for this column will be sorted.\nFour types (string, numeric, date and html (which will strip HTML tags\nbefore sorting)) are currently available. Note that only date formats\nunderstood by Javascript's Date() object will be accepted as type date. For\nexample: \"Mar 26, 2008 5:03 PM\". May take the values: 'string', 'numeric',\n'date' or 'html' (by default). Further types can be adding through\nplug-ins.<\/p>","default":"null <i>Auto-detected from raw data<\/i>","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"sType\": \"html\", \"aTargets\": [ 0 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"sType\": \"html\" },\n         null,\n         null,\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"},{"type":"string","parameter":"sWidth","purpose_short":"<div class=\"purpose\"><div class=\"purposeInner\"><p>Defining the width of the column, this parameter may take any CSS value\r\n(3em, 20px etc). DataTables applies 'smart' widths to columns wh...<\/div><\/div>","purpose":"<p>Defining the width of the column, this parameter may take any CSS value\r\n(3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\nbeen given a specific width through this interface ensuring that the table\r\nremains readable.<\/p>","default":"null <i>Automatic<\/i>","param_type":"string","code":"   \/\/ Using aoColumnDefs\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumnDefs\": [ \n         { \"sWidth\": \"20%\", \"aTargets\": [ 0 ] }\n       ]\n     } );\n   } );\n   \n \n   \/\/ Using aoColumns\n   $(document).ready( function() {\n     $('#example').dataTable( {\n       \"aoColumns\": [ \n         { \"sWidth\": \"20%\" },\n         null,\n         null,\n         null,\n         null\n       ]\n     } );\n   } );","inputs":"","returns":"","group":"Columns"}];		
		
			$(document).ready( function () {
				var anOpen = [];
				var sImageUrl = "/release-datatables/examples/examples_support/";
				SyntaxHighlighter.config.clipboardSwf = '/media/javascript/syntax/clipboard.swf';
				
				var search = "";
				if ( window.location.hash !== "" ) {
					search = window.location.hash.substring( 1 );
				}
				
				var oTable = $('#reference').dataTable( {
					"aaData": aData,
					"bPaginate": false,
					"bSortClasses": false,
					"aaSorting": [[1, 'asc']],
					"oSearch": { "sSearch": search },
					"aoColumns": [
						{
							"mDataProp": null,
							"sClass": "control center",
							"sDefaultContent": '<img src="'+sImageUrl+'details_open.png'+'">',
							"bSortable": false
						},
						{ "mDataProp": 'parameter' },
						{ "mDataProp": 'group', "sWidth": "160px" },
						{ "mDataProp": 'purpose_short' }
					],
					"fnInitComplete": function () {
						this.fnAdjustColumnSizing();
						$('div.dataTables_filter input').focus();
					}
				} );
				
				$('#reference tbody tr').live( 'click', function () {
					if ( $(this).hasClass( 'details' ) ) {
						return;
					}
					var nTr = this;
					var i = $.inArray( nTr, anOpen );
					var oData = oTable.fnGetData( nTr );
					
					if ( i === -1 ) {
						if( oData.purpose_short != oData.purpose ) {
							$('div.purposeInner', nTr).html( oData.purpose );
							$('div.purpose', nTr).animate({
								"height": $('div.purposeInner', nTr).height()
							});
						}
						
						$('img', this).attr( 'src', sImageUrl+"details_close.png" );
						var nDetailsRow = oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' );
						nDetailsRow.className += ' '+nTr.className;
						$('div.innerDetails', nDetailsRow).slideDown();
						anOpen.push( nTr );
						SyntaxHighlighter.highlight();
					}
					else {
						$('img', this).attr( 'src', sImageUrl+"details_open.png" );
						if( oData.purpose_short != oData.purpose ) {
							$('div.purpose', nTr).animate({
								"height": 46
							});
						}
						$('div.innerDetails', $(nTr).next()[0]).slideUp( function () {
							if( oData.purpose_short != oData.purpose ) {
								$('div.purposeInner', nTr).html( oData.purpose_short );
							}
							oTable.fnClose( nTr );
							anOpen.splice( i, 1 );
						} );
					}
				} );
				
				var tableData = oTable.fnGetData();
				setTimeout( function () {
					for ( var i=0, iLen=tableData.length; i<iLen ; i++ ) {
						if ( search == tableData[i].parameter ) {
								$(oTable.fnSettings().aoData[i].nTr).click();
								$('div.dataTables_filter input').focus();
						}
					}
				}, 300 );
			} );
			
			
			function fnFormatDetails( oTable, nTr )
			{
				var oData = oTable.fnGetData( nTr );
				var sOut = 
					'<div class="innerDetails">'+
						'<div class="column_details">'+
							'<table cellpadding="5" cellspacing="0" border="0">'+
								'<tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>'+oData.parameter+'</td></tr>'+
								'<tr><td valign="top"><b>Type</b>:</td><td>'+oData.param_type+'</td></tr>';
				if ( oData['default'] !== "" ) {
					sOut += 	'<tr><td valign="top"><b>Default</b>:</td><td>'+oData['default']+'</td></tr>';
				}
				if ( oData.inputs !== "" ) {
					sOut += 	'<tr><td valign="top"><b>Inputs</b>:</td><td>'+oData.inputs+'</td></tr>';
				}
				if ( oData.returns !== "" ) {
					sOut += 	'<tr><td valign="top"><b>Returns</b>:</td><td>'+oData.returns+'</td></tr>';
				}
				sOut += 
							'</table>'+
						'</div>'+
						'<div class="column_code">'+
							'<pre class="brush: js; font-size: 75%">'+oData.code+'</pre>'+
						'</div>'+
						'<div class="clear"></div>'+
					'</div>';
				return sOut;
			}
		</script>
	<script type="text/javascript" async="" src="./DataTables - Reference_files/bsa.js"></script><script type="text/javascript" id="_bsap_js_4b4cb470d035b673ad498e2a46300b4d" src="./DataTables - Reference_files/s_4b4cb470d035b673ad498e2a46300b4d.js" async="async"></script><style type="text/css" id="bsa_css">.one{position:relative}.one .bsa_it_ad{display:block;padding:15px;border:1px solid #e1e1e1;background:#f9f9f9;font-family:helvetica,arial,sans-serif;line-height:100%;position:relative}.one .bsa_it_ad a{text-decoration:none}.one .bsa_it_ad a:hover{text-decoration:none}.one .bsa_it_ad .bsa_it_t{display:block;font-size:12px;font-weight:bold;color:#212121;line-height:125%;padding:0 0 5px 0}.one .bsa_it_ad .bsa_it_d{display:block;font-size:11px;color:#434343;font-size:12px;line-height:135%}.one .bsa_it_ad .bsa_it_i{float:left;margin:0 15px 10px 0}.one .bsa_it_p{display:block;text-align:right;position:absolute;bottom:10px;right:15px}.one .bsa_it_p a{font-size:10px;color:#666;text-decoration:none}.one .bsa_it_ad .bsa_it_p a:hover{font-style:italic}</style></head>
	<body class="grid_2_3">
		<div id="fw_container">
			
			
<script type="text/javascript">

(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = '//s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();

</script>


			<div id="fw_header">
				<h1>
					<a href="http://datatables.net/index">
						<img src="./DataTables - Reference_files/DataTables.jpg" alt="DataTables logo">
						DataTables
					</a>
				</h1>
				<ul>
					<li><a href="http://datatables.net/usage">Usage</a></li>
					<li><a href="http://datatables.net/examples">Examples</a></li>
					<li><a href="http://datatables.net/styling">Styling</a></li>
					<li><a href="http://datatables.net/api">API</a></li>
					<li><a href="http://datatables.net/development">Development</a></li>
					<li><a href="http://editor.datatables.net/">Editor</a></li>
					<li><a href="http://datatables.net/extras">Extras</a></li>
					<li><a href="http://datatables.net/plug-ins">Plug-ins</a></li>
					<li><a href="http://datatables.net/blog">Blog</a></li>
					<li><a href="http://datatables.net/faqs">FAQs</a></li>
					<li><a href="http://datatables.net/forums">Forums</a></li>
									</ul>
				<div class="css_clear"></div>
								
								
				
				<div id="header_options">
					<div id="options_donate" class="option">
						<a href="http://datatables.net/donate">
							<table cellpadding="0" cellspacing="0" border="0">
								<tbody><tr>
									<td>
										<img src="./DataTables - Reference_files/beer.png" alt="Donate icon">
									</td>
									<td style="line-height:16px;">
										Donate <br><span class="css_vsmall"></span>
									</td>
								</tr>
							</tbody></table>
						</a>
					</div>
					<div id="options_download" class="option">
						<a href="http://datatables.net/download">
							<table cellpadding="0" cellspacing="0" border="0">
								<tbody><tr>
									<td>
										<img src="./DataTables - Reference_files/download.png" alt="Download icon">
									</td>
									<td style="line-height:16px;">
										Download <br><span class="css_vsmall">v1.9.4</span>
									</td>
								</tr>
							</tbody></table>
						</a>
					</div>
					<div id="options_support" class="option">
						<a href="http://datatables.net/support">
							<table cellpadding="0" cellspacing="0" border="0">
								<tbody><tr>
									<td>
										<img src="./DataTables - Reference_files/support.png" alt="Support icon">
									</td>
									<td style="line-height: 16px;">
										Support<br><span class="css_vsmall">3h 11m avg response</span>
									</td>
								</tr>
							</tbody></table>
						</a>
					</div>
			 		<div id="options_search" class="option">
			 			<form action="http://datatables.net/search" id="cse-search-box">
			 				<img src="./DataTables - Reference_files/search.png" alt="Search icon">
		   				<input type="hidden" name="cx" value="004673356914326163298:bcgejkcchl4">
			 				<input type="hidden" name="cof" value="FORID:9">
			 				<input type="hidden" name="ie" value="UTF-8">
			 				<input type="text" name="q" size="31" style="border: 1px solid rgb(126, 157, 185); padding: 2px; background-image: url(http://www.google.com/cse/intl/en/images/google_custom_search_watermark.gif); background-color: rgb(255, 255, 255); background-position: 0% 50%; background-repeat: no-repeat no-repeat;">
			 				<input type="submit" name="sa" value="Search">
			 			<input name="siteurl" type="hidden" value="datatables.net/ref"><input name="ref" type="hidden" value="datatables.net/usage/"><input name="ss" type="hidden" value=""></form>
			 			<script type="text/javascript" src="./DataTables - Reference_files/brand"></script>
			 		</div>
				</div>
				
				<div id="header_advert">
					<div id="bsap_1266180" class="bsap_1266180 bsap"><div class="bsa_it one"><div class="bsa_it_ad ad1 odd" id="bsa_4166532"><a href="http://stats.buysellads.com/click.go?z=1266180&b=4166532&g=&s=&sw=1920&sh=1080&br=chrome,31,win&r=0.634700610069558&link=http://bsa.ly/1ep3" onmouseover="window.status = &#39;http://bsa.ly/1ep3&#39;; return true;" onmouseout="window.status=&#39;&#39;; return true;" target="_blank"><span class="bsa_it_i"><img src="./DataTables - Reference_files/GTNDC27ICWAI627MC674YK7UCKBILKJMCYYDKZ3ICA7IP5QLCE7I453K23BFVA3BHAUN4ASIKMBFCZI45MAUC7ZK2JENVA75K2UNBZSEHRNN4SI3KRLLOYZI52LUVZSQKEUIK23NCT" width="130" height="100" alt="Treehouse"></span></a><a href="http://stats.buysellads.com/click.go?z=1266180&b=4166532&g=&s=&sw=1920&sh=1080&br=chrome,31,win&r=0.3364351852796972&link=http://bsa.ly/1ep3" onmouseover="window.status = &#39;http://bsa.ly/1ep3&#39;; return true;" onmouseout="window.status=&#39;&#39;; return true;" target="_blank"><span class="bsa_it_t">Treehouse</span><span class="bsa_it_d">Learn Web Design, Coding, Mobile App Development &amp; More</span></a><div style="clear:both"></div></div><span class="bsa_it_p"><a href="http://buysellads.com/buy/detail/110715/zone/1266180?utm_source=site_110715&utm_medium=website&utm_campaign=imagetext&utm_content=zone_1266180">ads by BSA</a></span></div></div><a href="http://adpacks.com/" id="bsap_aplink">via Ad Packs</a>					<div id="donate_advert" class="button" style="display:none; position:absolute; width:130px; padding:10px; top:10px; color:#4E6CA3">
						Help DataTables
						<span class="small" style="line-height:1.4em; margin: 6px 0 0 0; font-size: 12px">Make a donation to help DataTables support and development</span>
					</div>
				</div>
			</div>
			
						
		<div id="fw_content">
			<h2>Reference</h2>
			<p>
				This page is a quick access reference for initialisation options and API methods. To view
				The details of each option, including a code sample, simply click on the row.
			</p>
			
			<div id="reference_wrapper" class="dataTables_wrapper" role="grid"><div class="dataTables_filter" id="reference_filter"><label>Search: <input type="text" aria-controls="reference"></label></div><table id="reference" border="0" cellspacing="5" cellpadding="0" class="display dataTable" aria-describedby="reference_info" style="width: 980px;">
				<thead>
					<tr role="row"><th class="sorting_disabled control center" role="columnheader" rowspan="1" colspan="1" aria-label="" style="width: 1px;"></th><th class="sorting_asc" role="columnheader" tabindex="0" aria-controls="reference" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Parameter: activate to sort column descending" style="width: 224px;">Parameter</th><th class="sorting" role="columnheader" tabindex="0" aria-controls="reference" rowspan="1" colspan="1" aria-label="Config type: activate to sort column ascending" style="width: 160px;">Config type</th><th class="sorting" role="columnheader" tabindex="0" aria-controls="reference" rowspan="1" colspan="1" aria-label="Purpose: activate to sort column ascending" style="width: 515px;">Purpose</th></tr>
				</thead>
				
			<tbody role="alert" aria-live="polite" aria-relevant="all"><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">$</td><td class="">API</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Perform a jQuery selector action on the table's TR elements (from the tbody) and
return the resulting jQuery object.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>$</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>|<i class="doc_param">node</i>|<i class="doc_param">jQuery</i>}: jQuery selector or node collection to act on</li><li>{<i class="doc_param">object</i>}: Optional parameters for modifying the rows to be included</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">none</span>]: Select TR elements that meet the current filter
   criterion ("applied") or all TR elements (i.e. no filter).</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">current</span>]: Order of the TR elements in the processed array.
   Can be either 'current', whereby the current sorting of the table is used, or
   'original' whereby the original order the data was read into the table is used.</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">all</span>]: Limit the selection to the currently displayed page
   ("current") or not ("all"). If 'current' is given, then order is assumed to be 
   'current' and filter is 'applied', regardless of what they might be given as.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">object</i>}: jQuery object, filtered by the given selector.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_208258" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Highlight every second row</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.$(</code><code class="js string">'tr:odd'</code><code class="js plain">).css(</code><code class="js string">'backgroundColor'</code><code class="js plain">, </code><code class="js string">'blue'</code><code class="js plain">);</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Filter to rows with 'Webkit' in them, add a background colour and then</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// remove the filter, thus highlighting the 'Webkit' rows only.</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnFilter(</code><code class="js string">'Webkit'</code><code class="js plain">);</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.$(</code><code class="js string">'tr'</code><code class="js plain">, {</code><code class="js string">"filter"</code><code class="js plain">: </code><code class="js string">"applied"</code><code class="js plain">}).css(</code><code class="js string">'backgroundColor'</code><code class="js plain">, </code><code class="js string">'blue'</code><code class="js plain">);</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnFilter(</code><code class="js string">''</code><code class="js plain">);</code></div><div class="line number17 index16 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">_</td><td class="">API</td><td class=""><div class="purpose" style="height: 197px;"><div class="purposeInner"><p>Almost identical to $ in operation, but in this case returns the data for the matched
rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
rather than any descendants, so the data can be obtained for the row/cell. If matching
rows are found, the data returned is the original data array/object that was used to create the row (or a generated array if from a DOM source).</p>

<p>This method is often useful in-combination with $ where both functions are given the
same parameters and the array indexes will match identically.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>_</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>|<i class="doc_param">node</i>|<i class="doc_param">jQuery</i>}: jQuery selector or node collection to act on</li><li>{<i class="doc_param">object</i>}: Optional parameters for modifying the rows to be included</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">none</span>]: Select elements that meet the current filter
   criterion ("applied") or all elements (i.e. no filter).</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">current</span>]: Order of the data in the processed array.
   Can be either 'current', whereby the current sorting of the table is used, or
   'original' whereby the original order the data was read into the table is used.</li><li>{<i class="doc_param">string</i>} [default=<span class="doc_default">all</span>]: Limit the selection to the currently displayed page
   ("current") or not ("all"). If 'current' is given, then order is assumed to be 
   'current' and filter is 'applied', regardless of what they might be given as.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>}: Data for the matched elements. If any elements, as a result of the
   selector, were not TR, TD or TH elements in the DataTable, they will have a null 
   entry in the array.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_170349" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Get the data from the first row in the table</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">data = oTable._(</code><code class="js string">'tr:first'</code><code class="js plain">);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Do something useful with the data</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">alert( </code><code class="js string">"First cell is: "</code><code class="js plain">+data[0] );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Filter to 'Webkit' and get all data for </code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnFilter(</code><code class="js string">'Webkit'</code><code class="js plain">);</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">data = oTable._(</code><code class="js string">'tr'</code><code class="js plain">, {</code><code class="js string">"filter"</code><code class="js plain">: </code><code class="js string">"applied"</code><code class="js plain">});</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Do something with the data</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">alert( data.length+</code><code class="js string">" rows matched the filter"</code> <code class="js plain">);</code></div><div class="line number21 index20 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aaData</td><td class="">Option</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>An array of data to use for the table, passed in at initialisation which 
will be used in preference to any data which is already in the DOM. This is
particularly useful for constructing tables purely in Javascript, for
example with a custom Ajax call.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aaData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_11103" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using a 2D array data source</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aaData"</code><code class="js plain">: [</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">[</code><code class="js string">'Trident'</code><code class="js plain">, </code><code class="js string">'Internet Explorer 4.0'</code><code class="js plain">, </code><code class="js string">'Win 95+'</code><code class="js plain">, 4, </code><code class="js string">'X'</code><code class="js plain">],</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">[</code><code class="js string">'Trident'</code><code class="js plain">, </code><code class="js string">'Internet Explorer 5.0'</code><code class="js plain">, </code><code class="js string">'Win 95+'</code><code class="js plain">, 5, </code><code class="js string">'C'</code><code class="js plain">],</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">],</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Engine"</code> <code class="js plain">},</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Browser"</code> <code class="js plain">},</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Platform"</code> <code class="js plain">},</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Version"</code> <code class="js plain">},</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Grade"</code> <code class="js plain">}</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number16 index15 alt1"><code class="js plain">} );</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="js comments">// Using an array of objects as a data source (mData)</code></div><div class="line number20 index19 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aaData"</code><code class="js plain">: [</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"engine"</code><code class="js plain">:&nbsp;&nbsp; </code><code class="js string">"Trident"</code><code class="js plain">,</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"browser"</code><code class="js plain">:&nbsp; </code><code class="js string">"Internet Explorer 4.0"</code><code class="js plain">,</code></div><div class="line number26 index25 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"platform"</code><code class="js plain">: </code><code class="js string">"Win 95+"</code><code class="js plain">,</code></div><div class="line number27 index26 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"version"</code><code class="js plain">:&nbsp; 4,</code></div><div class="line number28 index27 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"grade"</code><code class="js plain">:&nbsp;&nbsp;&nbsp; </code><code class="js string">"X"</code></div><div class="line number29 index28 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">},</code></div><div class="line number30 index29 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number31 index30 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"engine"</code><code class="js plain">:&nbsp;&nbsp; </code><code class="js string">"Trident"</code><code class="js plain">,</code></div><div class="line number32 index31 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"browser"</code><code class="js plain">:&nbsp; </code><code class="js string">"Internet Explorer 5.0"</code><code class="js plain">,</code></div><div class="line number33 index32 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"platform"</code><code class="js plain">: </code><code class="js string">"Win 95+"</code><code class="js plain">,</code></div><div class="line number34 index33 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"version"</code><code class="js plain">:&nbsp; 5,</code></div><div class="line number35 index34 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"grade"</code><code class="js plain">:&nbsp;&nbsp;&nbsp; </code><code class="js string">"C"</code></div><div class="line number36 index35 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number37 index36 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">],</code></div><div class="line number38 index37 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number39 index38 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Engine"</code><code class="js plain">,&nbsp;&nbsp; </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"engine"</code> <code class="js plain">},</code></div><div class="line number40 index39 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Browser"</code><code class="js plain">,&nbsp; </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"browser"</code> <code class="js plain">},</code></div><div class="line number41 index40 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Platform"</code><code class="js plain">, </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"platform"</code> <code class="js plain">},</code></div><div class="line number42 index41 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Version"</code><code class="js plain">,&nbsp; </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"version"</code> <code class="js plain">},</code></div><div class="line number43 index42 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"Grade"</code><code class="js plain">,&nbsp;&nbsp;&nbsp; </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"grade"</code> <code class="js plain">}</code></div><div class="line number44 index43 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number45 index44 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number46 index45 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aaSorting</td><td class="">Option</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>If sorting is enabled, then DataTables will perform a first pass sort on 
initialisation. You can define which column(s) the sort is performed upon, 
and the sorting direction, with this variable. The aaSorting array should 
contain an array for each column to be sorted initially containing the 
column's index and a direction string ('asc' or 'desc').</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aaSorting</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>[[0,'asc']]</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_473603" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Sort by 3rd column first, and then 4th column</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aaSorting"</code><code class="js plain">: [[2,</code><code class="js string">'asc'</code><code class="js plain">], [3,</code><code class="js string">'desc'</code><code class="js plain">]]</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="js comments">// No initial sorting</code></div><div class="line number9 index8 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aaSorting"</code><code class="js plain">: []</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aaSortingFixed</td><td class="">Option</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>This parameter is basically identical to the aaSorting parameter, but 
cannot be overridden by user interaction with the table. What this means 
is that you could have a column (visible or hidden) which the sorting will 
always be forced on first - any sorting after that (from the user) will 
then be performed as required. This can be useful for grouping rows 
together.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aaSortingFixed</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_887878" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aaSortingFixed"</code><code class="js plain">: [[0,</code><code class="js string">'asc'</code><code class="js plain">]]</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aDataSort</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Allows a column's sorting to take multiple columns into account when 
doing a sort. For example first name / last name columns make sense to 
do a multi-column sort over the two columns.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aDataSort</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Takes the value of the column index automatically</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_469099" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 0, 1 ], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] },</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 1, 0 ], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 1 ] },</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 2, 3, 4 ], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 2 ] }</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} );</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number14 index13 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 0, 1 ] },</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 1, 0 ] },</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"aDataSort"</code><code class="js plain">: [ 2, 3, 4 ] },</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number24 index23 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aLengthMenu</td><td class="">Option</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>This parameter allows you to readily specify the entries in the length drop
down menu that DataTables shows when pagination is enabled. It can be 
either a 1D array of options which will be used for both the displayed 
option and the value, or a 2D array which will use the array in the first 
position as the value, and the array in the second position as the 
displayed options (useful for language strings such as 'All').</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aLengthMenu</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>[ 10, 25, 50, 100 ]</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_391306" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aLengthMenu"</code><code class="js plain">: [[10, 25, 50, -1], [10, 25, 50, </code><code class="js string">"All"</code><code class="js plain">]]</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="js comments">// Setting the default display length as well as length menu</code></div><div class="line number9 index8 alt2"><code class="js comments">// This is likely to be wanted if you remove the '10' option which</code></div><div class="line number10 index9 alt1"><code class="js comments">// is the iDisplayLength default.</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iDisplayLength"</code><code class="js plain">: 25,</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aLengthMenu"</code><code class="js plain">: [[25, 50, 100, -1], [25, 50, 100, </code><code class="js string">"All"</code><code class="js plain">]]</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number16 index15 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">aoSearchCols</td><td class="">Option</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Basically the same as oSearch, this parameter defines the individual column
filtering state at initialisation time. The array must be of the same size 
as the number of columns, and each element be an object with the parameters
"sSearch" and "bEscapeRegex" (the latter is optional). 'null' is also
accepted and the default will be used.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>aoSearchCols</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>[]</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_39704" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoSearchCols"</code><code class="js plain">: [</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"My filter"</code> <code class="js plain">},</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"^[0-9]"</code><code class="js plain">, </code><code class="js string">"bEscapeRegex"</code><code class="js plain">: </code><code class="js keyword">false</code> <code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">asSorting</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>You can control the default sorting direction, and even alter the behaviour
of the sort handler (i.e. only allow ascending sorting etc) using this
parameter.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>asSorting</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>[ 'asc', 'desc' ]</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_842031" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"asc"</code> <code class="js plain">], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 1 ] },</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"desc"</code><code class="js plain">, </code><code class="js string">"asc"</code><code class="js plain">, </code><code class="js string">"asc"</code> <code class="js plain">], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 2 ] },</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"desc"</code> <code class="js plain">], </code><code class="js string">"aTargets"</code><code class="js plain">: [ 3 ] }</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} );</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number14 index13 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"asc"</code> <code class="js plain">] },</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"desc"</code><code class="js plain">, </code><code class="js string">"asc"</code><code class="js plain">, </code><code class="js string">"asc"</code> <code class="js plain">] },</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"asSorting"</code><code class="js plain">: [ </code><code class="js string">"desc"</code> <code class="js plain">] },</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number24 index23 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">asStripeClasses</td><td class="">Option</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>An array of CSS classes that should be applied to displayed rows. This 
array may be of any length, and DataTables will apply each class 
sequentially, looping when required.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>asStripeClasses</td></tr><tr><td valign="top"><b>Type</b>:</td><td>array</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Will take the values determined by the oClasses.sStripe*
   options</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_179493" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"asStripeClasses"</code><code class="js plain">: [ </code><code class="js string">'strip1'</code><code class="js plain">, </code><code class="js string">'strip2'</code><code class="js plain">, </code><code class="js string">'strip3'</code> <code class="js plain">]</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bAutoWidth</td><td class="">Features</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Enable or disable automatic column width calculation. This can be disabled
as an optimisation (it takes some time to calculate the widths) if the
tables widths are passed in using aoColumns.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bAutoWidth</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_621536" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bAutoWidth"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bDeferRender</td><td class="">Features</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Deferred rendering can provide DataTables with a huge speed boost when you
are using an Ajax or JS data source for the table. This option, when set to
true, will cause DataTables to defer the creation of the table elements for
each row until they are needed for a draw - saving a significant amount of
time.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bDeferRender</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_394116" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/arrays.txt"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bDeferRender"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bDestroy</td><td class="">Options</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Replace a DataTable which matches the given selector and replace it with 
one which has the properties of the new initialisation object passed. If no
table matches the selector, then the new DataTable will be constructed as
per normal.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bDestroy</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_897871" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bPaginate"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Some time later....</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bFilter"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">,</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bDestroy"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bFilter</td><td class="">Features</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>Enable or disable filtering of data. Filtering in DataTables is "smart" in
that it allows the end user to input multiple words (space separated) and
will match a row containing those words, even if not in the order that was
specified (this allows matching across multiple columns). Note that if you
wish to use filtering in DataTables this must remain 'true' - to remove the
default filtering input box and retain filtering abilities, please use
<a href="http://datatables.net/ref#sDom">sDom</a>).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bFilter</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_6862" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bFilter"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bInfo</td><td class="">Features</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Enable or disable the table information display. This shows information 
about the data that is currently visible on the page, including information
about filtered data if that action is being performed.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bInfo</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_884611" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bInfo"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bJQueryUI</td><td class="">Features</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
slightly different and additional mark-up from what DataTables has
traditionally used).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bJQueryUI</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_437403" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bJQueryUI"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bLengthChange</td><td class="">Features</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Allows the end user to select the size of a formatted page from a select
menu (sizes are 10, 25, 50 and 100). Requires pagination (bPaginate).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bLengthChange</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_412708" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bLengthChange"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bPaginate</td><td class="">Features</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Enable or disable pagination.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bPaginate</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_523684" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bPaginate"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bProcessing</td><td class="">Features</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Enable or disable the display of a 'processing' indicator when the table is
being processed (e.g. a sort). This is particularly useful for tables with
large amounts of data where it can take a noticeable amount of time to sort
the entries.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bProcessing</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_943536" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bProcessing"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bRetrieve</td><td class="">Options</td><td class=""><div class="purpose" style="height: 161px;"><div class="purposeInner"><p>Retrieve the DataTables object for the given selector. Note that if the
table has already been initialised, this parameter will cause DataTables
to simply return the object that has already been set up - it will not take
account of any changes you might have made to the initialisation object
passed to DataTables (setting this parameter to true is an acknowledgement
that you understand this). bDestroy can be used to reinitialise a table if
you need.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bRetrieve</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_911324" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">initTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">tableActions();</code></div><div class="line number4 index3 alt1"><code class="js plain">} );</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="js keyword">function</code> <code class="js plain">initTable ()</code></div><div class="line number7 index6 alt2"><code class="js plain">{</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code><code class="js plain">,</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bPaginate"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">,</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bRetrieve"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js plain">}</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="js keyword">function</code> <code class="js plain">tableActions ()</code></div><div class="line number16 index15 alt1"><code class="js plain">{</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = initTable();</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// perform API operations with oTable </code></div><div class="line number19 index18 alt2"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bScrollAutoCss</td><td class="">Options</td><td class=""><div class="purpose" style="height: 152px;"><div class="purposeInner"><p><code>Deprecated</code> Indicate if DataTables should be allowed to set the padding / margin
etc for the scrolling header elements or not. Typically you will want
this.</p>

<p>Please note that this option has now been deprecated and will be removed
in the next version of DataTables. Using CSS with `!important` can be used to achieve the same effect.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bScrollAutoCss</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_12985" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollAutoCss"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bScrollCollapse</td><td class="">Options</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>When vertical (y) scrolling is enabled, DataTables will force the height of
the table's viewport to the given height at all times (useful for layout).
However, this can look odd when filtering data down to a small data set,
and the footer is left "floating" further down. This parameter (when
enabled) will cause DataTables to collapse the table's viewport down when
the result set will fit within the given Y height.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bScrollCollapse</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_766421" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollCollapse"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bScrollInfinite</td><td class="">Features</td><td class=""><div class="purpose" style="height: 175px;"><div class="purposeInner"><p><code>Deprecated</code> Enable infinite scrolling for DataTables (to be used in combination with
sScrollY). Infinite scrolling means that DataTables will continually load
data as a user scrolls through a table, which is very useful for large
dataset. This cannot be used with pagination, which is automatically
disabled.</p>

<p>Please note that this option has now been deprecated and will be removed
in the next version of DataTables. Please use the <a href="http://datatables.net/extras/scroller">Scroller extra</a> instead.</p>
</div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bScrollInfinite</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_18122" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollInfinite"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollCollapse"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bSearchable</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Enable or disable filtering on the data in this column.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bSearchable</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_341157" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bSearchable"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">// Using aoColumns</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bSearchable"</code><code class="js plain">: </code><code class="js keyword">false</code> <code class="js plain">},</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number20 index19 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bServerSide</td><td class="">Features</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Configure DataTables to use server-side processing. Note that the
sAjaxSource parameter must also be given in order to give DataTables a
source to obtain the required data for each draw.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bServerSide</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_350206" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"xhr.php"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bServerSide</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Configure DataTables to use server-side processing. Note that the
sAjaxSource parameter must also be given in order to give DataTables a
source to obtain the required data for each draw.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bServerSide</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_61701" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"xhr.php"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bSort</td><td class="">Features</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Enable or disable sorting of columns. Sorting of individual columns can be
disabled by the "bSortable" option for each column.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bSort</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_546057" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bSort"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bSortable</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Enable or disable sorting on this column.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bSortable</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_740829" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bSortable"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">// Using aoColumns</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bSortable"</code><code class="js plain">: </code><code class="js keyword">false</code> <code class="js plain">},</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number20 index19 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bSortCellsTop</td><td class="">Options</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Allows control over whether DataTables should use the top (true) unique
cell that is found for a single column, or the bottom (false - default).
This is useful when using complex headers.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bSortCellsTop</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_341184" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bSortCellsTop"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bSortClasses</td><td class="">Features</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and
'sorting_3' to the columns which are currently being sorted on. This is
presented as a feature switch as it can increase processing time (while
classes are removed and added) so for large data sets you might want to
turn this off.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bSortClasses</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_830556" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bSortClasses"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bStateSave</td><td class="">Features</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Enable or disable state saving. When enabled a cookie will be used to save
table display information such as pagination information, display length,
filtering and sorting. As such when the end user reloads the page the
display will match what they had previously set up.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bStateSave</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>false</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_797128" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bUseRendered</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 175px;"><div class="purposeInner"><p><code>Deprecated</code> When using fnRender() for a column, you may wish 
to use the original data (before rendering) for sorting and filtering 
(the default is to used the rendered data that the user can see). This 
may be useful for dates etc.</p>

<p>Please note that this option has now been deprecated and will be removed
in the next version of DataTables. Please use mRender / mData rather than
fnRender.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bUseRendered</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_100276" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">&nbsp;</div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">bVisible</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Enable or disable the display of this column.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>bVisible</td></tr><tr><td valign="top"><b>Type</b>:</td><td>boolean</td></tr><tr><td valign="top"><b>Default</b>:</td><td>true</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_328238" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bVisible"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">// Using aoColumns</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"bVisible"</code><code class="js plain">: </code><code class="js keyword">false</code> <code class="js plain">},</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">] } );</code></div><div class="line number20 index19 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnAddData</td><td class="">API</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Add a single new row or multiple rows of data to the table. Please note
that this is suitable for client-side processing only - if you are using 
server-side processing (i.e. "bServerSide": true), then to add data, you
must add it to the data source, i.e. the server-side, through an Ajax call.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnAddData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">array</i>|<i class="doc_param">object</i>}: The data to be added to the table. This can be:
   <ul>
     <li>1D array of data - add a single row with the data provided</li>
     <li>2D array of arrays - add multiple rows in a single call</li>
     <li>object - data object when using <i>mData</i></li>
     <li>array of objects - multiple data objects when using <i>mData</i></li>
   </ul></li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: redraw the table or not</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>}: An array of integers, representing the list of indexes in 
   <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to 
   the table.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_240" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Global var for counter</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">giCount = 2;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="js keyword">function</code> <code class="js plain">fnClickAddRow() {</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable().fnAddData( [</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">giCount+</code><code class="js string">".1"</code><code class="js plain">,</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">giCount+</code><code class="js string">".2"</code><code class="js plain">,</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">giCount+</code><code class="js string">".3"</code><code class="js plain">,</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">giCount+</code><code class="js string">".4"</code> <code class="js plain">]</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">);</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">giCount++;</code></div><div class="line number17 index16 alt2"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnAdjustColumnSizing</td><td class="">API</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>This function will make DataTables recalculate the column sizes, based on the data 
contained in the table and the sizes applied to the columns (in the DOM, CSS or 
through the sWidth parameter). This can be useful when the width of the table's 
parent element changes (for example a window resize).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnAdjustColumnSizing</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">boolean</i>} [default=<span class="doc_default">true</span>]: Redraw the table or not, you will typically want to</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_437410" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bPaginate"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(window).bind(</code><code class="js string">'resize'</code><code class="js plain">, </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnAdjustColumnSizing();</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnClearTable</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Quickly and simply clear a table</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnClearTable</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: redraw the table or not</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_305546" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnClearTable();</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnClose</td><td class="">API</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>The exact opposite of 'opening' a row, this function will close any rows which 
are currently 'open'.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnClose</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: the table row to 'close'</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">int</i>}: 0 on success, or 1 if failed (can't find the row)</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_995232" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable;</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// 'open' an information row when a row is clicked on</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example tbody tr'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( oTable.fnIsOpen(</code><code class="js keyword">this</code><code class="js plain">) ) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnClose( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} </code><code class="js keyword">else</code> <code class="js plain">{</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnOpen( </code><code class="js keyword">this</code><code class="js plain">, </code><code class="js string">"Temporary row opened"</code><code class="js plain">, </code><code class="js string">"info_row"</code> <code class="js plain">);</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number14 index13 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnCookieCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Customise the cookie and / or the parameters being stored when using
DataTables with state saving enabled. This function is called whenever
the cookie is modified, and it expects a fully formed cookie string to be
returned. Note that the data object passed in is a Javascript object which
must be converted to a string (JSON.stringify for example).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnCookieCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: Name of the cookie defined by DataTables</li><li>{<i class="doc_param">object</i>}: Data to be stored in the cookie</li><li>{<i class="doc_param">string</i>}: Cookie expires string</li><li>{<i class="doc_param">string</i>}: Path of the cookie to set</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">string</i>}: Cookie formatted string (which should be encoded by
   using encodeURIComponent())</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_366260" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnCookieCallback"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(sName, oData, sExpires, sPath) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Customise oData or sName or whatever else here</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">sName + </code><code class="js string">"="</code><code class="js plain">+JSON.stringify(oData)+</code><code class="js string">"; expires="</code> <code class="js plain">+ sExpires +</code><code class="js string">"; path="</code> <code class="js plain">+ sPath;</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnCreatedCell</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Developer definable function that is called whenever a cell is created (Ajax source,
etc) or processed for input (DOM source). This can be used as a compliment to mRender
allowing you to modify the DOM element (add background colour for example) when the
element is available.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnCreatedCell</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">element</i>}: The TD node that has been created</li><li>{<i class="doc_param">*</i>}: The Data for the cell</li><li>{<i class="doc_param">array</i>|<i class="doc_param">object</i>}: The data for the whole row</li><li>{<i class="doc_param">int</i>}: The row index for the aoData data store</li><li>{<i class="doc_param">int</i>}: The column index for aoColumns</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_287910" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aTargets"</code><code class="js plain">: [3],</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnCreatedCell"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(nTd, sData, oData, iRow, iCol) {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( sData == </code><code class="js string">"1.7"</code> <code class="js plain">) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">$(nTd).css(</code><code class="js string">'color'</code><code class="js plain">, </code><code class="js string">'blue'</code><code class="js plain">)</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} ]</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">});</code></div><div class="line number12 index11 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnCreatedRow</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>This function is called when a TR element is created (and all TD child
elements have been inserted), or registered if using a DOM source, allowing
manipulation of the TR element (adding classes etc).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnCreatedRow</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: "TR" element for the current row</li><li>{<i class="doc_param">array</i>}: Raw data array for this row</li><li>{<i class="doc_param">int</i>}: The index of this row in aoData</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_282386" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnCreatedRow"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( nRow, aData, iDataIndex ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Bold the grade for all 'A' grade browsers</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( aData[4] == </code><code class="js string">"A"</code> <code class="js plain">)</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'td:eq(4)'</code><code class="js plain">, nRow).html( </code><code class="js string">'&lt;b&gt;A&lt;/b&gt;'</code> <code class="js plain">);</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number11 index10 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnDeleteRow</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Remove a row for the table</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnDeleteRow</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">mixed</i>}: The index of the row from aoData to be deleted, or
   the TR element you want to delete</li><li>{<i class="doc_param">function</i>|<i class="doc_param">null</i>}: Callback function</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Redraw the table or not</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>}: The row that was deleted</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_838320" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Immediately remove the first row</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnDeleteRow( 0 );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnDestroy</td><td class="">API</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Restore the table to it's original state in the DOM by removing all of DataTables 
enhancements, alterations to the DOM structure of the table and event listeners.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnDestroy</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">boolean</i>} [default=<span class="doc_default">false</span>]: Completely remove the table from the DOM</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_632404" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// This example is fairly pointless in reality, but shows how fnDestroy can be used</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnDestroy();</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnDraw</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Redraw the table</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnDraw</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Re-filter and resort (if enabled) the table before the draw.</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_542754" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Re-draw the table - you wouldn't want to do it here, but it's an example :-)</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnDraw();</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnDrawCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>This function is called on every 'draw' event, and allows you to
dynamically modify any aspect you want about the created DOM.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnDrawCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_604334" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnDrawCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( oSettings ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">alert( </code><code class="js string">'DataTables has redrawn the table'</code> <code class="js plain">);</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnFilter</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Filter the input based on data</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnFilter</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: String to filter the table on</li><li>{<i class="doc_param">int</i>|<i class="doc_param">null</i>}: Column to limit filtering to</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">false</span>]: Treat as regular expression or not</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Perform smart filtering or not</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Show the input global filter in it's input box(es)</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Do case-insensitive matching (true) or not (false)</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_494125" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Sometime later - filter...</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnFilter( </code><code class="js string">'test string'</code> <code class="js plain">);</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnFooterCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Identical to fnHeaderCallback() but for the table footer this function
allows you to modify the table footer on every 'draw' even.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnFooterCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: "TR" element for the footer</li><li>{<i class="doc_param">array</i>}: Full table data (as derived from the original HTML)</li><li>{<i class="doc_param">int</i>}: Index for the current display starting point in the 
   display array</li><li>{<i class="doc_param">int</i>}: Index for the current display ending point in the 
   display array</li><li>{<i class="doc_param">array int</i>}: Index array to translate the visual position
   to the full data array</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_792490" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnFooterCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( nFoot, aData, iStart, iEnd, aiDisplay ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">nFoot.getElementsByTagName(</code><code class="js string">'th'</code><code class="js plain">)[0].innerHTML = </code><code class="js string">"Starting index is "</code><code class="js plain">+iStart;</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnFormatNumber</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>When rendering large numbers in the information element for the table
(i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
to have a comma separator for the 'thousands' units (e.g. 1 million is
rendered as "1,000,000") to help readability for the end user. This
function will override the default method DataTables uses.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnFormatNumber</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">int</i>}: number to be formatted</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">string</i>}: formatted string for DataTables to show the number</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_243985" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnFormatNumber"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( iIn ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( iIn &lt; 1000 ) {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">iIn;</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} </code><code class="js keyword">else</code> <code class="js plain">{</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">s=(iIn+</code><code class="js string">""</code><code class="js plain">), </code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">a=s.split(</code><code class="js string">""</code><code class="js plain">), out=</code><code class="js string">""</code><code class="js plain">, </code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">iLen=s.length;</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">for</code> <code class="js plain">( </code><code class="js keyword">var</code> <code class="js plain">i=0 ; i&lt;iLen ; i++ ) {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( i%3 === 0 &amp;&amp; i !== 0 ) {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">out = </code><code class="js string">"'"</code><code class="js plain">+out;</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">out = a[iLen-i-1]+out;</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">out;</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">};</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnGetData</td><td class="">API</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Get the data for the whole table, an individual row or an individual cell based on the 
provided parameters.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnGetData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">int</i>|<i class="doc_param">node</i>}: A TR row node, TD/TH cell node or an integer. If given as
   a TR node then the data source for the whole row will be returned. If given as a
   TD/TH cell node then iCol will be automatically calculated and the data for the
   cell returned. If given as an integer, then this is treated as the aoData internal
   data index for the row (see fnGetPosition) and the data for that row used.</li><li>{<i class="doc_param">int</i>}: Optional column index that you want the data of.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>|<i class="doc_param">object</i>|<i class="doc_param">string</i>}: If mRow is undefined, then the data for all rows is
   returned. If mRow is defined, just data for that row, and is iCol is
   defined, only data for the designated cell is returned.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_987041" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Row data</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.$(</code><code class="js string">'tr'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">data = oTable.fnGetData( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// ... do something with the array / object of data for the row</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="js comments">// Individual cell data</code></div><div class="line number13 index12 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.$(</code><code class="js string">'td'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">sData = oTable.fnGetData( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">alert( </code><code class="js string">'The cell clicked on had the value of '</code><code class="js plain">+sData );</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number20 index19 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnGetNodes</td><td class="">API</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Get an array of the TR nodes that are used in the table's body. Note that you will 
typically want to use the '$' API method in preference to this as it is more 
flexible.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnGetNodes</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">int</i>}: Optional row index for the TR element you want</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>|<i class="doc_param">node</i>}: If iRow is undefined, returns an array of all TR elements
   in the table's body, or iRow is defined, just the TR element requested.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_899534" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Get the nodes from the table</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">nNodes = oTable.fnGetNodes( );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnGetPosition</td><td class="">API</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Get the array indexes of a particular cell from it's DOM element
and column index including hidden columns</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnGetPosition</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: this can either be a TR, TD or TH in the table's body</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">int</i>}: If nNode is given as a TR, then a single index is returned, or
   if given as a cell, an array of [row index, column index (visible), 
   column index (all)] is given.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_51929" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example tbody td'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Get the position of the current data from the node</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">aPos = oTable.fnGetPosition( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Get the data array for this row</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">aData = oTable.fnGetData( aPos[0] );</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Update the data array and return the value</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">aData[ aPos[1] ] = </code><code class="js string">'clicked'</code><code class="js plain">;</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">this</code><code class="js plain">.innerHTML = </code><code class="js string">'clicked'</code><code class="js plain">;</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Init DataTables</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number16 index15 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnHeaderCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>This function is called on every 'draw' event, and allows you to
dynamically modify the header row. This can be used to calculate and
display useful information about the table.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnHeaderCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: "TR" element for the header</li><li>{<i class="doc_param">array</i>}: Full table data (as derived from the original HTML)</li><li>{<i class="doc_param">int</i>}: Index for the current display starting point in the
   display array</li><li>{<i class="doc_param">int</i>}: Index for the current display ending point in the
   display array</li><li>{<i class="doc_param">array int</i>}: Index array to translate the visual position
   to the full data array</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_321621" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnHeaderCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( nHead, aData, iStart, iEnd, aiDisplay ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">nHead.getElementsByTagName(</code><code class="js string">'th'</code><code class="js plain">)[0].innerHTML = </code><code class="js string">"Displaying "</code><code class="js plain">+(iEnd-iStart)+</code><code class="js string">" records"</code><code class="js plain">;</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnInfoCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>The information element can be used to convey information about the current
state of the table. Although the internationalisation options presented by
DataTables are quite capable of dealing with most customisations, there may
be times where you wish to customise the string further. This callback
allows you to do exactly that.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnInfoCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">int</i>}: Starting position in data for the draw</li><li>{<i class="doc_param">int</i>}: End position in data for the draw</li><li>{<i class="doc_param">int</i>}: Total number of rows in the table (regardless of
   filtering)</li><li>{<i class="doc_param">int</i>}: Total number of rows in the data set, after filtering</li><li>{<i class="doc_param">string</i>}: The string that DataTables has formatted using it's
   own rules</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">string</i>}: The string to be displayed in the information element.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_534862" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js string">"fnInfoCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( oSettings, iStart, iEnd, iMax, iTotal, sPre ) {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">iStart +</code><code class="js string">" to "</code><code class="js plain">+ iEnd;</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnInitComplete</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Called when the table has been initialised. Normally DataTables will
initialise sequentially and there will be no need for this function,
however, this does not hold true when using external language information
since that is obtained using an async XHR call.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnInitComplete</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">object</i>}: The JSON object request from the server - only
   present if client-side Ajax sourced data is used</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_86888" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnInitComplete"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">(oSettings, json) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">alert( </code><code class="js string">'DataTables has finished its initialisation.'</code> <code class="js plain">);</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnIsDataTable</td><td class="">API-Static</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Check if a TABLE node is a DataTable table already or not.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnIsDataTable</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: The TABLE node to check if it is a DataTable or not (note that other
   node types can be passed in, but will always return false).</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">boolean</i>}: true the table given is a DataTable, or false otherwise</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_563020" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">ex = document.getElementById(</code><code class="js string">'example'</code><code class="js plain">);</code></div><div class="line number2 index1 alt1"><code class="js keyword">if</code> <code class="js plain">( ! $.fn.DataTable.fnIsDataTable( ex ) ) {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(ex).dataTable();</code></div><div class="line number4 index3 alt1"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnIsOpen</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Check to see if a row is 'open' or not.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnIsOpen</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: the table row to check</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">boolean</i>}: true if the row is currently open, false otherwise</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_497033" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable;</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// 'open' an information row when a row is clicked on</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example tbody tr'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( oTable.fnIsOpen(</code><code class="js keyword">this</code><code class="js plain">) ) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnClose( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} </code><code class="js keyword">else</code> <code class="js plain">{</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnOpen( </code><code class="js keyword">this</code><code class="js plain">, </code><code class="js string">"Temporary row opened"</code><code class="js plain">, </code><code class="js string">"info_row"</code> <code class="js plain">);</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number14 index13 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnOpen</td><td class="">API</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>This function will place a new row directly after a row which is currently 
on display on the page, with the HTML contents that is passed into the 
function. This can be used, for example, to ask for confirmation that a 
particular record should be deleted.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnOpen</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: The table row to 'open'</li><li>{<i class="doc_param">string</i>|<i class="doc_param">node</i>|<i class="doc_param">jQuery</i>}: The HTML to put into the row</li><li>{<i class="doc_param">string</i>}: Class to give the new TD cell</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">node</i>}: The row opened. Note that if the table row passed in as the
   first parameter, is not found in the table, this method will silently
   return.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_966647" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable;</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// 'open' an information row when a row is clicked on</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example tbody tr'</code><code class="js plain">).click( </code><code class="js keyword">function</code> <code class="js plain">() {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( oTable.fnIsOpen(</code><code class="js keyword">this</code><code class="js plain">) ) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnClose( </code><code class="js keyword">this</code> <code class="js plain">);</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} </code><code class="js keyword">else</code> <code class="js plain">{</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oTable.fnOpen( </code><code class="js keyword">this</code><code class="js plain">, </code><code class="js string">"Temporary row opened"</code><code class="js plain">, </code><code class="js string">"info_row"</code> <code class="js plain">);</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number14 index13 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnPageChange</td><td class="">API</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Change the pagination - provides the internal logic for pagination in a simple API 
function. With this function you can have a DataTables table go to the next, 
previous, first or last pages.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnPageChange</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>|<i class="doc_param">int</i>}: Paging action to take: "first", "previous", "next" or "last"
   or page number to jump to (integer), note that page 0 is the first page.</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Redraw the table or not</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_391754" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnPageChange( </code><code class="js string">'next'</code> <code class="js plain">);</code></div><div class="line number4 index3 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnPreDrawCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Called at the very start of each table draw and can be used to cancel the
draw by returning false, any other return (including undefined) results in
the full draw occurring).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnPreDrawCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">boolean</i>}: False will cancel the draw, anything else (including no
   return) will allow it to complete.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_288403" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnPreDrawCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( oSettings ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( $(</code><code class="js string">'#test'</code><code class="js plain">).val() == 1 ) {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js keyword">false</code><code class="js plain">;</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnRender</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 129px;"><div class="purposeInner"><p><code>Deprecated</code> Custom display function that will be called for the 
display of each cell in this column.</p>

<p>Please note that this option has now been deprecated and will be removed
in the next version of DataTables. Please use mRender / mData rather than
fnRender.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnRender</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: Object with the following parameters:</li><li>{<i class="doc_param">int</i>}: The row in aoData</li><li>{<i class="doc_param">int</i>}: The column in question</li><li>{<i class="doc_param">array</i>}: The data for the row in question</li><li>{<i class="doc_param">object</i>}: The settings object for this DataTables instance</li><li>{<i class="doc_param">object</i>}: The data property used for this column</li><li>{<i class="doc_param">*</i>}: The current cell value</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">string</i>}: The string you which to use in the display</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_699734" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">&nbsp;</div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnRowCallback</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>This function allows you to 'post process' each row after it have been
generated for each table draw, but before it is rendered on screen. This
function might be used for setting the row class name etc.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnRowCallback</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: "TR" element for the current row</li><li>{<i class="doc_param">array</i>}: Raw data array for this row</li><li>{<i class="doc_param">int</i>}: The display index for the current table draw</li><li>{<i class="doc_param">int</i>}: The index of the data in the full list of
   rows (after filtering)</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_745243" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnRowCallback"</code><code class="js plain">: </code><code class="js keyword">function</code><code class="js plain">( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Bold the grade for all 'A' grade browsers</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">( aData[4] == </code><code class="js string">"A"</code> <code class="js plain">)</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'td:eq(4)'</code><code class="js plain">, nRow).html( </code><code class="js string">'&lt;b&gt;A&lt;/b&gt;'</code> <code class="js plain">);</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number11 index10 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnServerData</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>This parameter allows you to override the default function which obtains
the data from the server ($.getJSON) so something more suitable for your
application. For example you could use POST data, or pull information from
a Gears or AIR database.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnServerData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: HTTP source to obtain the data from (sAjaxSource)</li><li>{<i class="doc_param">array</i>}: A key/value pair object containing the data to send
   to the server</li><li>{<i class="doc_param">function</i>}: to be called on completion of the data get
   process that will draw the data on the page.</li><li>{<i class="doc_param">object</i>}: DataTables settings object</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_103534" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// POST data to server</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bProcessing"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"xhr.php"</code><code class="js plain">,</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnServerData"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( sSource, aoData, fnCallback, oSettings ) {</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oSettings.jqXHR = $.ajax( {</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"dataType"</code><code class="js plain">: </code><code class="js string">'json'</code><code class="js plain">, </code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"type"</code><code class="js plain">: </code><code class="js string">"POST"</code><code class="js plain">, </code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"url"</code><code class="js plain">: sSource, </code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"data"</code><code class="js plain">: aoData, </code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"success"</code><code class="js plain">: fnCallback</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number17 index16 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnServerData</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>This parameter allows you to override the default function which obtains
the data from the server ($.getJSON) so something more suitable for your
application. For example you could use POST data, or pull information from
a Gears or AIR database.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnServerData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: HTTP source to obtain the data from (sAjaxSource)</li><li>{<i class="doc_param">array</i>}: A key/value pair object containing the data to send
   to the server</li><li>{<i class="doc_param">function</i>}: to be called on completion of the data get
   process that will draw the data on the page.</li><li>{<i class="doc_param">object</i>}: DataTables settings object</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_818519" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// POST data to server</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bProcessing"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"xhr.php"</code><code class="js plain">,</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnServerData"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( sSource, aoData, fnCallback, oSettings ) {</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oSettings.jqXHR = $.ajax( {</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"dataType"</code><code class="js plain">: </code><code class="js string">'json'</code><code class="js plain">, </code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"type"</code><code class="js plain">: </code><code class="js string">"POST"</code><code class="js plain">, </code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"url"</code><code class="js plain">: sSource, </code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"data"</code><code class="js plain">: aoData, </code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"success"</code><code class="js plain">: fnCallback</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number17 index16 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnServerParams</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>It is often useful to send extra data to the server when making an Ajax
request - for example custom filtering information, and this callback
function makes it trivial to send extra information to the server. The
passed in parameter is the data set that has been constructed by
DataTables, and you can add to this or modify it as you require.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnServerParams</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">array</i>}: Data array (array of objects which are name/value
   pairs) that has been constructed by DataTables and will be sent to the
   server. In the case of Ajax sourced data with server-side processing
   this will be an empty array, for server-side processing there will be a
   significant number of parameters!</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">undefined</i>}: Ensure that you modify the aoData array passed in,
   as this is passed by reference.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_878279" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bProcessing"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/server_processing.php"</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnServerParams"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( aoData ) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">aoData.push( { </code><code class="js string">"name"</code><code class="js plain">: </code><code class="js string">"more_data"</code><code class="js plain">, </code><code class="js string">"value"</code><code class="js plain">: </code><code class="js string">"my_value"</code> <code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnServerParams</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>It is often useful to send extra data to the server when making an Ajax
request - for example custom filtering information, and this callback
function makes it trivial to send extra information to the server. The
passed in parameter is the data set that has been constructed by
DataTables, and you can add to this or modify it as you require.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnServerParams</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">array</i>}: Data array (array of objects which are name/value
   pairs) that has been constructed by DataTables and will be sent to the
   server. In the case of Ajax sourced data with server-side processing
   this will be an empty array, for server-side processing there will be a
   significant number of parameters!</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">undefined</i>}: Ensure that you modify the aoData array passed in,
   as this is passed by reference.</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_673036" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bProcessing"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/server_processing.php"</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnServerParams"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( aoData ) {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">aoData.push( { </code><code class="js string">"name"</code><code class="js plain">: </code><code class="js string">"more_data"</code><code class="js plain">, </code><code class="js string">"value"</code><code class="js plain">: </code><code class="js string">"my_value"</code> <code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number10 index9 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnSetColumnVis</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Show a particular column</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnSetColumnVis</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">int</i>}: The column whose display should be changed</li><li>{<i class="doc_param">bool</i>}: Show (true) or hide (false) the column</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Redraw the table or not</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_131485" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Hide the second column after initialisation</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnSetColumnVis( 1, </code><code class="js keyword">false</code> <code class="js plain">);</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnSettings</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Get the settings for a particular table for external manipulation</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnSettings</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">object</i>}: DataTables settings object. See 
   {@link DataTable.models.oSettings}</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_603710" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oSettings = oTable.fnSettings();</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Show an example parameter from the settings</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">alert( oSettings._iDisplayStart );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnSort</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Sort the table by a particular column</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnSort</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">int</i>}: the data index to sort on. Note that this will not match the 
   'display index' if you have hidden data entries</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_296218" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Sort immediately with columns 0 and 1</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnSort( [ [0,</code><code class="js string">'asc'</code><code class="js plain">], [1,</code><code class="js string">'asc'</code><code class="js plain">] ] );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnSortListener</td><td class="">API</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Attach a sort listener to an element for a given column</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnSortListener</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">node</i>}: the element to attach the sort listener to</li><li>{<i class="doc_param">int</i>}: the column that a click on this node will sort on</li><li>{<i class="doc_param">function</i>}: callback function when sort is run</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_377255" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js comments">// Sort on column 1, when 'sorter' is clicked on</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnSortListener( document.getElementById(</code><code class="js string">'sorter'</code><code class="js plain">), 1 );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnStateLoad</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Load the table state. With this function you can define from where, and how, the
state of a table is loaded. By default DataTables will load from its state saving
cookie, but you might wish to use local storage (HTML5) or a server-side database.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnStateLoad</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">object</i>}: The DataTables state object to be loaded</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_985585" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateLoad"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings) {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">o;</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Send an Ajax request to the server to get the data. Note that</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// this is a synchronous request.</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">$.ajax( {</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"url"</code><code class="js plain">: </code><code class="js string">"/state_load"</code><code class="js plain">,</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"async"</code><code class="js plain">: </code><code class="js keyword">false</code><code class="js plain">,</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"dataType"</code><code class="js plain">: </code><code class="js string">"json"</code><code class="js plain">,</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"success"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(json) {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">o = json;</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">o;</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number21 index20 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnStateLoaded</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Callback that is called when the state has been loaded from the state saving method
and the DataTables settings object has been modified as a result of the loaded state.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnStateLoaded</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">object</i>}: The state object that was loaded</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_727243" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Show an alert with the filtering value that was saved</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateLoaded"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings, oData) {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">alert( </code><code class="js string">'Saved filter was: '</code><code class="js plain">+oData.oSearch.sSearch );</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnStateLoadParams</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Callback which allows modification of the saved state prior to loading that state.
This callback is called when the table is loading state from the stored data, but
prior to the settings object being modified by the saved state. Note that for 
plug-in authors, you should use the 'stateLoadParams' event to load parameters for 
a plug-in.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnStateLoadParams</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">object</i>}: The state object that is to be loaded</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_171125" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Remove a saved filter, so filtering is never loaded</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateLoadParams"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings, oData) {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oData.oSearch.sSearch = </code><code class="js string">""</code><code class="js plain">;</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="js comments">// Disallow state loading by returning false</code></div><div class="line number13 index12 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateLoadParams"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings, oData) {</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js keyword">false</code><code class="js plain">;</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number20 index19 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnStateSave</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Save the table state. This function allows you to define where and how the state
information for the table is stored - by default it will use a cookie, but you
might want to use local storage (HTML5) or a server-side database.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnStateSave</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">object</i>}: The state object to be saved</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_236448" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateSave"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings, oData) {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Send an Ajax request to the server with the state object</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">$.ajax( {</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"url"</code><code class="js plain">: </code><code class="js string">"/state_save"</code><code class="js plain">,</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"data"</code><code class="js plain">: oData,</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"dataType"</code><code class="js plain">: </code><code class="js string">"json"</code><code class="js plain">,</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"method"</code><code class="js plain">: </code><code class="js string">"POST"</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"success"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">() {}</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number15 index14 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnStateSaveParams</td><td class="">Callbacks</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>Callback which allows modification of the state to be saved. Called when the table 
has changed state a new state save is required. This method allows modification of
the state saving object prior to actually doing the save, including addition or 
other state properties or modification. Note that for plug-in authors, you should 
use the 'stateSaveParams' event to save parameters for a plug-in.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnStateSaveParams</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>}: DataTables settings object</li><li>{<i class="doc_param">object</i>}: The state object to be saved</li></ol></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_586837" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Remove a saved filter, so filtering is never saved</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bStateSave"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"fnStateSaveParams"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">(oSettings, oData) {</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">oData.oSearch.sSearch = </code><code class="js string">""</code><code class="js plain">;</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnTables</td><td class="">API-Static</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Get all DataTable tables that have been initialised - optionally you can select to
get only currently visible tables.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnTables</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">boolean</i>} [default=<span class="doc_default">false</span>]: Flag to indicate if you want all (default) or 
   visible tables only.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">array</i>}: Array of TABLE nodes (not DataTable instances) which are DataTables</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_573687" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">table = $.fn.dataTable.fnTables(</code><code class="js keyword">true</code><code class="js plain">);</code></div><div class="line number2 index1 alt1"><code class="js keyword">if</code> <code class="js plain">( table.length &gt; 0 ) {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(table).dataTable().fnAdjustColumnSizing();</code></div><div class="line number4 index3 alt1"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnUpdate</td><td class="">API</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Update a table cell or row - this method will accept either a single value to update the cell with, an array of values with one element for each column or
an object in the same format as the original data source. The function is
self-referencing in order to make the multi column updates easier.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnUpdate</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">object</i>|<i class="doc_param">array</i>|<i class="doc_param">string</i>}: Data to update the cell/row with</li><li>{<i class="doc_param">node</i>|<i class="doc_param">int</i>}: TR element you want to update or the aoData index</li><li>{<i class="doc_param">int</i>}: The column to update (set to undefined to update the whole row)</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Redraw the table or not</li><li>{<i class="doc_param">bool</i>} [default=<span class="doc_default">true</span>]: Perform pre-draw actions or not</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">int</i>}: 0 on success, 1 on error</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_488726" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnUpdate( </code><code class="js string">'Example update'</code><code class="js plain">, 0, 0 ); </code><code class="js comments">// Single cell</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">oTable.fnUpdate( [</code><code class="js string">'a'</code><code class="js plain">, </code><code class="js string">'b'</code><code class="js plain">, </code><code class="js string">'c'</code><code class="js plain">, </code><code class="js string">'d'</code><code class="js plain">, </code><code class="js string">'e'</code><code class="js plain">], 1 ); </code><code class="js comments">// Row</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnVersionCheck</td><td class="">API</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Provide a common method for plug-ins to check the version of DataTables being used, in order
to ensure compatibility.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnVersionCheck</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: Version string to check for, in the format "X.Y.Z". Note that the
   formats "X" and "X.Y" are also acceptable.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">boolean</i>}: true if this version of DataTables is greater or equal to the required
   version, or false if this version of DataTales is not suitable</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_940926" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready(</code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable();</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">alert( oTable.fnVersionCheck( </code><code class="js string">'1.9.0'</code> <code class="js plain">) );</code></div><div class="line number4 index3 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">fnVersionCheck</td><td class="">API-Static</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Provide a common method for plug-ins to check the version of DataTables being used, in order
to ensure compatibility.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>fnVersionCheck</td></tr><tr><td valign="top"><b>Type</b>:</td><td>function</td></tr><tr><td valign="top"><b>Inputs</b>:</td><td><ol class="doc_params"><li>{<i class="doc_param">string</i>}: Version string to check for, in the format "X.Y.Z". Note that the
   formats "X" and "X.Y" are also acceptable.</li></ol></td></tr><tr><td valign="top"><b>Returns</b>:</td><td>{<i class="doc_param">boolean</i>}: true if this version of DataTables is greater or equal to the required
   version, or false if this version of DataTales is not suitable</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_943880" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">alert( $.fn.dataTable.fnVersionCheck( </code><code class="js string">'1.9.0'</code> <code class="js plain">) );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iCookieDuration</td><td class="">Options</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Duration of the cookie which is used for storing session information. This
value is given in seconds.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iCookieDuration</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>7200 <i>(2 hours)</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_952643" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iCookieDuration"</code><code class="js plain">: 60*60*24; </code><code class="js comments">// 1 day</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iDataSort</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>The column index (starting from 0!) that you wish a sort to be performed
upon when this column is selected for sorting. This can be used for sorting
on hidden columns for example.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iDataSort</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>-1 <i>Use automatically calculated column index</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_486332" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"iDataSort"</code><code class="js plain">: 1, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"iDataSort"</code><code class="js plain">: 1 },</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iDeferLoading</td><td class="">Options</td><td class=""><div class="purpose" style="height: 253px;"><div class="purposeInner"><p>When enabled DataTables will not make a request to the server for the first
page draw - rather it will use the data already on the page (no sorting etc
will be applied to it), thus saving on an XHR at load time. iDeferLoading
is used to indicate that deferred loading is required, but it is also used
to tell DataTables how many records there are in the full table (allowing
the information element and pagination to be displayed correctly). In the case
where a filtering is applied to the table on initial load, this can be
indicated by giving the parameter as an array, where the first element is
the number of records available after filtering and the second element is the
number of records without filtering (allowing the table information element
to be shown correctly).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iDeferLoading</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_504486" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// 57 records available in the table, no filtering applied</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/server_processing.php"</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iDeferLoading"</code><code class="js plain">: 57</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// 57 records after filtering, 100 without filtering (an initial filter applied)</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/server_processing.php"</code><code class="js plain">,</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iDeferLoading"</code><code class="js plain">: [ 57, 100 ],</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oSearch"</code><code class="js plain">: {</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"my_filter"</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number21 index20 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iDisplayLength</td><td class="">Options</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Number of rows to display on a single page when using pagination. If
feature enabled (bLengthChange) then the end user will be able to override
this to a custom setting using a pop-up menu.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iDisplayLength</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>10</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_133968" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iDisplayLength"</code><code class="js plain">: 50</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iDisplayStart</td><td class="">Options</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Define the starting point for data display when using DataTables with
pagination. Note that this parameter is the number of records, rather than
the page number, so if you have 10 records per page and want to start on
the third page, it should be "20".</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iDisplayStart</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>0</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_29119" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iDisplayStart"</code><code class="js plain">: 20</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iScrollLoadGap</td><td class="">Options</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>The scroll gap is the amount of scrolling that is left to go before
DataTables will load the next 'page' of data automatically. You typically
want a gap which is big enough that the scrolling will be smooth for the
user, while not so large that it will load more data than need.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iScrollLoadGap</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>100</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_266519" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollInfinite"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollCollapse"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iScrollLoadGap"</code><code class="js plain">: 50</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">iTabIndex</td><td class="">Options</td><td class=""><div class="purpose" style="height: 161px;"><div class="purposeInner"><p>By default DataTables allows keyboard navigation of the table (sorting, paging,
and filtering) by adding a tabindex attribute to the required elements. This
allows you to tab through the controls and press the enter key to activate them.
The tabindex is default 0, meaning that the tab follows the flow of the document.
You can overrule this using this parameter if you wish. Use a value of -1 to
disable built-in keyboard navigation.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>iTabIndex</td></tr><tr><td valign="top"><b>Type</b>:</td><td>int</td></tr><tr><td valign="top"><b>Default</b>:</td><td>0</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_207579" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"iTabIndex"</code><code class="js plain">: 1</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">mData</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 573px;"><div class="purposeInner"><p>This property can be used to read data from any JSON data source property,
including deeply nested objects / properties. mData can be given in a
number of different ways which effect its behaviour:
  </p><ul>
    <li>integer - treated as an array index for the data source. This is the
      default that DataTables uses (incrementally increased for each column).</li>
    <li>string - read an object property from the data source. Note that you can
      use Javascript dotted notation to read deep properties / arrays from the
      data source.</li>
    <li>null - the sDefaultContent option will be used for the cell (null
      by default, so you will need to specify the default content you want -
      typically an empty string). This can be useful on generated columns such 
      as edit / delete action columns.</li>
    <li>function - the function given will be executed whenever DataTables 
      needs to set or get the data for a cell in the column. The function 
      takes three parameters:
      <ul>
        <li>{array|object} The data source for the row</li>
        <li>{string} The type call data requested - this will be 'set' when
          setting data or 'filter', 'display', 'type', 'sort' or undefined when 
          gathering data. Note that when <i>undefined</i> is given for the type
          DataTables expects to get the raw data for the object back</li>
        <li>{*} Data to set when the second parameter is 'set'.</li>
      </ul>
      The return value from the function is not required when 'set' is the type
      of call, but otherwise the return is what will be used for the data
      requested.</li>
   </ul><p></p>

<p>Note that prior to DataTables 1.9.2 mData was called mDataProp. The name change
reflects the flexibility of this property and is consistent with the naming of
mRender. If 'mDataProp' is given, then it will still be used by DataTables, as
it automatically maps the old name to the new if required.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>mData</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Use automatically calculated column index</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_984921" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Read table data from objects</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/deep.txt"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"engine"</code> <code class="js plain">},</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"browser"</code> <code class="js plain">},</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"platform.inner"</code> <code class="js plain">},</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"platform.details.0"</code> <code class="js plain">},</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"platform.details.1"</code> <code class="js plain">}</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js plain">} );</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="js comments">// Using mData as a function to provide different information for</code></div><div class="line number17 index16 alt2"><code class="js comments">// sorting, filtering and display. In this case, currency (price)</code></div><div class="line number18 index17 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ {</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ],</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( source, type, val ) {</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">if</code> <code class="js plain">(type === </code><code class="js string">'set'</code><code class="js plain">) {</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">source.price = val;</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// Store the computed dislay and filter values for efficiency</code></div><div class="line number26 index25 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">source.price_display = val==</code><code class="js string">""</code> <code class="js plain">? </code><code class="js string">""</code> <code class="js plain">: </code><code class="js string">"$"</code><code class="js plain">+numberFormat(val);</code></div><div class="line number27 index26 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">source.price_filter&nbsp; = val==</code><code class="js string">""</code> <code class="js plain">? </code><code class="js string">""</code> <code class="js plain">: </code><code class="js string">"$"</code><code class="js plain">+numberFormat(val)+</code><code class="js string">" "</code><code class="js plain">+val;</code></div><div class="line number28 index27 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code><code class="js plain">;</code></div><div class="line number29 index28 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number30 index29 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">else</code> <code class="js keyword">if</code> <code class="js plain">(type === </code><code class="js string">'display'</code><code class="js plain">) {</code></div><div class="line number31 index30 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">source.price_display;</code></div><div class="line number32 index31 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number33 index32 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">else</code> <code class="js keyword">if</code> <code class="js plain">(type === </code><code class="js string">'filter'</code><code class="js plain">) {</code></div><div class="line number34 index33 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">source.price_filter;</code></div><div class="line number35 index34 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number36 index35 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">// 'sort', 'type' and undefined all just use the integer</code></div><div class="line number37 index36 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js plain">source.price;</code></div><div class="line number38 index37 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number39 index38 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} ]</code></div><div class="line number40 index39 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number41 index40 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">mRender</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 560px;"><div class="purposeInner"><p>This property is the rendering partner to mData and it is suggested that
when you want to manipulate data for display (including filtering, sorting etc)
but not altering the underlying data for the table, use this property. mData
can actually do everything this property can and more, but this parameter is
easier to use since there is no 'set' option. Like mData this can be given
in a number of different ways to effect its behaviour, with the addition of 
supporting array syntax for easy outputting of arrays (including arrays of
objects):
  </p><ul>
    <li>integer - treated as an array index for the data source. This is the
      default that DataTables uses (incrementally increased for each column).</li>
    <li>string - read an object property from the data source. Note that you can
      use Javascript dotted notation to read deep properties / arrays from the
      data source and also array brackets to indicate that the data reader should
      loop over the data source array. When characters are given between the array
      brackets, these characters are used to join the data source array together.
      For example: "accounts[, ].name" would result in a comma separated list with
      the 'name' value from the 'accounts' array of objects.</li>
    <li>function - the function given will be executed whenever DataTables 
      needs to set or get the data for a cell in the column. The function 
      takes three parameters:
      <ul>
        <li>{array|object} The data source for the row (based on mData)</li>
        <li>{string} The type call data requested - this will be 'filter', 'display', 
          'type' or 'sort'.</li>
        <li>{array|object} The full data source for the row (not based on mData)</li>
      </ul>
      The return value from the function is what will be used for the data
      requested.</li>
   </ul><p></p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>mRender</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Use mData</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_854058" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Create a comma separated list from an array of objects</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/deep.txt"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"engine"</code> <code class="js plain">},</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"browser"</code> <code class="js plain">},</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"platform"</code><code class="js plain">,</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mRender"</code><code class="js plain">: </code><code class="js string">"[, ].name"</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number14 index13 alt1"><code class="js plain">} );</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="js comments">// Use as a function to create a link from the data source</code></div><div class="line number18 index17 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ {</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ],</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js string">"download_link"</code><code class="js plain">,</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mRender"</code><code class="js plain">: </code><code class="js keyword">function</code> <code class="js plain">( data, type, full ) {</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">return</code> <code class="js string">'&lt;a href="'</code><code class="js plain">+data+</code><code class="js string">'"&gt;Download&lt;/a&gt;'</code><code class="js plain">;</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number26 index25 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} ]</code></div><div class="line number27 index26 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number28 index27 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oAria.sSortAscending</td><td class="">Language</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>ARIA label that is added to the table headers when the column may be
sorted ascending by activing the column (click or return when focused).
Note that the column header is prefixed to this string.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oAria.sSortAscending</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>: activate to sort column ascending</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_877423" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oAria"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sSortAscending"</code><code class="js plain">: </code><code class="js string">" - click/return to sort ascending"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oAria.sSortDescending</td><td class="">Language</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>ARIA label that is added to the table headers when the column may be
sorted descending by activing the column (click or return when focused).
Note that the column header is prefixed to this string.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oAria.sSortDescending</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>: activate to sort column ascending</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_929404" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oAria"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sSortDescending"</code><code class="js plain">: </code><code class="js string">" - click/return to sort descending"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oPaginate.sFirst</td><td class="">Language</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Text to use when using the 'full_numbers' type of pagination for the
button to take the user to the first page.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oPaginate.sFirst</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>First</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_261409" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oPaginate"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sFirst"</code><code class="js plain">: </code><code class="js string">"First page"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oPaginate.sLast</td><td class="">Language</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Text to use when using the 'full_numbers' type of pagination for the
button to take the user to the last page.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oPaginate.sLast</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Last</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_913246" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oPaginate"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sLast"</code><code class="js plain">: </code><code class="js string">"Last page"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oPaginate.sNext</td><td class="">Language</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Text to use for the 'next' pagination button (to take the user to the 
next page).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oPaginate.sNext</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Next</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_954606" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oPaginate"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sNext"</code><code class="js plain">: </code><code class="js string">"Next page"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.oPaginate.sPrevious</td><td class="">Language</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Text to use for the 'previous' pagination button (to take the user to<br><br>the previous page).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.oPaginate.sPrevious</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Previous</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_97511" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oPaginate"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sPrevious"</code><code class="js plain">: </code><code class="js string">"Previous page"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sEmptyTable</td><td class="">Language</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>This string is shown in preference to sZeroRecords when the table is
empty of data (regardless of filtering). Note that this is an optional
parameter - if it is not given, the value of sZeroRecords will be used
instead (either the default or given value).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sEmptyTable</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>No data available in table</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_253522" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sEmptyTable"</code><code class="js plain">: </code><code class="js string">"No data available in table"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sInfo</td><td class="">Language</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>This string gives information to the end user about the information that 
is current on display on the page. The <em>START</em>, <em>END</em> and <em>TOTAL</em> 
variables are all dynamically replaced as the table display updates, and 
can be freely moved or removed as the language requirements change.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sInfo</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Showing _START_ to _END_ of _TOTAL_ entries</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_226426" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sInfo"</code><code class="js plain">: </code><code class="js string">"Got a total of _TOTAL_ entries to show (_START_ to _END_)"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sInfoEmpty</td><td class="">Language</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Display information string for when the table is empty. Typically the 
format of this string should match sInfo.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sInfoEmpty</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Showing 0 to 0 of 0 entries</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_492300" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sInfoEmpty"</code><code class="js plain">: </code><code class="js string">"No entries to show"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sInfoFiltered</td><td class="">Language</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>When a user filters the information in a table, this string is appended 
to the information (sInfo) to give an idea of how strong the filtering 
is. The variable <em>MAX</em> is dynamically updated.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sInfoFiltered</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>(filtered from _MAX_ total entries)</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_531203" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sInfoFiltered"</code><code class="js plain">: </code><code class="js string">" - filtering from _MAX_ records"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sInfoPostFix</td><td class="">Language</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>If can be useful to append extra information to the info string at times,
and this variable does exactly that. This information will be appended to
the sInfo (sInfoEmpty and sInfoFiltered in whatever combination they are
being used) at all times.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sInfoPostFix</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>Empty string</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_913828" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sInfoPostFix"</code><code class="js plain">: </code><code class="js string">"All records shown are derived from real information."</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sInfoThousands</td><td class="">Language</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>DataTables has a build in number formatter (fnFormatNumber) which is used
to format large numbers that are used in the table information. By
default a comma is used, but this can be trivially changed to any
character you wish with this parameter.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sInfoThousands</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>,</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_973688" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sInfoThousands"</code><code class="js plain">: </code><code class="js string">"'"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sLengthMenu</td><td class="">Language</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Detail the action that will be taken when the drop down menu for the
pagination length option is changed. The '<em>MENU</em>' variable is replaced
with a default select list of 10, 25, 50 and 100, and can be replaced
with a custom select box if required.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sLengthMenu</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Show _MENU_ entries</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_488086" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Language change only</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sLengthMenu"</code><code class="js plain">: </code><code class="js string">"Display _MENU_ records"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Language and options change</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sLengthMenu"</code><code class="js plain">: </code><code class="js string">'Display &lt;select&gt;'</code><code class="js plain">+</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="10"&gt;10&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="20"&gt;20&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="30"&gt;30&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="40"&gt;40&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="50"&gt;50&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;option value="-1"&gt;All&lt;/option&gt;'</code><code class="js plain">+</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">'&lt;/select&gt; records'</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number25 index24 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sLoadingRecords</td><td class="">Language</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>When using Ajax sourced data and during the first draw when DataTables is
gathering the data, this message is shown in an empty row in the table to
indicate to the end user the the data is being loaded. Note that this
parameter is not used when loading data by server-side processing, just
Ajax sourced data with client-side processing.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sLoadingRecords</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Loading...</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_923629" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sLoadingRecords"</code><code class="js plain">: </code><code class="js string">"Please wait - loading..."</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sProcessing</td><td class="">Language</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Text which is displayed when the table is processing a user action
(usually a sort command or similar).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sProcessing</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Processing...</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_687696" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sProcessing"</code><code class="js plain">: </code><code class="js string">"DataTables is currently busy"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sSearch</td><td class="">Language</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Details the actions that will be taken when the user types into the
filtering input text box. The variable "<em>INPUT</em>", if used in the string,
is replaced with the HTML text box for the filtering input allowing
control over where it appears in the string. If "<em>INPUT</em>" is not given
then the input box is appended to the string automatically.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sSearch</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>Search:</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_790918" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Input text box will be appended at the end automatically</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"Filter records:"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Specify where the filter should appear</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"Apply filter _INPUT_ to table"</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number18 index17 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sUrl</td><td class="">Language</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>All of the language information can be stored in a file on the
server-side, which DataTables will look up if this parameter is passed.
It must store the URL of the language file, which is in a JSON format,
and the object has the same properties as the oLanguage object in the
initialiser object (i.e. the above parameters). Please refer to one of
the example language files to see how this works in action.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sUrl</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>Empty string - i.e. disabled</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_370017" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sUrl"</code><code class="js plain">: </code><code class="js string">"<a href="http://www.sprymedia.co.uk/dataTables/lang.txt">http://www.sprymedia.co.uk/dataTables/lang.txt</a>"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oLanguage.sZeroRecords</td><td class="">Language</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Text shown inside the table records when the is no information to be
displayed after filtering. sEmptyTable is shown when there is simply no
information in the table at all (regardless of filtering).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oLanguage.sZeroRecords</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>No matching records found</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_124558" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oLanguage"</code><code class="js plain">: {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sZeroRecords"</code><code class="js plain">: </code><code class="js string">"No records to display"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">oSearch</td><td class="">Options</td><td class=""><div class="purpose" style="height: 161px;"><div class="purposeInner"><p>This parameter allows you to define the global filtering state at
initialisation time. As an object the "sSearch" parameter must be
defined, but all other parameters are optional. When "bRegex" is true,
the search string will be treated as a regular expression, when false
(default) it will be treated as a straight string. When "bSmart"
DataTables will use it's smart filtering methods (to word match at
any point in the data), when false this will not be done.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>oSearch</td></tr><tr><td valign="top"><b>Type</b>:</td><td></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_584634" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"oSearch"</code><code class="js plain">: {</code><code class="js string">"sSearch"</code><code class="js plain">: </code><code class="js string">"Initial search"</code><code class="js plain">}</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sAjaxDataProp</td><td class="">Options</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>By default DataTables will look for the property 'aaData' when obtaining
data from an Ajax source or for server-side processing - this parameter
allows that property to be changed. You can use Javascript dotted object
notation to get a data source for multiple levels of nesting.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sAjaxDataProp</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>aaData</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_182731" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Get data from { "data": [...] }</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/data.txt"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxDataProp"</code><code class="js plain">: </code><code class="js string">"data"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">// Get data from { "data": { "inner": [...] } }</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/data.txt"</code><code class="js plain">,</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxDataProp"</code><code class="js plain">: </code><code class="js string">"data.inner"</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number16 index15 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sAjaxDataProp</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>By default DataTables will look for the property 'aaData' when obtaining
data from an Ajax source or for server-side processing - this parameter
allows that property to be changed. You can use Javascript dotted object
notation to get a data source for multiple levels of nesting.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sAjaxDataProp</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>aaData</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_311897" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Get data from { "data": [...] }</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/data.txt"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxDataProp"</code><code class="js plain">: </code><code class="js string">"data"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">// Get data from { "data": { "inner": [...] } }</code></div><div class="line number11 index10 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"sources/data.txt"</code><code class="js plain">,</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxDataProp"</code><code class="js plain">: </code><code class="js string">"data.inner"</code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number16 index15 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sAjaxSource</td><td class="">Options</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>You can instruct DataTables to load data from an external source using this
parameter (use aData if you want to pass data in you already have). Simply
provide a url a JSON object can be obtained from. This object must include
the parameter 'aaData' which is the data source for the table.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sAjaxSource</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_611965" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"<a href="http://www.sprymedia.co.uk/dataTables/json.php">http://www.sprymedia.co.uk/dataTables/json.php</a>"</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sAjaxSource</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>You can instruct DataTables to load data from an external source using this
parameter (use aData if you want to pass data in you already have). Simply
provide a url a JSON object can be obtained from. This object must include
the parameter 'aaData' which is the data source for the table.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sAjaxSource</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_747869" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"<a href="http://www.sprymedia.co.uk/dataTables/json.php">http://www.sprymedia.co.uk/dataTables/json.php</a>"</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sCellType</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Change the cell type created for the column - either TD cells or TH cells. This
can be useful as TH cells have semantic meaning in the table body, allowing them
to act as a header for a row (you may wish to add scope='row' to the TH elements).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sCellType</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>td</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_106512" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Make the first column use TH cells</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js keyword">var</code> <code class="js plain">oTable = $(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ {</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ],</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sCellType"</code><code class="js plain">: </code><code class="js string">"th"</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">} ]</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number9 index8 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sClass</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>Class to give to each cell in this column.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sClass</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>Empty string</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_423164" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sClass"</code><code class="js plain">: </code><code class="js string">"my_class"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sClass"</code><code class="js plain">: </code><code class="js string">"my_class"</code> <code class="js plain">},</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sContentPadding</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 230px;"><div class="purposeInner"><p>When DataTables calculates the column widths to assign to each column,
it finds the longest string in each column and then constructs a
temporary table and reads the widths from that. The problem with this
is that "mmm" is much wider then "iiii", but the latter is a longer 
string - thus the calculation can go wrong (doing it properly and putting
it into an DOM object and measuring that is horribly(!) slow). Thus as
a "work around" we provide this option. It will append its value to the
text that is found to be the longest string for the column - i.e. padding.
Generally you shouldn't need this, and it is not documented on the 
general DataTables.net documentation</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sContentPadding</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>Empty string<i></i></i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_565149" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sContentPadding"</code><code class="js plain">: </code><code class="js string">"mmm"</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number13 index12 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sCookiePrefix</td><td class="">Options</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>This parameter can be used to override the default prefix that DataTables
assigns to a cookie when state saving is enabled.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sCookiePrefix</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>SpryMedia_DataTables_</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_859402" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sCookiePrefix"</code><code class="js plain">: </code><code class="js string">"my_datatable_"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sDefaultContent</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>Allows a default value to be given for a column's data, and will be used
whenever a null data source is encountered (this can be because mData
is set to null, or because the data source itself is null).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sDefaultContent</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_279034" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sDefaultContent"</code><code class="js plain">: </code><code class="js string">"Edit"</code><code class="js plain">,</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aTargets"</code><code class="js plain">: [ -1 ]</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js plain">} );</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number16 index15 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"mData"</code><code class="js plain">: </code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sDefaultContent"</code><code class="js plain">: </code><code class="js string">"Edit"</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number26 index25 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number27 index26 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number28 index27 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sDom</td><td class="">Options</td><td class=""><div class="purpose" style="height: 562px;"><div class="purposeInner"><p>This initialisation variable allows you to specify exactly where in the
DOM you want DataTables to inject the various controls it adds to the page
(for example you might want the pagination controls at the top of the
table). DIV elements (with or without a custom class) can also be added to
aid styling. The follow syntax is used:
  </p><ul>
    <li>The following options are allowed:	
      <ul>
        <li>'l' - Length changing</li>'f' - Filtering input
        <li>'t' - The table!</li>
        <li>'i' - Information</li>
        <li>'p' - Pagination</li>
        <li>'r' - pRocessing</li>
      </ul>
    </li>
    <li>The following constants are allowed:
      <ul>
        <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
        <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
      </ul>
    </li>
    <li>The following syntax is expected:
      <ul>
        <li>'&lt;' and '&gt;' - div elements</li>
        <li>'&lt;"class" and '&gt;' - div with a class</li>
        <li>'&lt;"#id" and '&gt;' - div with an ID</li>
      </ul>
    </li>
    <li>Examples:
      <ul>
        <li>'&lt;"wrapper"flipt&gt;'</li>
        <li>'<lf<t>ip&gt;'</lf<t></li>
      </ul>
    </li>
  </ul><p></p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sDom</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>lfrtip <i>(when bJQueryUI is false)</i> <b>or</b> 
   &lt;"H"lfr&gt;t&lt;"F"ip&gt; <i>(when bJQueryUI is true)</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_935227" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sDom"</code><code class="js plain">: </code><code class="js string">'&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sName</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>This parameter is only used in DataTables' server-side processing. It can
be exceptionally useful to know what columns are being displayed on the
client side, and to map these to database fields. When defined, the names
also allow DataTables to reorder information from the server if it comes
back in an unexpected order (i.e. if you switch your columns around on the
client-side, your server-side code does not also need updating).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sName</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>Empty string</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_581179" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"engine"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] },</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"browser"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 1 ] },</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"platform"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 2 ] },</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"version"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 3 ] },</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"grade"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 4 ] }</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number12 index11 alt1"><code class="js plain">} );</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number16 index15 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"engine"</code> <code class="js plain">},</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"browser"</code> <code class="js plain">},</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"platform"</code> <code class="js plain">},</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"version"</code> <code class="js plain">},</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sName"</code><code class="js plain">: </code><code class="js string">"grade"</code> <code class="js plain">}</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number26 index25 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sPaginationType</td><td class="">Options</td><td class=""><div class="purpose" style="height: 69px;"><div class="purposeInner"><p>DataTables features two different built-in pagination interaction methods
('two_button' or 'full_numbers') which present different page controls to
the end user. Further methods can be added using the API (see below).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sPaginationType</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>two_button</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_418671" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sPaginationType"</code><code class="js plain">: </code><code class="js string">"full_numbers"</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number5 index4 alt2"><code class="js plain">} )</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sScrollX</td><td class="">Features</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>Enable horizontal scrolling. When a table is too wide to fit into a certain
layout, or you have a large number of columns in the table, you can enable
x-scrolling to show the table in a viewport, which can be scrolled. This
property can be any CSS unit, or a number (in which case it will be treated
as a pixel measurement).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sScrollX</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>blank string - i.e. disabled</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_862698" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollX"</code><code class="js plain">: </code><code class="js string">"100%"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bScrollCollapse"</code><code class="js plain">: </code><code class="js keyword">true</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sScrollXInner</td><td class="">Options</td><td class=""><div class="purpose" style="height: 115px;"><div class="purposeInner"><p>This property can be used to force a DataTable to use more width than it
might otherwise do when x-scrolling is enabled. For example if you have a
table which requires to be well spaced, this parameter is useful for
"over-sizing" the table, and thus forcing scrolling. This property can by
any CSS unit, or a number (in which case it will be treated as a pixel
measurement).</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sScrollXInner</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>blank string - i.e. disabled</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_673290" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollX"</code><code class="js plain">: </code><code class="js string">"100%"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollXInner"</code><code class="js plain">: </code><code class="js string">"110%"</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sScrollY</td><td class="">Features</td><td class=""><div class="purpose" style="height: 138px;"><div class="purposeInner"><p>Enable vertical scrolling. Vertical scrolling will constrain the DataTable
to the given height, and enable scrolling for any data which overflows the
current viewport. This can be used as an alternative to paging to display
a lot of data in a small area (although paging and scrolling can both be
enabled at the same time). This property can be any CSS unit, or a number
(in which case it will be treated as a pixel measurement).</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sScrollY</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td><i>blank string - i.e. disabled</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_518626" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sScrollY"</code><code class="js plain">: </code><code class="js string">"200px"</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bPaginate"</code><code class="js plain">: </code><code class="js keyword">false</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number6 index5 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sServerMethod</td><td class="">Options</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Set the HTTP method that is used to make the Ajax call for server-side
processing or Ajax sourced data.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sServerMethod</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>GET</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_74043" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/post.php"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sServerMethod"</code><code class="js plain">: </code><code class="js string">"POST"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sServerMethod</td><td class="">Server-side</td><td class=""><div class="purpose" style="height: 46px;"><div class="purposeInner"><p>Set the HTTP method that is used to make the Ajax call for server-side
processing or Ajax sourced data.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sServerMethod</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>GET</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_22051" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number2 index1 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"bServerSide"</code><code class="js plain">: </code><code class="js keyword">true</code><code class="js plain">,</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sAjaxSource"</code><code class="js plain">: </code><code class="js string">"scripts/post.php"</code><code class="js plain">,</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"sServerMethod"</code><code class="js plain">: </code><code class="js string">"POST"</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number7 index6 alt2"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sSortDataType</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Defines a data source type for the sorting which can be used to read
real-time information from the table (updating the internally cached
version) prior to sorting. This allows sorting to occur on user editable
elements such as form inputs.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sSortDataType</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>std</td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_921124" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-text"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 2, 3 ] },</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sType"</code><code class="js plain">: </code><code class="js string">"numeric"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 3 ] },</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-select"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 4 ] },</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-checkbox"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 5 ] }</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number11 index10 alt2"><code class="js plain">} );</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="js comments">// Using aoColumns</code></div><div class="line number15 index14 alt2"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-text"</code> <code class="js plain">},</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-text"</code><code class="js plain">, </code><code class="js string">"sType"</code><code class="js plain">: </code><code class="js string">"numeric"</code> <code class="js plain">},</code></div><div class="line number22 index21 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-select"</code> <code class="js plain">},</code></div><div class="line number23 index22 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sSortDataType"</code><code class="js plain">: </code><code class="js string">"dom-checkbox"</code> <code class="js plain">}</code></div><div class="line number24 index23 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number25 index24 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number26 index25 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sTitle</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 23px;"><div class="purposeInner"><p>The title of this column.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sTitle</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Derived from the 'TH' value for this column in the 
   original HTML table.</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_458050" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"My column title"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sTitle"</code><code class="js plain">: </code><code class="js string">"My column title"</code> <code class="js plain">},</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="odd"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sType</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 161px;"><div class="purposeInner"><p>The type allows you to specify how the data for this column will be sorted.
Four types (string, numeric, date and html (which will strip HTML tags
before sorting)) are currently available. Note that only date formats
understood by Javascript's Date() object will be accepted as type date. For
example: "Mar 26, 2008 5:03 PM". May take the values: 'string', 'numeric',
'date' or 'html' (by default). Further types can be adding through
plug-ins.</p></div></div></td></tr><tr class=" odd"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sType</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Auto-detected from raw data</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_904814" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sType"</code><code class="js plain">: </code><code class="js string">"html"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sType"</code><code class="js plain">: </code><code class="js string">"html"</code> <code class="js plain">},</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr><tr class="even"><td class="control center"><img src="./DataTables - Reference_files/details_close.png"></td><td class="">sWidth</td><td class="">Columns</td><td class=""><div class="purpose" style="height: 92px;"><div class="purposeInner"><p>Defining the width of the column, this parameter may take any CSS value
(3em, 20px etc). DataTables applies 'smart' widths to columns which have not
been given a specific width through this interface ensuring that the table
remains readable.</p></div></div></td></tr><tr class=" even"><td class="details" colspan="4"><div class="innerDetails" style="display: block;"><div class="column_details"><table cellpadding="5" cellspacing="0" border="0"><tbody><tr><td valign="top" width="30%"><b>Parameter</b>:</td><td>sWidth</td></tr><tr><td valign="top"><b>Type</b>:</td><td>string</td></tr><tr><td valign="top"><b>Default</b>:</td><td>null <i>Automatic</i></td></tr></tbody></table></div><div class="column_code"><div><div id="highlighter_889567" class="syntaxhighlighter  js"><div class="toolbar"><span><a href="http://datatables.net/ref#" class="toolbar_item command_jsbin jsbin">Run in JS Bin</a></span><span><a href="http://datatables.net/ref#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">// Using aoColumnDefs</code></div><div class="line number2 index1 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumnDefs"</code><code class="js plain">: [ </code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sWidth"</code><code class="js plain">: </code><code class="js string">"20%"</code><code class="js plain">, </code><code class="js string">"aTargets"</code><code class="js plain">: [ 0 ] }</code></div><div class="line number6 index5 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number7 index6 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number8 index7 alt1"><code class="js plain">} );</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">// Using aoColumns</code></div><div class="line number12 index11 alt1"><code class="js plain">$(document).ready( </code><code class="js keyword">function</code><code class="js plain">() {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">$(</code><code class="js string">'#example'</code><code class="js plain">).dataTable( {</code></div><div class="line number14 index13 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js string">"aoColumns"</code><code class="js plain">: [ </code></div><div class="line number15 index14 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">{ </code><code class="js string">"sWidth"</code><code class="js plain">: </code><code class="js string">"20%"</code> <code class="js plain">},</code></div><div class="line number16 index15 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number17 index16 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code><code class="js plain">,</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">null</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">]</code></div><div class="line number21 index20 alt2"><code class="js spaces">&nbsp;&nbsp;</code><code class="js plain">} );</code></div><div class="line number22 index21 alt1"><code class="js plain">} );</code></div></div></td></tr></tbody></table></div></div></div><div class="clear"></div></div></td></tr></tbody></table><div class="dataTables_info" id="reference_info">Showing 1 to 126 of 126 entries</div></div>
			
			<p class="css_small clear" style="padding-top:2em;">
				There are also a number of <a href="http://datatables.net/plug-ins/api">API plug-ins</a> and	
				<a href="http://datatables.net/extras">Extras</a> which extend the capabilities of DataTables. 
				If you don't see what you are looking for here, it is possible that a
				plug-in has implemented the functionality you need.
			</p>
			
						<div id="fw_footer">
				<div class="css_center">
					DataTables designed and created by <a href="http://www.sprymedia.co.uk/">SpryMedia</a> © 2008-2013<br>
					DataTables is dual licensed under the <a href="http://datatables.net/license_gpl2">GPL v2 license</a> or a <a href="http://datatables.net/license_bsd">BSD (3-point) license</a>.
				</div>
			</div>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-365466-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

		</div>
		</div>
		
	
</body></html>